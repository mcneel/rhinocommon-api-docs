<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>LayerTable.FindName Method (String)</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Rhino.DocObjects.Tables.LayerTable.FindName(System.String)" /><meta name="Description" content="Finds the layer with a given name. If multiple layers exist that have the same name, the first match layer index will be returned. Deleted layers have no name.The default layer is NOT included in the search." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.DocObjects.Tables" /><meta name="file" content="M_Rhino_DocObjects_Tables_LayerTable_FindName" /><meta name="guid" content="M_Rhino_DocObjects_Tables_LayerTable_FindName" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_DocObjects_Tables.htm" title="Rhino.DocObjects.Tables" tocid="N_Rhino_DocObjects_Tables">Rhino.DocObjects.Tables</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_DocObjects_Tables_LayerTable.htm" title="LayerTable Class" tocid="T_Rhino_DocObjects_Tables_LayerTable">LayerTable Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Rhino_DocObjects_Tables_LayerTable.htm" title="LayerTable Methods" tocid="Methods_T_Rhino_DocObjects_Tables_LayerTable">LayerTable Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_DocObjects_Tables_LayerTable_FindName.htm" title="FindName Method " tocid="Overload_Rhino_DocObjects_Tables_LayerTable_FindName">FindName Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Tables_LayerTable_FindName.htm" title="FindName Method (String)" tocid="M_Rhino_DocObjects_Tables_LayerTable_FindName">FindName Method (String)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Tables_LayerTable_FindName_1.htm" title="FindName Method (String, Int32)" tocid="M_Rhino_DocObjects_Tables_LayerTable_FindName_1">FindName Method (String, Int32)</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>LayerTable<span id="LST266ACC7D_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST266ACC7D_0?cpp=::|nu=.");</script>FindName Method (String)</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Finds the layer with a given name. If multiple layers exist that have the same name, the
            first match layer index will be returned.
            <p>Deleted layers have no name.</p><p>The default layer is NOT included in the search. If required, use the overload with startIndex input.</p></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino_DocObjects_Tables.htm">Rhino.DocObjects.Tables</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="since"><strong>Since:</strong> 6.0</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">Layer</span> <span class="identifier">FindName</span>(
	<span class="identifier">string</span> <span class="parameter">layerName</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">FindName</span> ( 
	<span class="parameter">layerName</span> <span class="keyword">As</span> <span class="identifier">String</span>
) <span class="keyword">As</span> <span class="identifier">Layer</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">layerName</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.string" target="_blank">System<span id="LST266ACC7D_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST266ACC7D_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>String</a><br />name of layer to search for. The search ignores case.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="T_Rhino_DocObjects_Layer.htm">Layer</a><br />
            A layer, or null.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBBBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','cs','1','2');return false;">C#</a></div><div id="ID0EBBBBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBBBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">partial</span> <span class="highlight-keyword">class</span> Examples
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> Rhino.Commands.Result AddLayer(Rhino.RhinoDoc doc)
  {
    <span class="highlight-comment">// Cook up an unused layer name</span>
    <span class="highlight-keyword">string</span> unused_name = doc.Layers.GetUnusedLayerName(<span class="highlight-keyword">false</span>);

    <span class="highlight-comment">// Prompt the user to enter a layer name</span>
    Rhino.Input.Custom.GetString gs = <span class="highlight-keyword">new</span> Rhino.Input.Custom.GetString();
    gs.SetCommandPrompt(<span class="highlight-literal">"Name of layer to add"</span>);
    gs.SetDefaultString(unused_name);
    gs.AcceptNothing(<span class="highlight-keyword">true</span>);
    gs.Get();
    <span class="highlight-keyword">if</span> (gs.CommandResult() != Rhino.Commands.Result.Success)
      <span class="highlight-keyword">return</span> gs.CommandResult();

    <span class="highlight-comment">// Was a layer named entered?</span>
    <span class="highlight-keyword">string</span> layer_name = gs.StringResult().Trim();
    <span class="highlight-keyword">if</span> (<span class="highlight-keyword">string</span>.IsNullOrEmpty(layer_name))
    {
      Rhino.RhinoApp.WriteLine(<span class="highlight-literal">"Layer name cannot be blank."</span>);
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Cancel;
    }

    <span class="highlight-comment">// Is the layer name valid?</span>
    <span class="highlight-keyword">if</span> (!Rhino.DocObjects.Layer.IsValidName(layer_name))
    {
      Rhino.RhinoApp.WriteLine(layer_name + <span class="highlight-literal">" is not a valid layer name."</span>);
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Cancel;
    }

    <span class="highlight-comment">// Does a layer with the same name already exist?</span>
    <span class="highlight-keyword">int</span> layer_index = doc.Layers.Find(layer_name, <span class="highlight-keyword">true</span>);
    <span class="highlight-keyword">if</span> (layer_index &gt;= <span class="highlight-number">0</span>)
    {
      Rhino.RhinoApp.WriteLine(<span class="highlight-literal">"A layer with the name {0} already exists."</span>, layer_name);
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Cancel;
    }

    <span class="highlight-comment">// Add a new layer to the document</span>
    layer_index = doc.Layers.Add(layer_name, System.Drawing.Color.Black);
    <span class="highlight-keyword">if</span> (layer_index &lt; <span class="highlight-number">0</span>)
    {
      Rhino.RhinoApp.WriteLine(<span class="highlight-literal">"Unable to add {0} layer."</span>, layer_name);
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure;
    }
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success;
  }
}</pre></div><div id="ID0EBBBBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Partial</span> <span class="highlight-keyword">Class</span> Examples
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Function</span> AddLayer(<span class="highlight-keyword">ByVal</span> doc <span class="highlight-keyword">As</span> Rhino.RhinoDoc) <span class="highlight-keyword">As</span> Rhino.Commands.Result
    <span class="highlight-comment">' Cook up an unused layer name</span>
    <span class="highlight-keyword">Dim</span> unused_name <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = doc.Layers.GetUnusedLayerName(<span class="highlight-keyword">False</span>)

    <span class="highlight-comment">' Prompt the user to enter a layer name</span>
    <span class="highlight-keyword">Dim</span> gs <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Rhino.Input.Custom.GetString()
    gs.SetCommandPrompt(<span class="highlight-literal">"Name of layer to add"</span>)
    gs.SetDefaultString(unused_name)
    gs.AcceptNothing(<span class="highlight-keyword">True</span>)
    gs.<span class="highlight-keyword">Get</span>()
    <span class="highlight-keyword">If</span> gs.CommandResult() &lt;&gt; Rhino.Commands.Result.Success <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> gs.CommandResult()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Was a layer named entered?</span>
    <span class="highlight-keyword">Dim</span> layer_name <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = gs.StringResult().Trim()
    <span class="highlight-keyword">If</span> <span class="highlight-keyword">String</span>.IsNullOrEmpty(layer_name) <span class="highlight-keyword">Then</span>
      Rhino.RhinoApp.WriteLine(<span class="highlight-literal">"Layer name cannot be blank."</span>)
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Cancel
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Is the layer name valid?</span>
    <span class="highlight-keyword">If</span> <span class="highlight-keyword">Not</span> Rhino.DocObjects.Layer.IsValidName(layer_name) <span class="highlight-keyword">Then</span>
      Rhino.RhinoApp.WriteLine(layer_name &amp; <span class="highlight-literal">" is not a valid layer name."</span>)
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Cancel
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Does a layer with the same name already exist?</span>
    <span class="highlight-keyword">Dim</span> layer_index <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = doc.Layers.Find(layer_name, <span class="highlight-keyword">True</span>)
    <span class="highlight-keyword">If</span> layer_index &gt;= <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
      Rhino.RhinoApp.WriteLine(<span class="highlight-literal">"A layer with the name {0} already exists."</span>, layer_name)
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Cancel
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Add a new layer to the document</span>
    layer_index = doc.Layers.Add(layer_name, System.Drawing.Color.Black)
    <span class="highlight-keyword">If</span> layer_index &lt; <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
      Rhino.RhinoApp.WriteLine(<span class="highlight-literal">"Unable to add {0} layer."</span>, layer_name)
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Failure
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Success
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBBBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAABBA_tab1" class="codeSnippetContainerTabSingle">Python</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">import</span> Rhino
<span class="highlight-keyword">import</span> scriptcontext
<span class="highlight-keyword">import</span> System.Guid, System.Drawing.Color

<span class="highlight-keyword">def</span> AddLayer():
    <span class="highlight-comment"># Cook up an unused layer name</span>
    unused_name = scriptcontext.doc.Layers.GetUnusedLayerName(False)

    <span class="highlight-comment"># Prompt the user to enter a layer name</span>
    gs = Rhino.Input.Custom.GetString()
    gs.SetCommandPrompt(<span class="highlight-literal">"Name of layer to add"</span>)
    gs.SetDefaultString(unused_name)
    gs.AcceptNothing(True)
    gs.Get()
    <span class="highlight-keyword">if</span> gs.CommandResult()!=Rhino.Commands.Result.Success:
        <span class="highlight-keyword">return</span> gs.CommandResult()

    <span class="highlight-comment"># Was a layer named entered?</span>
    layer_name = gs.StringResult().Trim()
    <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> layer_name:
        <span class="highlight-keyword">print</span> <span class="highlight-literal">"Layer name cannot be blank."</span>
        <span class="highlight-keyword">return</span> Rhino.Commands.Result.Cancel

    <span class="highlight-comment"># Is the layer name valid?</span>
    <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> Rhino.DocObjects.Layer.IsValidName(layer_name):
        <span class="highlight-keyword">print</span> layer_name, <span class="highlight-literal">"is not a valid layer name."</span>
        <span class="highlight-keyword">return</span> Rhino.Commands.Result.Cancel

    <span class="highlight-comment"># Does a layer with the same name already exist?</span>
    layer_index = scriptcontext.doc.Layers.Find(layer_name, True)
    <span class="highlight-keyword">if</span> layer_index&gt;=<span class="highlight-number">0</span>:
        <span class="highlight-keyword">print</span> <span class="highlight-literal">"A layer with the name"</span>, layer_name, <span class="highlight-literal">"already exists."</span>
        <span class="highlight-keyword">return</span> Rhino.Commands.Result.Cancel

    <span class="highlight-comment"># Add a new layer to the document</span>
    layer_index = scriptcontext.doc.Layers.Add(layer_name, System.Drawing.Color.Black)
    <span class="highlight-keyword">if</span> layer_index&lt;<span class="highlight-number">0</span>:
        <span class="highlight-keyword">print</span> <span class="highlight-literal">"Unable to add"</span>, layer_name, <span class="highlight-literal">"layer."</span>
        <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure

    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success


<span class="highlight-keyword">if</span> __name__==<span class="highlight-literal">"__main__"</span>:
    AddLayer()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_DocObjects_Tables_LayerTable.htm">LayerTable Class</a></div><div class="seeAlsoStyle"><a href="Overload_Rhino_DocObjects_Tables_LayerTable_FindName.htm">FindName Overload</a></div><div class="seeAlsoStyle"><a href="N_Rhino_DocObjects_Tables.htm">Rhino.DocObjects.Tables Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.18.22124.03000 (Last updated: 5/10/2022)<br />Copyright © 2009-2022 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>