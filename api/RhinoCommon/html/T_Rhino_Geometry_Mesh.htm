<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Mesh Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Mesh class" /><meta name="System.Keywords" content="Rhino.Geometry.Mesh class" /><meta name="Microsoft.Help.F1" content="Rhino.Geometry.Mesh" /><meta name="Microsoft.Help.Id" content="T:Rhino.Geometry.Mesh" /><meta name="Description" content="Represents a geometry type that is defined by vertices and faces. This is often called a face-vertex mesh." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Geometry" /><meta name="file" content="T_Rhino_Geometry_Mesh" /><meta name="guid" content="T_Rhino_Geometry_Mesh" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_Geometry.htm" title="Rhino.Geometry" tocid="N_Rhino_Geometry">Rhino.Geometry</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_Geometry_Mesh.htm" title="Mesh Class" tocid="T_Rhino_Geometry_Mesh">Mesh Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Mesh__ctor.htm" title="Mesh Constructor " tocid="Overload_Rhino_Geometry_Mesh__ctor">Mesh Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Properties_T_Rhino_Geometry_Mesh.htm" title="Mesh Properties" tocid="Properties_T_Rhino_Geometry_Mesh">Mesh Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Rhino_Geometry_Mesh.htm" title="Mesh Methods" tocid="Methods_T_Rhino_Geometry_Mesh">Mesh Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Mesh Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Represents a geometry type that is defined by vertices and faces.
            <p>This is often called a face-vertex mesh.</p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">System<span id="LSTEC3142AA_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <a href="T_Rhino_Runtime_CommonObject.htm">Rhino.Runtime<span id="LSTEC3142AA_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>CommonObject</a><br />    <a href="T_Rhino_Geometry_GeometryBase.htm">Rhino.Geometry<span id="LSTEC3142AA_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>GeometryBase</a><br />      <span class="selflink">Rhino.Geometry<span id="LSTEC3142AA_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Mesh</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino_Geometry.htm">Rhino.Geometry</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','cs','1','2');return false;">C#</a></div><div id="ID1EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[<span class="identifier">SerializableAttribute</span>]
<span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">Mesh</span> : <span class="identifier">GeometryBase</span></pre></div><div id="ID1EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">&lt;<span class="identifier">SerializableAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">Mesh</span>
	<span class="keyword">Inherits</span> <span class="identifier">GeometryBase</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBCA");</script></div><p>The <span class="selflink">Mesh</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Mesh__ctor.htm">Mesh<span id="LSTEC3142AA_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_4?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">Initializes a new empty mesh.</div></td></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Rhino_Geometry_Mesh__ctor_1.htm">Mesh(SerializationInfo, StreamingContext)</a></td><td><div class="summary">
            Protected constructor for internal use.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_Mesh_ComponentStates.htm">ComponentStates</a></td><td><div class="summary">
            Gets access to the vertex hidden/visibility collection in this mesh.
            This is a runtime property and it is not saved in the 3dm file.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_Mesh_DisjointMeshCount.htm">DisjointMeshCount</a></td><td><div class="summary">
            Gets the number of disjoint (topologically unconnected) pieces in this mesh.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Runtime_CommonObject_Disposed.htm">Disposed</a></td><td><div class="summary">
            Indicates if this object has been disposed or the
            document it originally belonged to has been disposed.
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_Mesh_FaceNormals.htm">FaceNormals</a></td><td><div class="summary">
            Gets access to the face normal collection in this mesh.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="P_Rhino_Geometry_Mesh_Faces.htm">Faces</a></td><td><div class="summary">
            Gets access to the mesh face list.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_GeometryBase_HasBrepForm.htm">HasBrepForm</a></td><td><div class="summary">
            Returns true if the Brep.TryConvertBrep function will be successful for this object
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_Mesh_HasCachedTextureCoordinates.htm">HasCachedTextureCoordinates</a></td><td><div class="summary">
            Will return true if SetCachedTextureCoordinates has been called;
            otherwise will return false.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_Mesh_HasPrincipalCurvatures.htm">HasPrincipalCurvatures</a></td><td><div class="summary">
            HasPrincipalCurvatures
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Runtime_CommonObject_HasUserData.htm">HasUserData</a></td><td><div class="summary">
            Gets true if this class has any custom information attached to it through UserData.
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_Mesh_IsClosed.htm">IsClosed</a></td><td><div class="summary">
            Returns true if every mesh "edge" has two or more faces.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_GeometryBase_IsDeformable.htm">IsDeformable</a></td><td><div class="summary">
            true if object can be accurately modified with "squishy" transformations like
            projections, shears, and non-uniform scaling.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_GeometryBase_IsDocumentControlled.htm">IsDocumentControlled</a></td><td><div class="summary">
            If true this object may not be modified. Any properties or functions that attempt
            to modify this object when it is set to "IsReadOnly" will throw a NotSupportedException.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_Mesh_IsOriented.htm">IsOriented</a></td><td><div class="summary">
            Returns true if the mesh is manifold and every pair of faces that share an "edge" have compatible orientations.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_Mesh_IsSolid.htm">IsSolid</a></td><td><div class="summary">
            Returns true if the mesh is solid. A "solid" is a closed oriented manifold.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Runtime_CommonObject_IsValid.htm">IsValid</a></td><td><div class="summary">Tests an object to see if it is valid.</div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_Mesh_Ngons.htm">Ngons</a></td><td><div class="summary">
            Gets access to the mesh ngon list.
            <p>Ngons represent groups of Faces (triangles + quads).</p><p>Faces are used to tessellate an Ngon internally.</p><p>When a triangle or quad is referenced in the Ngon list, it is no longer visualized and
            conceived as a single entity, but takes part of the Ngon.</p><p>If you need to get access to both Ngons and the faces that are not referenced by Ngons,
            that is, all polygons that are visible in the mesh, then use the
            <a href="M_Rhino_Geometry_Mesh_GetNgonAndFacesEnumerable.htm">GetNgonAndFacesEnumerable<span id="LSTEC3142AA_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_5?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> helper method.</p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="P_Rhino_Geometry_Mesh_Normals.htm">Normals</a></td><td><div class="summary">
            Gets access to the vertex normal collection in this mesh.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_GeometryBase_ObjectType.htm">ObjectType</a></td><td><div class="summary">
            Useful for switch statements that need to differentiate between
            basic object types like points, curves, surfaces, and so on.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_Mesh_PartitionCount.htm">PartitionCount</a></td><td><div class="summary">
            Number of partition information chunks stored on this mesh based
            on the last call to CreatePartitions
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_Mesh_TextureCoordinates.htm">TextureCoordinates</a></td><td><div class="summary">
            Gets access to the vertex texture coordinate collection in this mesh.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_Mesh_TopologyEdges.htm">TopologyEdges</a></td><td><div class="summary">
            Gets the <a href="T_Rhino_Geometry_Collections_MeshTopologyEdgeList.htm">MeshTopologyEdgeList</a> object associated with this mesh.
            <p>This object stores edge connectivity.</p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_Mesh_TopologyVertices.htm">TopologyVertices</a></td><td><div class="summary">
            Gets the <a href="T_Rhino_Geometry_Collections_MeshTopologyVertexList.htm">MeshTopologyVertexList</a> object associated with this mesh.
            <p>This object stores vertex connectivity and the indices of vertices
            that were unified while computing the edge topology.</p></div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Runtime_CommonObject_UserData.htm">UserData</a></td><td><div class="summary">
            List of custom information that is attached to this class.
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Runtime_CommonObject_UserDictionary.htm">UserDictionary</a></td><td><div class="summary">
            Dictionary of custom information attached to this class. The dictionary is actually user
            data provided as an easy to use sharable set of information.
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_GeometryBase_UserStringCount.htm">UserStringCount</a></td><td><div class="summary">
            Gets the amount of user strings.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_Mesh_VertexColors.htm">VertexColors</a></td><td><div class="summary">
            Gets access to the (optional) vertex color collection in this mesh.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="P_Rhino_Geometry_Mesh_Vertices.htm">Vertices</a></td><td><div class="summary">
            Gets access to the vertices set of this mesh.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Mesh_Append.htm">Append(Mesh)</a></td><td><div class="summary">
            Appends a copy of another mesh to this one and updates indices of appended mesh parts.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_Append_1.htm">Append(IEnumerable<span id="LSTEC3142AA_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_6?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Mesh<span id="LSTEC3142AA_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_7?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Append a list of meshes. This function is much more efficient than making
            repeated calls to Mesh.Append(Mesh) when lots of meshes are being joined
            into a single large mesh.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_Check.htm">Check</a></td><td><div class="summary">
            Examines the mesh and logs a description of what it finds right or wrong.
            The various properties the function checks for are described in MeshCheckParameters.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_ClearSurfaceData.htm">ClearSurfaceData</a></td><td><div class="summary">
            Removes surface parameters, curvature parameters and surface statistics from the mesh.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_ClearTextureData.htm">ClearTextureData</a></td><td><div class="summary">
            Removes all texture coordinate information from this mesh.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_ClosestMeshPoint.htm">ClosestMeshPoint</a></td><td><div class="summary">
            Gets the point on the mesh that is closest to a given test point. Similar to the 
            ClosestPoint function except this returns a MeshPoint class which includes
            extra information beyond just the location of the closest point.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_ClosestPoint.htm">ClosestPoint(Point3d)</a></td><td><div class="summary">
            Gets the point on the mesh that is closest to a given test point.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_ClosestPoint_2.htm">ClosestPoint(Point3d, Point3d<span id="LSTEC3142AA_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_8?cpp=%");</script>, Double)</a></td><td><div class="summary">
            Gets the point on the mesh that is closest to a given test point.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_ClosestPoint_1.htm">ClosestPoint(Point3d, Point3d<span id="LSTEC3142AA_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_9?cpp=%");</script>, Vector3d<span id="LSTEC3142AA_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_10?cpp=%");</script>, Double)</a></td><td><div class="summary">
            Gets the point on the mesh that is closest to a given test point.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_CollapseFacesByArea.htm">CollapseFacesByArea</a></td><td><div class="summary">
            Collapses multiple mesh faces, with areas less than LessThanArea and greater than GreaterThanArea, 
            based on the principles found in Stan Melax's mesh reduction PDF, 
            see http://pomax.nihongoresources.com/downloads/PolygonReduction.pdf
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_CollapseFacesByByAspectRatio.htm">CollapseFacesByByAspectRatio</a></td><td><div class="summary">
            Collapses a multiple mesh faces, determined by face aspect ratio, based on criteria found in Stan Melax's polygon reduction,
            see http://pomax.nihongoresources.com/downloads/PolygonReduction.pdf
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_CollapseFacesByEdgeLength.htm">CollapseFacesByEdgeLength</a></td><td><div class="summary">
            Collapses multiple mesh faces, with greater/less than edge length, based on the principles 
            found in Stan Melax's mesh reduction PDF, 
            see http://pomax.nihongoresources.com/downloads/PolygonReduction.pdf
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_ColorAt.htm">ColorAt(MeshPoint)</a></td><td><div class="summary">
            Evaluate a mesh color at a set of barycentric coordinates.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_ColorAt_1.htm">ColorAt(Int32, Double, Double, Double, Double)</a></td><td><div class="summary">
            Evaluate a mesh normal at a set of barycentric coordinates. Barycentric coordinates must 
            be assigned in accordance with the rules as defined by <a href="P_Rhino_Geometry_MeshPoint_T.htm">MeshPoint.T</a>.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Mesh_Compact.htm">Compact</a></td><td><div class="summary">
            Removes any unreferenced objects from arrays, re-indexes as needed 
            and shrinks arrays to minimum required size.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_ComponentIndex.htm">ComponentIndex</a></td><td><div class="summary">
            If this piece of geometry is a component in something larger, like a BrepEdge
            in a Brep, then this function returns the component index.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_ComputeThickness.htm">ComputeThickness(IEnumerable<span id="LSTEC3142AA_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_11?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Mesh<span id="LSTEC3142AA_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_12?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double)</a></td><td><div class="summary">
            Compute thickness metrics for this mesh.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_ComputeThickness_2.htm">ComputeThickness(IEnumerable<span id="LSTEC3142AA_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_13?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Mesh<span id="LSTEC3142AA_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_14?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double, CancellationToken)</a></td><td><div class="summary">
            Compute thickness metrics for this mesh.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_ComputeThickness_1.htm">ComputeThickness(IEnumerable<span id="LSTEC3142AA_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_15?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Mesh<span id="LSTEC3142AA_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_16?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double, Double, CancellationToken)</a></td><td><div class="summary">
            Compute thickness metrics for this mesh.
            </div></td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Rhino_Runtime_CommonObject_ConstructConstObject.htm">ConstructConstObject</a></td><td><div class="summary">
            Assigns a parent object and a sub-object index to this.
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_CopyFrom.htm">CopyFrom</a></td><td><div class="summary">
            Copies mesh values into this mesh from another mesh.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateBooleanDifference.htm">CreateBooleanDifference</a></td><td><div class="summary">
            Computes the solid difference of two sets of Meshes.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateBooleanIntersection.htm">CreateBooleanIntersection</a></td><td><div class="summary">
            Computes the solid intersection of two sets of meshes.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateBooleanSplit.htm">CreateBooleanSplit</a></td><td><div class="summary">
            Splits a set of meshes with another set.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateBooleanUnion.htm">CreateBooleanUnion</a></td><td><div class="summary">
            Computes the solid union of a set of meshes.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateContourCurves.htm">CreateContourCurves(Mesh, Plane)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            (Old call maintained for compatibility.)
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateContourCurves_1.htm">CreateContourCurves(Mesh, Plane, Double)</a></td><td><div class="summary">
            Constructs contour curves for a mesh, sectioned at a plane.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateContourCurves_2.htm">CreateContourCurves(Mesh, Point3d, Point3d, Double)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            (Old call maintained for compatibility.)
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateContourCurves_3.htm">CreateContourCurves(Mesh, Point3d, Point3d, Double, Double)</a></td><td><div class="summary">
            Constructs contour curves for a mesh, sectioned along a linear axis.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromBox.htm">CreateFromBox(BoundingBox, Int32, Int32, Int32)</a></td><td><div class="summary">
            Constructs new mesh that matches a bounding box.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromBox_1.htm">CreateFromBox(Box, Int32, Int32, Int32)</a></td><td><div class="summary">
             Constructs new mesh that matches an aligned box.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromBox_2.htm">CreateFromBox(IEnumerable<span id="LSTEC3142AA_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_17?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Point3d<span id="LSTEC3142AA_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_18?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32, Int32)</a></td><td><div class="summary">
            Constructs new mesh from 8 corner points.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromBrep.htm">CreateFromBrep(Brep)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Constructs a mesh from a brep.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromBrep_1.htm">CreateFromBrep(Brep, MeshingParameters)</a></td><td><div class="summary">
            Constructs a mesh from a brep.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromClosedPolyline.htm">CreateFromClosedPolyline</a></td><td><div class="summary">
            Attempts to create a Mesh that is a triangulation of a simple closed polyline that projects onto a plane.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromCone.htm">CreateFromCone(Cone, Int32, Int32)</a></td><td><div class="summary">Constructs a solid mesh cone.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromCone_1.htm">CreateFromCone(Cone, Int32, Int32, Boolean)</a></td><td><div class="summary">Constructs a mesh cone.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromCone_2.htm">CreateFromCone(Cone, Int32, Int32, Boolean, Boolean)</a></td><td><div class="summary">Constructs a mesh cone.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromCurveExtrusion.htm">CreateFromCurveExtrusion</a></td><td><div class="summary">
            Constructs a mesh from an extruded curve.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromCurvePipe.htm">CreateFromCurvePipe</a></td><td><div class="summary">
            Constructs a new mesh pipe from a curve.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromCylinder.htm">CreateFromCylinder(Cylinder, Int32, Int32)</a></td><td><div class="summary">Constructs a capped mesh cylinder.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromCylinder_1.htm">CreateFromCylinder(Cylinder, Int32, Int32, Boolean, Boolean)</a></td><td><div class="summary">Constructs a mesh cylinder.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromCylinder_2.htm">CreateFromCylinder(Cylinder, Int32, Int32, Boolean, Boolean, Boolean)</a></td><td><div class="summary">Constructs a mesh cylinder.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromCylinder_3.htm">CreateFromCylinder(Cylinder, Int32, Int32, Boolean, Boolean, Boolean, Boolean)</a></td><td><div class="summary">Constructs a mesh cylinder.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromFilteredFaceList.htm">CreateFromFilteredFaceList</a></td><td><div class="summary">
            Constructs a sub-mesh, that contains a filtered list of faces.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromIterativeCleanup.htm">CreateFromIterativeCleanup</a></td><td><div class="summary">Repairs meshes with vertices that are too near, using a tolerance value.</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromLines.htm">CreateFromLines</a></td><td><div class="summary">
            Creates a mesh by analizing the edge structure. Input lines could be from the extraction
            of edges from an original mesh.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromPlanarBoundary.htm">CreateFromPlanarBoundary(Curve, MeshingParameters)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Do not use this overload. Use version that takes a tolerance parameter instead.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromPlanarBoundary_1.htm">CreateFromPlanarBoundary(Curve, MeshingParameters, Double)</a></td><td><div class="summary">
            Attempts to construct a mesh from a closed planar curve.RhinoMakePlanarMeshes
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromPlane.htm">CreateFromPlane</a></td><td><div class="summary">
            Constructs a planar mesh grid.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromSphere.htm">CreateFromSphere</a></td><td><div class="summary">
            Constructs a mesh sphere.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromSubD.htm">CreateFromSubD</a></td><td><div class="summary">
            Create a mesh from a SubD limit surface
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromSubDControlNet.htm">CreateFromSubDControlNet</a></td><td><div class="summary">Create a mesh from a SubD control net</div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromSurface.htm">CreateFromSurface(Surface)</a></td><td><div class="summary">
            Constructs a mesh from a surface
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromSurface_1.htm">CreateFromSurface(Surface, MeshingParameters)</a></td><td><div class="summary">
            Constructs a mesh from a surface
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromSurfaceControlNet.htm">CreateFromSurfaceControlNet</a></td><td><div class="summary">
            Calculate a mesh representation of a surface's control net.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromTessellation.htm">CreateFromTessellation</a></td><td><div class="summary">
            Attempts to create a mesh that is a triangulation of a list of points, projected on a plane,
            including its holes and fixed edges.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateFromTorus.htm">CreateFromTorus</a></td><td><div class="summary">
            Constructs a mesh torus.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateIcoSphere.htm">CreateIcoSphere</a></td><td><div class="summary">
            Constructs a icospherical mesh. A mesh icosphere differs from a standard
            UV mesh sphere in that it's vertices are evenly distributed. A mesh icosphere
            starts from an icosahedron (a regular polyhedron with 20 equilateral triangles).
            It is then refined by splitting each triangle into 4 smaller triangles.
            This splitting can be done several times.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_CreatePartitions.htm">CreatePartitions</a></td><td><div class="summary">
            In ancient times (or modern smart phone times), some rendering engines
            were only able to process small batches of triangles and the
            CreatePartitions() function was provided to partition the mesh into
            subsets of vertices and faces that those rendering engines could handle.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreatePatch.htm">CreatePatch</a></td><td><div class="summary">
            Construct a mesh patch from a variety of input geometry.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateQuadSphere.htm">CreateQuadSphere</a></td><td><div class="summary">
            Constructs a quad mesh sphere. A quad mesh sphere differs from a standard
            UV mesh sphere in that it's vertices are evenly distributed. A quad mesh sphere
            starts from a cube (a regular polyhedron with 6 square sides).
            It is then refined by splitting each quad into 4 smaller quads.
            This splitting can be done several times.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_CreateVertexColorsFromBitmap.htm">CreateVertexColorsFromBitmap</a></td><td><div class="summary">
            Populate the vertex colors from a bitmap image.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_DestroyPartition.htm">DestroyPartition</a></td><td><div class="summary">
            Destroys mesh partition.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_DestroyTopology.htm">DestroyTopology</a></td><td><div class="summary">
            Removes topology data, forcing all topology information to be recomputed.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_DestroyTree.htm">DestroyTree</a></td><td><div class="summary">
            Destroys the mesh vertex access tree.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Runtime_CommonObject_Dispose.htm">Dispose<span id="LSTEC3142AA_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_19?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Actively reclaims unmanaged resources that this instance uses.
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_Dispose.htm">Dispose(Boolean)</a></td><td><div class="summary">
            Overridden in order to destroy local display cache information
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_Duplicate.htm">Duplicate</a></td><td><div class="summary">
            Constructs a copy of this mesh.
            This is the same as <a href="M_Rhino_Geometry_Mesh_DuplicateMesh.htm">DuplicateMesh<span id="LSTEC3142AA_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_20?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>.
            </div> (Overrides <a href="M_Rhino_Geometry_GeometryBase_Duplicate.htm">GeometryBase<span id="LSTEC3142AA_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_21?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Duplicate<span id="LSTEC3142AA_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_22?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_DuplicateMesh.htm">DuplicateMesh</a></td><td><div class="summary">Constructs a copy of this mesh.
            This is the same as <a href="M_Rhino_Geometry_Mesh_Duplicate.htm">Duplicate<span id="LSTEC3142AA_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_23?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_DuplicateShallow.htm">DuplicateShallow</a></td><td><div class="summary">
            Constructs a light copy of this object. By "light", it is meant that the same
            underlying data is used until something is done to attempt to change it. For example,
            you could have a shallow copy of a very heavy mesh object and the same underlying
            data will be used when doing things like inspecting the number of faces on the mesh.
            If you modify the location of one of the mesh vertices, the shallow copy will create
            a full duplicate of the underlying mesh data and the shallow copy will become a
            deep copy.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Runtime_CommonObject_EnsurePrivateCopy.htm">EnsurePrivateCopy</a></td><td><div class="summary">
            If you want to keep a copy of this class around by holding onto it in a variable after a command
            completes, call EnsurePrivateCopy to make sure that this class is not tied to the document. You can
            call this function as many times as you want.
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.equals#System_Object_Equals_System_Object_" target="_blank">Equals</a></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_EvaluateMeshGeometry.htm">EvaluateMeshGeometry</a></td><td><div class="summary">
            If the mesh has SurfaceParameters, the surface is evaluated at
            these parameters and the mesh geometry is updated.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_ExplodeAtUnweldedEdges.htm">ExplodeAtUnweldedEdges</a></td><td><div class="summary">
            Explode the mesh into sub-meshes where a sub-mesh is a collection of faces that are contained
            within a closed loop of "unwelded" edges. Unwelded edges are edges where the faces that share
            the edge have unique mesh vertexes (not mesh topology vertexes) at both ends of the edge.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_ExtendSelectionByEdgeRidge.htm">ExtendSelectionByEdgeRidge</a></td><td><div class="summary">
            Suggests an extension of a selection set by using information related with topology and alignment.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_ExtendSelectionByFaceLoop.htm">ExtendSelectionByFaceLoop</a></td><td><div class="summary">
            Suggests an extension of a face selection set by using information related with topology and alignment.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_ExtractNonManifoldEdges.htm">ExtractNonManifoldEdges</a></td><td><div class="summary">
            Extracts, or removes, non-manifold mesh edges. 
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_FileHole.htm">FileHole</a></td><td><div class="summary">
            Given a starting "naked" edge index, this function attempts to determine a "hole"
            by chaining additional naked edges together until if returns to the start index.
            Then it triangulates the closed polygon and either adds the faces to the mesh.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_FillHoles.htm">FillHoles</a></td><td><div class="summary">
            Attempts to determine "holes" in the mesh by chaining naked edges together. 
            Then it triangulates the closed polygons adds the faces to the mesh.
            </div></td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Rhino_Runtime_CommonObject_Finalize.htm">Finalize</a></td><td><div class="summary">
            Passively reclaims unmanaged resources when the class user did not explicitly call Dispose().
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_Flip.htm">Flip(Boolean, Boolean, Boolean)</a></td><td><div class="summary">Reverses the direction of the mesh.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_Flip_1.htm">Flip(Boolean, Boolean, Boolean, Boolean)</a></td><td><div class="summary">Reverses the direction of the mesh.</div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_GeometryBase_GetBoundingBox_3.htm">GetBoundingBox(Boolean)</a></td><td><div class="summary">
            Bounding box solver. Gets the world axis aligned bounding box for the geometry.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_GeometryBase_GetBoundingBox.htm">GetBoundingBox(Plane)</a></td><td><div class="summary">
            Aligned Bounding box solver. Gets the plane aligned bounding box.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_GetBoundingBox_2.htm">GetBoundingBox(Transform)</a></td><td><div class="summary">
            Aligned Bounding box solver. Gets the world axis aligned bounding box for the transformed geometry.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_GetBoundingBox_1.htm">GetBoundingBox(Plane, Box<span id="LSTEC3142AA_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_24?cpp=%");</script>)</a></td><td><div class="summary">
            Aligned Bounding box solver. Gets the plane aligned bounding box.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_GetCachedTextureCoordinates.htm">GetCachedTextureCoordinates</a></td><td><div class="summary">
            Call this method to get cached texture coordinates for a texture
            mapping with the specified Id.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.gethashcode#System_Object_GetHashCode" target="_blank">GetHashCode</a></td><td><div class="summary">Serves as the default hash function.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_GetNakedEdgePointStatus.htm">GetNakedEdgePointStatus</a></td><td><div class="summary">
            Returns an array of Boolean values equal in length to the number of vertices in this
            mesh. Each value corresponds to a mesh vertex and is set to true if the vertex is
            not completely surrounded by faces.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Mesh_GetNakedEdges.htm">GetNakedEdges</a></td><td><div class="summary">
            Returns all edges of a mesh that are considered "naked" in the
            sense that the edge only has one face.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_GetNgonAndFacesCount.htm">GetNgonAndFacesCount</a></td><td><div class="summary">
            Retrieves the count of items that <a href="M_Rhino_Geometry_Mesh_GetNgonAndFacesEnumerable.htm">GetNgonAndFacesEnumerable<span id="LSTEC3142AA_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_25?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> will provide.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_GetNgonAndFacesEnumerable.htm">GetNgonAndFacesEnumerable</a></td><td><div class="summary">
            Retrieves a complete enumerable, i.e., one that provides an iterator over every face that is present,
            no matter if defined as a triangle, a quad, or a strictly over-four-sided ngon.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Runtime_CommonObject_GetObjectData.htm">GetObjectData</a></td><td><div class="summary">
            Populates a System.Runtime.Serialization.SerializationInfo with the data needed to serialize the target object.
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_GetOutlines_2.htm">GetOutlines(Plane)</a></td><td><div class="summary">
            Constructs the outlines of a mesh projected against a plane.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_GetOutlines.htm">GetOutlines(RhinoViewport)</a></td><td><div class="summary">
            Constructs the outlines of a mesh. The projection information in the
            viewport is used to determine how the outlines are projected.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_GetOutlines_1.htm">GetOutlines(ViewportInfo, Plane)</a></td><td><div class="summary">
            Constructs the outlines of a mesh.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_GetPartition.htm">GetPartition</a></td><td><div class="summary">
            Retrieves a partition. See <a href="M_Rhino_Geometry_Mesh_CreatePartitions.htm">CreatePartitions(Int32, Int32)</a> for details.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_GetSelfIntersections.htm">GetSelfIntersections</a></td><td><div class="summary">
            Gets the intersections of this mesh with itself.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.gettype#System_Object_GetType" target="_blank">GetType</a></td><td><div class="summary">Gets the <a href="https://docs.microsoft.com/dotnet/api/system.type" target="_blank">Type</a> of the current instance.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_GetUnsafeLock.htm">GetUnsafeLock</a></td><td><div class="summary">
            Allows to obtain unsafe pointers to the underlying unmanaged data structures of the mesh.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_GetUserString.htm">GetUserString</a></td><td><div class="summary">
            Gets user string from this geometry.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_GetUserStrings.htm">GetUserStrings</a></td><td><div class="summary">
            Gets a copy of all (user key string, user value string) pairs attached to this geometry.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_HealNakedEdges.htm">HealNakedEdges</a></td><td><div class="summary">
            Attempts to "heal" naked edges in a mesh based on a given distance.  
            First attempts to move vertexes to neighboring vertexes that are within that
            distance away. Then it finds edges that have a closest point to the vertex within
            the distance and splits the edge. When it finds one it splits the edge and
            makes two new edges using that point.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_IsManifold.htm">IsManifold<span id="LSTEC3142AA_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_26?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Returns true if every mesh "edge" has at most two faces.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_IsManifold_1.htm">IsManifold(Boolean, Boolean<span id="LSTEC3142AA_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_27?cpp=%");</script>, Boolean<span id="LSTEC3142AA_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_28?cpp=%");</script>)</a></td><td><div class="summary">
            Gets a value indicating whether or not the mesh is manifold. 
            A manifold mesh does not have any edge that borders more than two faces.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_IsPointInside.htm">IsPointInside</a></td><td><div class="summary">
            Determines if a point is inside a solid mesh.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Runtime_CommonObject_IsValidWithLog.htm">IsValidWithLog</a></td><td><div class="summary">
            Determines if an object is valid. Also provides a report on errors if this
            object happens not to be valid.
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_MakeDeformable.htm">MakeDeformable</a></td><td><div class="summary">
            If possible, converts the object into a form that can be accurately modified
            with "squishy" transformations like projections, shears, an non-uniform scaling.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_MatchEdges.htm">MatchEdges</a></td><td><div class="summary">
            Moves face edges of an open mesh to meet adjacent face edges.
            The method will first try to match vertices, and then then it will try to split edges to make the edges match.
            </div></td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.memberwiseclone#System_Object_MemberwiseClone" target="_blank">MemberwiseClone</a></td><td><div class="summary">Creates a shallow copy of the current <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_MemoryEstimate.htm">MemoryEstimate</a></td><td><div class="summary">
            Computes an estimate of the number of bytes that this object is using in memory.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_MergeAllCoplanarFaces.htm">MergeAllCoplanarFaces(Double)</a></td><td><div class="summary">
            Merges adjacent coplanar faces into single faces.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_MergeAllCoplanarFaces_1.htm">MergeAllCoplanarFaces(Double, Double)</a></td><td><div class="summary">
            Merges adjacent coplanar faces into single faces.
            </div></td></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Rhino_Geometry_Mesh_NonConstOperation.htm">NonConstOperation</a></td><td><div class="summary"> Clear local cache on non constant calls </div> (Overrides <a href="M_Rhino_Geometry_GeometryBase_NonConstOperation.htm">GeometryBase<span id="LSTEC3142AA_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_29?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>NonConstOperation<span id="LSTEC3142AA_30"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_30?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_NormalAt.htm">NormalAt(MeshPoint)</a></td><td><div class="summary">
            Evaluate a mesh normal at a set of barycentric coordinates.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_NormalAt_1.htm">NormalAt(Int32, Double, Double, Double, Double)</a></td><td><div class="summary">
            Evaluate a mesh normal at a set of barycentric coordinates. Barycentric coordinates must 
            be assigned in accordance with the rules as defined by MeshPoint.T.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_Offset.htm">Offset(Double)</a></td><td><div class="summary">
            Makes a new mesh with vertices offset a distance in the opposite direction of the existing vertex normals.
            Same as Mesh.Offset(distance, false)
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_Offset_1.htm">Offset(Double, Boolean)</a></td><td><div class="summary">
            Makes a new mesh with vertices offset a distance in the opposite direction of the existing vertex normals.
            Optionally, based on the value of solidify, adds the input mesh and a ribbon of faces along any naked edges.
            If solidify is false it acts exactly as the Offset(distance) function.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_Offset_2.htm">Offset(Double, Boolean, Vector3d)</a></td><td><div class="summary">
            Makes a new mesh with vertices offset a distance along the direction parameter.
            Optionally, based on the value of solidify, adds the input mesh and a ribbon of faces along any naked edges.
            If solidify is false it acts exactly as the Offset(distance) function.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_Offset_3.htm">Offset(Double, Boolean, Vector3d, List<span id="LSTEC3142AA_31"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_31?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LSTEC3142AA_32"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_32?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LSTEC3142AA_33"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_33?cpp=%");</script>)</a></td><td><div class="summary">
            Makes a new mesh with vertices offset a distance along the direction parameter.
            Optionally, based on the value of solidify, adds the input mesh and a ribbon of faces along any naked edges.
            If solidify is false it acts exactly as the Offset(distance) function. Returns list of wall faces, i.e. the
            faces that connect original and offset mesh when solidified.
            </div></td></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Rhino_Geometry_Mesh_OnSwitchToNonConst.htm">OnSwitchToNonConst</a></td><td><div class="summary">
            Performs some memory cleanup if necessary
            </div> (Overrides <a href="M_Rhino_Geometry_GeometryBase_OnSwitchToNonConst.htm">GeometryBase<span id="LSTEC3142AA_34"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_34?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>OnSwitchToNonConst<span id="LSTEC3142AA_35"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_35?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_PointAt.htm">PointAt(MeshPoint)</a></td><td><div class="summary">
            Evaluate a mesh at a set of barycentric coordinates.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_PointAt_1.htm">PointAt(Int32, Double, Double, Double, Double)</a></td><td><div class="summary">
            Evaluates a mesh at a set of barycentric coordinates. Barycentric coordinates must 
            be assigned in accordance with the rules as defined by MeshPoint.T.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_PullCurve.htm">PullCurve</a></td><td><div class="summary">
            Gets a polyline approximation of the input curve and then moves its control points to the closest point on the mesh.
            Then it "connects the points" over edges so that a polyline on the mesh is formed.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_PullPointsToMesh.htm">PullPointsToMesh</a></td><td><div class="summary">
            Pulls a collection of points to a mesh.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_QuadRemesh.htm">QuadRemesh(QuadRemeshParameters)</a></td><td><div class="summary">
            Quad remesh this mesh.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_QuadRemesh_1.htm">QuadRemesh(QuadRemeshParameters, IEnumerable<span id="LSTEC3142AA_36"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_36?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Curve<span id="LSTEC3142AA_37"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_37?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Quad remesh this mesh.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_QuadRemeshAsync_1.htm">QuadRemeshAsync(QuadRemeshParameters, IProgress<span id="LSTEC3142AA_38"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_38?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LSTEC3142AA_39"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_39?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, CancellationToken)</a></td><td><div class="summary">
            Quad remesh this mesh asynchronously.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_QuadRemeshAsync.htm">QuadRemeshAsync(QuadRemeshParameters, IEnumerable<span id="LSTEC3142AA_40"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_40?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Curve<span id="LSTEC3142AA_41"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_41?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IProgress<span id="LSTEC3142AA_42"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_42?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LSTEC3142AA_43"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_43?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, CancellationToken)</a></td><td><div class="summary">
            Quad remesh this mesh asynchronously.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_QuadRemeshAsync_2.htm">QuadRemeshAsync(IEnumerable<span id="LSTEC3142AA_44"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_44?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LSTEC3142AA_45"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_45?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, QuadRemeshParameters, IEnumerable<span id="LSTEC3142AA_46"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_46?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Curve<span id="LSTEC3142AA_47"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_47?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IProgress<span id="LSTEC3142AA_48"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_48?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LSTEC3142AA_49"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_49?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, CancellationToken)</a></td><td><div class="summary">
            Quad remesh this mesh asynchronously.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_QuadRemeshBrep.htm">QuadRemeshBrep(Brep, QuadRemeshParameters)</a></td><td><div class="summary">
            Create QuadRemesh from a Brep
            Set Brep Face Mode by setting QuadRemeshParameters.PreserveMeshArrayEdgesMode
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_QuadRemeshBrep_1.htm">QuadRemeshBrep(Brep, QuadRemeshParameters, IEnumerable<span id="LSTEC3142AA_50"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_50?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Curve<span id="LSTEC3142AA_51"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_51?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Create Quad Remesh from a Brep
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_QuadRemeshBrepAsync_1.htm">QuadRemeshBrepAsync(Brep, QuadRemeshParameters, IProgress<span id="LSTEC3142AA_52"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_52?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LSTEC3142AA_53"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_53?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, CancellationToken)</a></td><td><div class="summary">
            Quad remesh this Brep asynchronously.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_QuadRemeshBrepAsync.htm">QuadRemeshBrepAsync(Brep, QuadRemeshParameters, IEnumerable<span id="LSTEC3142AA_54"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_54?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Curve<span id="LSTEC3142AA_55"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_55?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IProgress<span id="LSTEC3142AA_56"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_56?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LSTEC3142AA_57"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_57?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, CancellationToken)</a></td><td><div class="summary">
            Quad remesh this Brep asynchronously.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_RebuildNormals.htm">RebuildNormals</a></td><td><div class="summary">
            Removes mesh normals and reconstructs the face and vertex normals based
            on the orientation of the faces.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_Reduce.htm">Reduce(ReduceMeshParameters)</a></td><td><div class="summary">Reduce polygon count</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_Reduce_1.htm">Reduce(ReduceMeshParameters, Boolean)</a></td><td><div class="summary">Reduce polygon count</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_Reduce_2.htm">Reduce(Int32, Boolean, Int32, Boolean)</a></td><td><div class="summary">
            Reduce polygon count
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_Reduce_3.htm">Reduce(Int32, Boolean, Int32, Boolean, Boolean)</a></td><td><div class="summary">
            Reduce polygon count
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_Reduce_4.htm">Reduce(Int32, Boolean, Int32, Boolean, CancellationToken, IProgress<span id="LSTEC3142AA_58"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_58?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LSTEC3142AA_59"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_59?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, String<span id="LSTEC3142AA_60"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_60?cpp=%");</script>)</a></td><td><div class="summary">Reduce polygon count</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_Reduce_5.htm">Reduce(Int32, Boolean, Int32, Boolean, CancellationToken, IProgress<span id="LSTEC3142AA_61"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_61?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LSTEC3142AA_62"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_62?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, String<span id="LSTEC3142AA_63"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_63?cpp=%");</script>, Boolean)</a></td><td><div class="summary">Reduce polygon count</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_ReleaseUnsafeLock.htm">ReleaseUnsafeLock</a></td><td><div class="summary">
            Updates the Mesh data with the information that was stored via the <a href="T_Rhino_Geometry_MeshUnsafeLock.htm">MeshUnsafeLock</a>.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Mesh_RequireIterativeCleanup.htm">RequireIterativeCleanup</a></td><td><div class="summary">
            Analyzes some meshes, and determines if a pass of CreateFromIterativeCleanup would change the array.
            <p>All available cleanup steps are used. Currently available cleanup steps are:</p><p>- mending of single precision coincidence even though double precision vertices differ.</p><p>- union of nearly identical vertices, irrespectively of their origin.</p><p>- removal of t-joints along edges.</p></div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_Rotate.htm">Rotate</a></td><td><div class="summary">
            Rotates the object about the specified axis. A positive rotation 
            angle results in a counter-clockwise rotation about the axis (right hand rule).
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_Scale.htm">Scale</a></td><td><div class="summary">
            Scales the object by the specified factor. The scale is centered at the origin.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_SetCachedTextureCoordinates.htm">SetCachedTextureCoordinates</a></td><td><div class="summary">
            Set cached texture coordinates using the specified mapping.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_SetTextureCoordinates.htm">SetTextureCoordinates(TextureMapping, Transform, Boolean)</a></td><td><div class="summary">
            Set texture coordinates using given mapping and applying given transform.
            
            Set lazy to false to generate texture coordinates right away.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_SetTextureCoordinates_1.htm">SetTextureCoordinates(TextureMapping, Transform, Boolean, Boolean)</a></td><td><div class="summary">
            Set texture coordinates using given mapping and applying given transform.
            
            Set lazy to false to generate texture coordinates right away.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_SetUserString.htm">SetUserString</a></td><td><div class="summary">
            Attach a user string (key,value combination) to this geometry.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_Smooth_1.htm">Smooth(Double, Boolean, Boolean, Boolean, Boolean, SmoothingCoordinateSystem)</a></td><td><div class="summary">
            Smooths a mesh by averaging the positions of mesh vertices in a specified region.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_Smooth_2.htm">Smooth(Double, Boolean, Boolean, Boolean, Boolean, SmoothingCoordinateSystem, Plane)</a></td><td><div class="summary">
            Smooths a mesh by averaging the positions of mesh vertices in a specified region.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_Smooth.htm">Smooth(IEnumerable<span id="LSTEC3142AA_64"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_64?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Int32<span id="LSTEC3142AA_65"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_65?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double, Boolean, Boolean, Boolean, Boolean, SmoothingCoordinateSystem, Plane)</a></td><td><div class="summary">
            Smooths part of a mesh by averaging the positions of mesh vertices in a specified region.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_SolidOrientation.htm">SolidOrientation</a></td><td><div class="summary">
            Determines orientation of a "solid" mesh.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_Split.htm">Split(Mesh)</a></td><td><div class="summary">
            Split a mesh with another mesh. Suggestion: upgrade to overload with tolerance.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_Split_2.htm">Split(IEnumerable<span id="LSTEC3142AA_66"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_66?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Mesh<span id="LSTEC3142AA_67"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_67?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Split a mesh with a collection of meshes. Suggestion: upgrade to overload with tolerance.
            Does not split at coplanar intersections.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_Split_1.htm">Split(Plane)</a></td><td><div class="summary">
            Split a mesh by an infinite plane.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_Split_3.htm">Split(IEnumerable<span id="LSTEC3142AA_68"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_68?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Mesh<span id="LSTEC3142AA_69"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_69?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double, Boolean, TextLog, CancellationToken, IProgress<span id="LSTEC3142AA_70"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_70?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LSTEC3142AA_71"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_71?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Split a mesh with a collection of meshes.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_Split_4.htm">Split(IEnumerable<span id="LSTEC3142AA_72"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_72?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Mesh<span id="LSTEC3142AA_73"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_73?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double, Boolean, Boolean, TextLog, CancellationToken, IProgress<span id="LSTEC3142AA_74"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_74?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LSTEC3142AA_75"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_75?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Split a mesh with a collection of meshes.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_SplitDisjointPieces.htm">SplitDisjointPieces</a></td><td><div class="summary">
            Splits up the mesh into its unconnected pieces.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_SplitWithProjectedPolylines.htm">SplitWithProjectedPolylines(IEnumerable<span id="LSTEC3142AA_76"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_76?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>PolylineCurve<span id="LSTEC3142AA_77"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_77?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double)</a></td><td><div class="summary">
            Splits a mesh by adding edges in correspondence with input polylines, and divides the mesh at partitioned areas.
            Polyline segments that are measured not to be on the mesh will be ignored.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_SplitWithProjectedPolylines_1.htm">SplitWithProjectedPolylines(IEnumerable<span id="LSTEC3142AA_78"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_78?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>PolylineCurve<span id="LSTEC3142AA_79"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_79?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double, TextLog, CancellationToken, IProgress<span id="LSTEC3142AA_80"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_80?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LSTEC3142AA_81"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_81?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Splits a mesh by adding edges in correspondence with input polylines, and divides the mesh at partitioned areas.
            Polyline segments that are measured not to be on the mesh will be ignored.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Runtime_CommonObject_ToJSON.htm">ToJSON</a></td><td><div class="summary">
            Create a JSON string representation of this object
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.tostring#System_Object_ToString" target="_blank">ToString</a></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_Transform.htm">Transform</a></td><td><div class="summary">
            Transforms the geometry. If the input Transform has a SimilarityType of
            OrientationReversing, you may want to consider flipping the transformed
            geometry after calling this function when it makes sense. For example,
            you may want to call Flip() on a Brep after transforming it.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_Translate.htm">Translate(Vector3d)</a></td><td><div class="summary">Translates the object along the specified vector.</div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_Translate_1.htm">Translate(Double, Double, Double)</a></td><td><div class="summary">Translates the object along the specified vector.</div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_UnifyNormals.htm">UnifyNormals<span id="LSTEC3142AA_82"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEC3142AA_82?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Attempts to fix inconsistencies in the directions of mesh faces in a mesh. This function
            does not modify mesh vertex normals, it rearranges the mesh face winding and face
            normals to make them all consistent. Note, you may want to call Mesh.Normals.ComputeNormals()
            to recompute vertex normals after calling this functions.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_UnifyNormals_1.htm">UnifyNormals(Boolean)</a></td><td><div class="summary">
            Attempts to fix inconsistencies in the directions of mesh faces in a mesh. This function
            does not modify mesh vertex normals, it rearranges the mesh face winding and face
            normals to make them all consistent. Note, you may want to call Mesh.Normals.ComputeNormals()
            to recompute vertex normals after calling this functions.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_Unweld.htm">Unweld</a></td><td><div class="summary">
            Makes sure that faces sharing an edge and having a difference of normal greater
            than or equal to angleToleranceRadians have unique vertexes along that edge,
            adding vertices if necessary.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_UnweldEdge.htm">UnweldEdge</a></td><td><div class="summary">
            Adds creases to a smooth mesh by creating coincident vertices along selected edges.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_UnweldVertices.htm">UnweldVertices</a></td><td><div class="summary">
            Ensures that faces sharing a common topological vertex have unique indices into the <a href="T_Rhino_Geometry_Collections_MeshVertexList.htm">MeshVertexList</a> collection.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_Volume.htm">Volume</a></td><td><div class="summary">
            Compute volume of the mesh. 
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_Weld.htm">Weld</a></td><td><div class="summary">
            Makes sure that faces sharing an edge and having a difference of normal greater
            than or equal to angleToleranceRadians share vertexes along that edge, vertex normals
            are averaged.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_WithDisplacement.htm">WithDisplacement</a></td><td><div class="summary">
            Constructs new mesh from the current one, with displacement applied to it.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_WithEdgeSoftening.htm">WithEdgeSoftening</a></td><td><div class="summary">
            Constructs new mesh from the current one, with edge softening applied to it.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Mesh_WithShutLining.htm">WithShutLining</a></td><td><div class="summary">
            Constructs new mesh from the current one, with shut lining applied to it.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID6RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Rhino_Geometry.htm">Rhino.Geometry Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.18.22124.03000 (Last updated: 5/10/2022)<br />Copyright © 2009-2022 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>