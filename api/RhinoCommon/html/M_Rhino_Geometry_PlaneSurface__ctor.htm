<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>PlaneSurface Constructor (Plane, Interval, Interval)</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Rhino.Geometry.PlaneSurface.#ctor(Rhino.Geometry.Plane,Rhino.Geometry.Interval,Rhino.Geometry.Interval)" /><meta name="Description" content="Initializes a plane surface with x and y intervals." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Geometry" /><meta name="file" content="M_Rhino_Geometry_PlaneSurface__ctor" /><meta name="guid" content="M_Rhino_Geometry_PlaneSurface__ctor" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_Geometry.htm" title="Rhino.Geometry" tocid="N_Rhino_Geometry">Rhino.Geometry</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_Geometry_PlaneSurface.htm" title="PlaneSurface Class" tocid="T_Rhino_Geometry_PlaneSurface">PlaneSurface Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_PlaneSurface__ctor.htm" title="PlaneSurface Constructor " tocid="Overload_Rhino_Geometry_PlaneSurface__ctor">PlaneSurface Constructor </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_PlaneSurface__ctor_1.htm" title="PlaneSurface Constructor (SerializationInfo, StreamingContext)" tocid="M_Rhino_Geometry_PlaneSurface__ctor_1">PlaneSurface Constructor (SerializationInfo, StreamingContext)</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_PlaneSurface__ctor.htm" title="PlaneSurface Constructor (Plane, Interval, Interval)" tocid="M_Rhino_Geometry_PlaneSurface__ctor">PlaneSurface Constructor (Plane, Interval, Interval)</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>PlaneSurface Constructor (Plane, Interval, Interval)</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Initializes a plane surface with x and y intervals.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino_Geometry.htm">Rhino.Geometry</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="since"><strong>Since:</strong> 5.0</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">PlaneSurface</span>(
	<span class="identifier">Plane</span> <span class="parameter">plane</span>,
	<span class="identifier">Interval</span> <span class="parameter">xExtents</span>,
	<span class="identifier">Interval</span> <span class="parameter">yExtents</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Sub</span> <span class="identifier">New</span> ( 
	<span class="parameter">plane</span> <span class="keyword">As</span> <span class="identifier">Plane</span>,
	<span class="parameter">xExtents</span> <span class="keyword">As</span> <span class="identifier">Interval</span>,
	<span class="parameter">yExtents</span> <span class="keyword">As</span> <span class="identifier">Interval</span>
)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">plane</span></dt><dd>Type: <a href="T_Rhino_Geometry_Plane.htm">Rhino.Geometry<span id="LSTE2B77404_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE2B77404_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Plane</a><br />The plane.</dd><dt><span class="parameter">xExtents</span></dt><dd>Type: <a href="T_Rhino_Geometry_Interval.htm">Rhino.Geometry<span id="LSTE2B77404_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE2B77404_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Interval</a><br />The x interval of the plane that defines the rectangle.
            The corresponding evaluation interval domain is set so that it matches the
            extents interval.</dd><dt><span class="parameter">yExtents</span></dt><dd>Type: <a href="T_Rhino_Geometry_Interval.htm">Rhino.Geometry<span id="LSTE2B77404_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTE2B77404_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Interval</a><br />The y interval of the plane that defines the rectangle.
            The corresponding evaluation interval domain is set so that it matches the
            extents interval.</dd></dl></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBBBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','cs','1','2');return false;">C#</a></div><div id="ID0EBBBBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBBBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Rhino;
<span class="highlight-keyword">using</span> Rhino.Geometry;
<span class="highlight-keyword">using</span> Rhino.Commands;

<span class="highlight-keyword">namespace</span> examples_cs
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> PlaneSurfaceCommand : Command
  {
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">string</span> EnglishName { <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-literal">"csPlaneSurface"</span>; } }

    <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> Result RunCommand(RhinoDoc doc, RunMode mode)
    {
      Point3d[] corners;
      <span class="highlight-keyword">var</span> rc = Rhino.Input.RhinoGet.GetRectangle(<span class="highlight-keyword">out</span> corners);
      <span class="highlight-keyword">if</span> (rc != Result.Success)
        <span class="highlight-keyword">return</span> rc;

      <span class="highlight-keyword">var</span> plane = <span class="highlight-keyword">new</span> Plane(corners[<span class="highlight-number">0</span>], corners[<span class="highlight-number">1</span>], corners[<span class="highlight-number">2</span>]);

      <span class="highlight-keyword">var</span> plane_surface = <span class="highlight-keyword">new</span> PlaneSurface(plane, 
        <span class="highlight-keyword">new</span> Interval(<span class="highlight-number">0</span>, corners[<span class="highlight-number">0</span>].DistanceTo(corners[<span class="highlight-number">1</span>])), 
        <span class="highlight-keyword">new</span> Interval(<span class="highlight-number">0</span>, corners[<span class="highlight-number">1</span>].DistanceTo(corners[<span class="highlight-number">2</span>])));

      doc.Objects.Add(plane_surface);
      doc.Views.Redraw();
      <span class="highlight-keyword">return</span> Result.Success;
    }
  }
}</pre></div><div id="ID0EBBBBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Imports</span> Rhino
<span class="highlight-keyword">Imports</span> Rhino.Geometry
<span class="highlight-keyword">Imports</span> Rhino.Commands

<span class="highlight-keyword">Namespace</span> examples_vb
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> PlaneSurfaceCommand
    <span class="highlight-keyword">Inherits</span> Command
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">ReadOnly</span> <span class="highlight-keyword">Property</span> EnglishName() <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span>
      <span class="highlight-keyword">Get</span>
        <span class="highlight-keyword">Return</span> <span class="highlight-literal">"vbPlaneSurface"</span>
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">Get</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Property</span>

    <span class="highlight-keyword">Protected</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">Function</span> RunCommand(doc <span class="highlight-keyword">As</span> RhinoDoc, mode <span class="highlight-keyword">As</span> RunMode) <span class="highlight-keyword">As</span> Result
      <span class="highlight-keyword">Dim</span> corners <span class="highlight-keyword">As</span> Point3d() = <span class="highlight-keyword">Nothing</span>
      <span class="highlight-keyword">Dim</span> rc = Input.RhinoGet.GetRectangle(corners)
      <span class="highlight-keyword">If</span> rc &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> rc
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-keyword">Dim</span> plane = <span class="highlight-keyword">New</span> Plane(corners(<span class="highlight-number">0</span>), corners(<span class="highlight-number">1</span>), corners(<span class="highlight-number">2</span>))
      <span class="highlight-keyword">Dim</span> plane_surface = <span class="highlight-keyword">New</span> PlaneSurface(plane, <span class="highlight-keyword">New</span> Interval(<span class="highlight-number">0</span>, corners(<span class="highlight-number">0</span>).DistanceTo(corners(<span class="highlight-number">1</span>))), <span class="highlight-keyword">New</span> Interval(<span class="highlight-number">0</span>, corners(<span class="highlight-number">1</span>).DistanceTo(corners(<span class="highlight-number">2</span>))))
      doc.Objects.Add(plane_surface)
      doc.Views.Redraw()
      <span class="highlight-keyword">Return</span> Result.Success
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Namespace</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBBBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAABBA_tab1" class="codeSnippetContainerTabSingle">Python</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">import</span> Rhino;
<span class="highlight-keyword">import</span> rhinoscriptsyntax <span class="highlight-keyword">as</span> rs

<span class="highlight-keyword">def</span> RunCommand():
  rc, corners = Rhino.Input.RhinoGet.GetRectangle()
  <span class="highlight-keyword">if</span> rc &lt;&gt; Rhino.Commands.Result.Success:
      <span class="highlight-keyword">return</span> rc

  plane = Rhino.Geometry.Plane(corners[<span class="highlight-number">0</span>], corners[<span class="highlight-number">1</span>], corners[<span class="highlight-number">2</span>])
  u_dir = rs.Distance(corners[<span class="highlight-number">0</span>], corners[<span class="highlight-number">1</span>])
  v_dir = rs.Distance(corners[<span class="highlight-number">1</span>], corners[<span class="highlight-number">2</span>])
  rs.AddPlaneSurface(plane, u_dir, v_dir)

<span class="highlight-keyword">if</span> __name__ == <span class="highlight-literal">"__main__"</span>:
    RunCommand()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_Geometry_PlaneSurface.htm">PlaneSurface Class</a></div><div class="seeAlsoStyle"><a href="Overload_Rhino_Geometry_PlaneSurface__ctor.htm">PlaneSurface Overload</a></div><div class="seeAlsoStyle"><a href="N_Rhino_Geometry.htm">Rhino.Geometry Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.18.22124.03000 (Last updated: 5/10/2022)<br />Copyright © 2009-2022 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>