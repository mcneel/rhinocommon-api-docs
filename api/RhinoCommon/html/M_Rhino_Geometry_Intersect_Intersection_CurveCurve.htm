<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Intersection.CurveCurve Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="CurveCurve method" /><meta name="System.Keywords" content="Intersection.CurveCurve method" /><meta name="Microsoft.Help.F1" content="Rhino.Geometry.Intersect.Intersection.CurveCurve" /><meta name="Microsoft.Help.Id" content="M:Rhino.Geometry.Intersect.Intersection.CurveCurve(Rhino.Geometry.Curve,Rhino.Geometry.Curve,System.Double,System.Double)" /><meta name="Description" content="Finds the intersections between two curves." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Geometry.Intersect" /><meta name="file" content="M_Rhino_Geometry_Intersect_Intersection_CurveCurve" /><meta name="guid" content="M_Rhino_Geometry_Intersect_Intersection_CurveCurve" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_Geometry_Intersect.htm" title="Rhino.Geometry.Intersect" tocid="N_Rhino_Geometry_Intersect">Rhino.Geometry.Intersect</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_Geometry_Intersect_Intersection.htm" title="Intersection Class" tocid="T_Rhino_Geometry_Intersect_Intersection">Intersection Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Rhino_Geometry_Intersect_Intersection.htm" title="Intersection Methods" tocid="Methods_T_Rhino_Geometry_Intersect_Intersection">Intersection Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_ArcArc.htm" title="ArcArc Method " tocid="M_Rhino_Geometry_Intersect_Intersection_ArcArc">ArcArc Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_BrepBrep.htm" title="BrepBrep Method " tocid="M_Rhino_Geometry_Intersect_Intersection_BrepBrep">BrepBrep Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_BrepPlane.htm" title="BrepPlane Method " tocid="M_Rhino_Geometry_Intersect_Intersection_BrepPlane">BrepPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_BrepSurface.htm" title="BrepSurface Method " tocid="M_Rhino_Geometry_Intersect_Intersection_BrepSurface">BrepSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_CircleCircle.htm" title="CircleCircle Method " tocid="M_Rhino_Geometry_Intersect_Intersection_CircleCircle">CircleCircle Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Intersect_Intersection_CurveBrep.htm" title="CurveBrep Method " tocid="Overload_Rhino_Geometry_Intersect_Intersection_CurveBrep">CurveBrep Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_CurveBrepFace.htm" title="CurveBrepFace Method " tocid="M_Rhino_Geometry_Intersect_Intersection_CurveBrepFace">CurveBrepFace Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_CurveCurve.htm" title="CurveCurve Method " tocid="M_Rhino_Geometry_Intersect_Intersection_CurveCurve">CurveCurve Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_CurveCurveValidate.htm" title="CurveCurveValidate Method " tocid="M_Rhino_Geometry_Intersect_Intersection_CurveCurveValidate">CurveCurveValidate Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_CurveLine.htm" title="CurveLine Method " tocid="M_Rhino_Geometry_Intersect_Intersection_CurveLine">CurveLine Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_CurvePlane.htm" title="CurvePlane Method " tocid="M_Rhino_Geometry_Intersect_Intersection_CurvePlane">CurvePlane Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_CurveSelf.htm" title="CurveSelf Method " tocid="M_Rhino_Geometry_Intersect_Intersection_CurveSelf">CurveSelf Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Intersect_Intersection_CurveSurface.htm" title="CurveSurface Method " tocid="Overload_Rhino_Geometry_Intersect_Intersection_CurveSurface">CurveSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Intersect_Intersection_CurveSurfaceValidate.htm" title="CurveSurfaceValidate Method " tocid="Overload_Rhino_Geometry_Intersect_Intersection_CurveSurfaceValidate">CurveSurfaceValidate Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Intersect_Intersection_LineBox.htm" title="LineBox Method " tocid="Overload_Rhino_Geometry_Intersect_Intersection_LineBox">LineBox Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_LineCircle.htm" title="LineCircle Method " tocid="M_Rhino_Geometry_Intersect_Intersection_LineCircle">LineCircle Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_LineCylinder.htm" title="LineCylinder Method " tocid="M_Rhino_Geometry_Intersect_Intersection_LineCylinder">LineCylinder Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Intersect_Intersection_LineLine.htm" title="LineLine Method " tocid="Overload_Rhino_Geometry_Intersect_Intersection_LineLine">LineLine Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_LinePlane.htm" title="LinePlane Method " tocid="M_Rhino_Geometry_Intersect_Intersection_LinePlane">LinePlane Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_LineSphere.htm" title="LineSphere Method " tocid="M_Rhino_Geometry_Intersect_Intersection_LineSphere">LineSphere Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Intersect_Intersection_MeshLine.htm" title="MeshLine Method " tocid="Overload_Rhino_Geometry_Intersect_Intersection_MeshLine">MeshLine Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_MeshLineSorted.htm" title="MeshLineSorted Method " tocid="M_Rhino_Geometry_Intersect_Intersection_MeshLineSorted">MeshLineSorted Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_MeshMesh.htm" title="MeshMesh Method " tocid="M_Rhino_Geometry_Intersect_Intersection_MeshMesh">MeshMesh Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_MeshMeshAccurate.htm" title="MeshMeshAccurate Method " tocid="M_Rhino_Geometry_Intersect_Intersection_MeshMeshAccurate">MeshMeshAccurate Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_MeshMeshFast.htm" title="MeshMeshFast Method " tocid="M_Rhino_Geometry_Intersect_Intersection_MeshMeshFast">MeshMeshFast Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Intersect_Intersection_MeshPlane.htm" title="MeshPlane Method " tocid="Overload_Rhino_Geometry_Intersect_Intersection_MeshPlane">MeshPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_MeshPolyline.htm" title="MeshPolyline Method " tocid="M_Rhino_Geometry_Intersect_Intersection_MeshPolyline">MeshPolyline Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_MeshPolylineSorted.htm" title="MeshPolylineSorted Method " tocid="M_Rhino_Geometry_Intersect_Intersection_MeshPolylineSorted">MeshPolylineSorted Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Intersect_Intersection_MeshRay.htm" title="MeshRay Method " tocid="Overload_Rhino_Geometry_Intersect_Intersection_MeshRay">MeshRay Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_PlaneCircle.htm" title="PlaneCircle Method " tocid="M_Rhino_Geometry_Intersect_Intersection_PlaneCircle">PlaneCircle Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_PlanePlane.htm" title="PlanePlane Method " tocid="M_Rhino_Geometry_Intersect_Intersection_PlanePlane">PlanePlane Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_PlanePlanePlane.htm" title="PlanePlanePlane Method " tocid="M_Rhino_Geometry_Intersect_Intersection_PlanePlanePlane">PlanePlanePlane Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_PlaneSphere.htm" title="PlaneSphere Method " tocid="M_Rhino_Geometry_Intersect_Intersection_PlaneSphere">PlaneSphere Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_ProjectPointsToBreps.htm" title="ProjectPointsToBreps Method " tocid="M_Rhino_Geometry_Intersect_Intersection_ProjectPointsToBreps">ProjectPointsToBreps Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_ProjectPointsToBrepsEx.htm" title="ProjectPointsToBrepsEx Method " tocid="M_Rhino_Geometry_Intersect_Intersection_ProjectPointsToBrepsEx">ProjectPointsToBrepsEx Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_ProjectPointsToMeshes.htm" title="ProjectPointsToMeshes Method " tocid="M_Rhino_Geometry_Intersect_Intersection_ProjectPointsToMeshes">ProjectPointsToMeshes Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_ProjectPointsToMeshesEx.htm" title="ProjectPointsToMeshesEx Method " tocid="M_Rhino_Geometry_Intersect_Intersection_ProjectPointsToMeshesEx">ProjectPointsToMeshesEx Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Intersect_Intersection_RayShoot.htm" title="RayShoot Method " tocid="Overload_Rhino_Geometry_Intersect_Intersection_RayShoot">RayShoot Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_SphereSphere.htm" title="SphereSphere Method " tocid="M_Rhino_Geometry_Intersect_Intersection_SphereSphere">SphereSphere Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_SurfaceSurface.htm" title="SurfaceSurface Method " tocid="M_Rhino_Geometry_Intersect_Intersection_SurfaceSurface">SurfaceSurface Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Intersection<span id="LSTBE9FAE3F_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBE9FAE3F_0?cpp=::|nu=.");</script>CurveCurve Method </h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Finds the intersections between two curves. 
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino_Geometry_Intersect.htm">Rhino.Geometry.Intersect</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="since"><strong>Since:</strong> 5.0</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">CurveIntersections</span> <span class="identifier">CurveCurve</span>(
	<span class="identifier">Curve</span> <span class="parameter">curveA</span>,
	<span class="identifier">Curve</span> <span class="parameter">curveB</span>,
	<span class="identifier">double</span> <span class="parameter">tolerance</span>,
	<span class="identifier">double</span> <span class="parameter">overlapTolerance</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">CurveCurve</span> ( 
	<span class="parameter">curveA</span> <span class="keyword">As</span> <span class="identifier">Curve</span>,
	<span class="parameter">curveB</span> <span class="keyword">As</span> <span class="identifier">Curve</span>,
	<span class="parameter">tolerance</span> <span class="keyword">As</span> <span class="identifier">Double</span>,
	<span class="parameter">overlapTolerance</span> <span class="keyword">As</span> <span class="identifier">Double</span>
) <span class="keyword">As</span> <span class="identifier">CurveIntersections</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">curveA</span></dt><dd>Type: <a href="T_Rhino_Geometry_Curve.htm">Rhino.Geometry<span id="LSTBE9FAE3F_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBE9FAE3F_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Curve</a><br />First curve for intersection.</dd><dt><span class="parameter">curveB</span></dt><dd>Type: <a href="T_Rhino_Geometry_Curve.htm">Rhino.Geometry<span id="LSTBE9FAE3F_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBE9FAE3F_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Curve</a><br />Second curve for intersection.</dd><dt><span class="parameter">tolerance</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.double" target="_blank">System<span id="LSTBE9FAE3F_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBE9FAE3F_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Double</a><br />Intersection tolerance. If the curves approach each other to within tolerance, an intersection is assumed.</dd><dt><span class="parameter">overlapTolerance</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.double" target="_blank">System<span id="LSTBE9FAE3F_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBE9FAE3F_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Double</a><br />The tolerance with which the curves are tested.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="T_Rhino_Geometry_Intersect_CurveIntersections.htm">CurveIntersections</a><br />A collection of intersection events.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBBBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','cs','1','2');return false;">C#</a></div><div id="ID0EBBBBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBBBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">partial</span> <span class="highlight-keyword">class</span> Examples
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> Rhino.Commands.Result IntersectCurves(Rhino.RhinoDoc doc)
  {
    <span class="highlight-comment">// Select two curves to intersect</span>
    <span class="highlight-keyword">var</span> go = <span class="highlight-keyword">new</span> Rhino.Input.Custom.GetObject();
    go.SetCommandPrompt(<span class="highlight-literal">"Select two curves"</span>);
    go.GeometryFilter = Rhino.DocObjects.ObjectType.Curve;
    go.GetMultiple(<span class="highlight-number">2</span>, <span class="highlight-number">2</span>);
    <span class="highlight-keyword">if</span> (go.CommandResult() != Rhino.Commands.Result.Success)
      <span class="highlight-keyword">return</span> go.CommandResult();

    <span class="highlight-comment">// Validate input</span>
    <span class="highlight-keyword">var</span> curveA = go.Object(<span class="highlight-number">0</span>).Curve();
    <span class="highlight-keyword">var</span> curveB = go.Object(<span class="highlight-number">1</span>).Curve();
    <span class="highlight-keyword">if</span> (curveA == <span class="highlight-keyword">null</span> || curveB == <span class="highlight-keyword">null</span>)
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure;

    <span class="highlight-comment">// Calculate the intersection</span>
    <span class="highlight-keyword">const</span> <span class="highlight-keyword">double</span> intersection_tolerance = <span class="highlight-number">0.001</span>;
    <span class="highlight-keyword">const</span> <span class="highlight-keyword">double</span> overlap_tolerance = <span class="highlight-number">0.0</span>;
    <span class="highlight-keyword">var</span> events = Rhino.Geometry.Intersect.Intersection.CurveCurve(curveA, curveB, intersection_tolerance, overlap_tolerance);

    <span class="highlight-comment">// Process the results</span>
    <span class="highlight-keyword">if</span> (events != <span class="highlight-keyword">null</span>)
    {
      <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; events.Count; i++)
      {
        <span class="highlight-keyword">var</span> ccx_event = events[i];
        doc.Objects.AddPoint(ccx_event.PointA);
        <span class="highlight-keyword">if</span> (ccx_event.PointA.DistanceTo(ccx_event.PointB) &gt; <span class="highlight-keyword">double</span>.Epsilon)
        {
          doc.Objects.AddPoint(ccx_event.PointB);
          doc.Objects.AddLine(ccx_event.PointA, ccx_event.PointB);
        }
      }
      doc.Views.Redraw();
    }
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success;
  }
}</pre></div><div id="ID0EBBBBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Partial</span> <span class="highlight-keyword">Class</span> Examples
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Function</span> IntersectCurves(doc <span class="highlight-keyword">As</span> Rhino.RhinoDoc) <span class="highlight-keyword">As</span> Rhino.Commands.Result
    <span class="highlight-comment">' Select two curves to intersect</span>
    <span class="highlight-keyword">Dim</span> go = <span class="highlight-keyword">New</span> Rhino.Input.Custom.GetObject()
    go.SetCommandPrompt(<span class="highlight-literal">"Select two curves"</span>)
    go.GeometryFilter = Rhino.DocObjects.ObjectType.Curve
    go.GetMultiple(<span class="highlight-number">2</span>, <span class="highlight-number">2</span>)
    <span class="highlight-keyword">If</span> go.CommandResult() &lt;&gt; Rhino.Commands.Result.Success <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> go.CommandResult()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Validate input</span>
    <span class="highlight-keyword">Dim</span> curveA = go.[<span class="highlight-keyword">Object</span>](<span class="highlight-number">0</span>).Curve()
    <span class="highlight-keyword">Dim</span> curveB = go.[<span class="highlight-keyword">Object</span>](<span class="highlight-number">1</span>).Curve()
    <span class="highlight-keyword">If</span> curveA <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">OrElse</span> curveB <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Failure
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Calculate the intersection</span>
    <span class="highlight-keyword">Const</span> intersection_tolerance <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = <span class="highlight-number">0.001</span>
    <span class="highlight-keyword">Const</span> overlap_tolerance <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = <span class="highlight-number">0.0</span>
    <span class="highlight-keyword">Dim</span> events = Rhino.Geometry.Intersect.Intersection.CurveCurve(curveA, curveB, intersection_tolerance, overlap_tolerance)

    <span class="highlight-comment">' Process the results</span>
    <span class="highlight-keyword">If</span> events <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">For</span> i <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> events.Count - <span class="highlight-number">1</span>
        <span class="highlight-keyword">Dim</span> ccx_event = events(i)
        doc.Objects.AddPoint(ccx_event.PointA)
        <span class="highlight-keyword">If</span> ccx_event.PointA.DistanceTo(ccx_event.PointB) &gt; <span class="highlight-keyword">Double</span>.Epsilon <span class="highlight-keyword">Then</span>
          doc.Objects.AddPoint(ccx_event.PointB)
          doc.Objects.AddLine(ccx_event.PointA, ccx_event.PointB)
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">Next</span>
      doc.Views.Redraw()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Success
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBBBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAABBA_tab1" class="codeSnippetContainerTabSingle">Python</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">import</span> Rhino
<span class="highlight-keyword">import</span> scriptcontext

<span class="highlight-keyword">def</span> IntersectCurves():
    <span class="highlight-comment"># Select two curves to intersect</span>
    go = Rhino.Input.Custom.GetObject()
    go.SetCommandPrompt(<span class="highlight-literal">"Select two curves"</span>)
    go.GeometryFilter = Rhino.DocObjects.ObjectType.Curve
    go.GetMultiple(<span class="highlight-number">2</span>, <span class="highlight-number">2</span>)
    <span class="highlight-keyword">if</span> go.CommandResult()!=Rhino.Commands.Result.Success: <span class="highlight-keyword">return</span>

    <span class="highlight-comment"># Validate input</span>
    curveA = go.Object(<span class="highlight-number">0</span>).Curve()
    curveB = go.Object(<span class="highlight-number">1</span>).Curve()
    <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> curveA <span class="highlight-keyword">or</span> <span class="highlight-keyword">not</span> curveB: <span class="highlight-keyword">return</span>

    <span class="highlight-comment"># Calculate the intersection</span>
    intersection_tolerance = <span class="highlight-number">0.001</span>
    overlap_tolerance = <span class="highlight-number">0.0</span>
    events = Rhino.Geometry.Intersect.Intersection.CurveCurve(curveA, curveB, intersection_tolerance, overlap_tolerance)

    <span class="highlight-comment"># Process the results</span>
    <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> events: <span class="highlight-keyword">return</span>
    <span class="highlight-keyword">for</span> ccx_event <span class="highlight-keyword">in</span> events:
        scriptcontext.doc.Objects.AddPoint(ccx_event.PointA)
        <span class="highlight-keyword">if</span> ccx_event.PointA.DistanceTo(ccx_event.PointB) &gt; float.Epsilon:
            scriptcontext.doc.Objects.AddPoint(ccx_event.PointB)
            scriptcontext.doc.Objects.AddLine(ccx_event.PointA, ccx_event.PointB)
    scriptcontext.doc.Views.Redraw()

<span class="highlight-keyword">if</span> __name__==<span class="highlight-literal">"__main__"</span>:
    IntersectCurves()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_Geometry_Intersect_Intersection.htm">Intersection Class</a></div><div class="seeAlsoStyle"><a href="N_Rhino_Geometry_Intersect.htm">Rhino.Geometry.Intersect Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.18.22124.03000 (Last updated: 5/10/2022)<br />Copyright © 2009-2022 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>