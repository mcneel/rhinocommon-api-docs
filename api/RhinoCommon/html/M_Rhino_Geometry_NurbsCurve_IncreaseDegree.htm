<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>NurbsCurve.IncreaseDegree Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="IncreaseDegree method" /><meta name="System.Keywords" content="NurbsCurve.IncreaseDegree method" /><meta name="Microsoft.Help.F1" content="Rhino.Geometry.NurbsCurve.IncreaseDegree" /><meta name="Microsoft.Help.Id" content="M:Rhino.Geometry.NurbsCurve.IncreaseDegree(System.Int32)" /><meta name="Description" content="Increase the degree of this curve." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Geometry" /><meta name="file" content="M_Rhino_Geometry_NurbsCurve_IncreaseDegree" /><meta name="guid" content="M_Rhino_Geometry_NurbsCurve_IncreaseDegree" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_Geometry.htm" title="Rhino.Geometry" tocid="N_Rhino_Geometry">Rhino.Geometry</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_Geometry_NurbsCurve.htm" title="NurbsCurve Class" tocid="T_Rhino_Geometry_NurbsCurve">NurbsCurve Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Rhino_Geometry_NurbsCurve.htm" title="NurbsCurve Methods" tocid="Methods_T_Rhino_Geometry_NurbsCurve">NurbsCurve Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_NurbsCurve_Append.htm" title="Append Method " tocid="M_Rhino_Geometry_NurbsCurve_Append">Append Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_NurbsCurve_Create.htm" title="Create Method " tocid="M_Rhino_Geometry_NurbsCurve_Create">Create Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_NurbsCurve_CreateFromArc.htm" title="CreateFromArc Method " tocid="Overload_Rhino_Geometry_NurbsCurve_CreateFromArc">CreateFromArc Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_NurbsCurve_CreateFromCircle.htm" title="CreateFromCircle Method " tocid="Overload_Rhino_Geometry_NurbsCurve_CreateFromCircle">CreateFromCircle Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_NurbsCurve_CreateFromEllipse.htm" title="CreateFromEllipse Method " tocid="M_Rhino_Geometry_NurbsCurve_CreateFromEllipse">CreateFromEllipse Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_NurbsCurve_CreateFromLine.htm" title="CreateFromLine Method " tocid="M_Rhino_Geometry_NurbsCurve_CreateFromLine">CreateFromLine Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_NurbsCurve_CreateHSpline.htm" title="CreateHSpline Method " tocid="Overload_Rhino_Geometry_NurbsCurve_CreateHSpline">CreateHSpline Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_NurbsCurve_CreateParabolaFromFocus.htm" title="CreateParabolaFromFocus Method " tocid="M_Rhino_Geometry_NurbsCurve_CreateParabolaFromFocus">CreateParabolaFromFocus Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_NurbsCurve_CreateParabolaFromVertex.htm" title="CreateParabolaFromVertex Method " tocid="M_Rhino_Geometry_NurbsCurve_CreateParabolaFromVertex">CreateParabolaFromVertex Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_NurbsCurve_CreatePlanarRailFrames.htm" title="CreatePlanarRailFrames Method " tocid="M_Rhino_Geometry_NurbsCurve_CreatePlanarRailFrames">CreatePlanarRailFrames Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_NurbsCurve_CreateRailFrames.htm" title="CreateRailFrames Method " tocid="M_Rhino_Geometry_NurbsCurve_CreateRailFrames">CreateRailFrames Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_NurbsCurve_CreateSpiral.htm" title="CreateSpiral Method " tocid="Overload_Rhino_Geometry_NurbsCurve_CreateSpiral">CreateSpiral Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_NurbsCurve_CreateSubDFriendly.htm" title="CreateSubDFriendly Method " tocid="Overload_Rhino_Geometry_NurbsCurve_CreateSubDFriendly">CreateSubDFriendly Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_NurbsCurve_EpsilonEquals.htm" title="EpsilonEquals Method " tocid="M_Rhino_Geometry_NurbsCurve_EpsilonEquals">EpsilonEquals Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_NurbsCurve_GrevilleParameter.htm" title="GrevilleParameter Method " tocid="M_Rhino_Geometry_NurbsCurve_GrevilleParameter">GrevilleParameter Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_NurbsCurve_GrevilleParameters.htm" title="GrevilleParameters Method " tocid="M_Rhino_Geometry_NurbsCurve_GrevilleParameters">GrevilleParameters Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_NurbsCurve_GrevillePoint.htm" title="GrevillePoint Method " tocid="M_Rhino_Geometry_NurbsCurve_GrevillePoint">GrevillePoint Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_NurbsCurve_GrevillePoints.htm" title="GrevillePoints Method " tocid="Overload_Rhino_Geometry_NurbsCurve_GrevillePoints">GrevillePoints Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_NurbsCurve_IncreaseDegree.htm" title="IncreaseDegree Method " tocid="M_Rhino_Geometry_NurbsCurve_IncreaseDegree">IncreaseDegree Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_NurbsCurve_IsDuplicate.htm" title="IsDuplicate Method " tocid="M_Rhino_Geometry_NurbsCurve_IsDuplicate">IsDuplicate Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_NurbsCurve_MakeCompatible.htm" title="MakeCompatible Method " tocid="M_Rhino_Geometry_NurbsCurve_MakeCompatible">MakeCompatible Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_NurbsCurve_MakePiecewiseBezier.htm" title="MakePiecewiseBezier Method " tocid="M_Rhino_Geometry_NurbsCurve_MakePiecewiseBezier">MakePiecewiseBezier Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_NurbsCurve_Reparameterize.htm" title="Reparameterize Method " tocid="M_Rhino_Geometry_NurbsCurve_Reparameterize">Reparameterize Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_NurbsCurve_SetEndCondition.htm" title="SetEndCondition Method " tocid="Overload_Rhino_Geometry_NurbsCurve_SetEndCondition">SetEndCondition Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_NurbsCurve_SetGrevillePoints.htm" title="SetGrevillePoints Method " tocid="M_Rhino_Geometry_NurbsCurve_SetGrevillePoints">SetGrevillePoints Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_NurbsCurve_UVNDirectionsAt.htm" title="UVNDirectionsAt Method " tocid="M_Rhino_Geometry_NurbsCurve_UVNDirectionsAt">UVNDirectionsAt Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>NurbsCurve<span id="LST531604EB_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST531604EB_0?cpp=::|nu=.");</script>IncreaseDegree Method </h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Increase the degree of this curve.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino_Geometry.htm">Rhino.Geometry</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="since"><strong>Since:</strong> 5.0</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">bool</span> <span class="identifier">IncreaseDegree</span>(
	<span class="identifier">int</span> <span class="parameter">desiredDegree</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">IncreaseDegree</span> ( 
	<span class="parameter">desiredDegree</span> <span class="keyword">As</span> <span class="identifier">Integer</span>
) <span class="keyword">As</span> <span class="identifier">Boolean</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">desiredDegree</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.int32" target="_blank">System<span id="LST531604EB_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST531604EB_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Int32</a><br />The desired degree. 
            Degrees should be number between and including 1 and 11.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="https://docs.microsoft.com/dotnet/api/system.boolean" target="_blank">Boolean</a><br />true on success, false on failure.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBBBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','cs','1','2');return false;">C#</a></div><div id="ID0EBBBBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBBBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Rhino;
<span class="highlight-keyword">using</span> Rhino.Commands;
<span class="highlight-keyword">using</span> Rhino.Input;
<span class="highlight-keyword">using</span> Rhino.DocObjects;

<span class="highlight-keyword">namespace</span> examples_cs
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> NurbsCurveIncreaseDegreeCommand : Command
  {
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">string</span> EnglishName { <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-literal">"csNurbsCrvIncreaseDegree"</span>; } }

    <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> Result RunCommand(RhinoDoc doc, RunMode mode)
    {
      ObjRef obj_ref;
      <span class="highlight-keyword">var</span> rc = RhinoGet.GetOneObject(
        <span class="highlight-literal">"Select curve"</span>, <span class="highlight-keyword">false</span>, ObjectType.Curve, <span class="highlight-keyword">out</span> obj_ref);
      <span class="highlight-keyword">if</span> (rc != Result.Success) <span class="highlight-keyword">return</span> rc;
      <span class="highlight-keyword">if</span> (obj_ref == <span class="highlight-keyword">null</span>) <span class="highlight-keyword">return</span> Result.Failure;
      <span class="highlight-keyword">var</span> curve = obj_ref.Curve();
      <span class="highlight-keyword">if</span> (curve == <span class="highlight-keyword">null</span>) <span class="highlight-keyword">return</span> Result.Failure;
      <span class="highlight-keyword">var</span> nurbs_curve = curve.ToNurbsCurve();

      <span class="highlight-keyword">int</span> new_degree = <span class="highlight-number">-1</span>;
      rc = RhinoGet.GetInteger(<span class="highlight-keyword">string</span>.Format(<span class="highlight-literal">"New degree &lt;{0}...11&gt;"</span>, nurbs_curve.Degree), <span class="highlight-keyword">true</span>, <span class="highlight-keyword">ref</span> new_degree,
        nurbs_curve.Degree, <span class="highlight-number">11</span>);
      <span class="highlight-keyword">if</span> (rc != Result.Success) <span class="highlight-keyword">return</span> rc;

      rc = Result.Failure;
      <span class="highlight-keyword">if</span> (nurbs_curve.IncreaseDegree(new_degree))
        <span class="highlight-keyword">if</span> (doc.Objects.Replace(obj_ref.ObjectId, nurbs_curve))
          rc = Result.Success;

      RhinoApp.WriteLine(<span class="highlight-literal">"Result: {0}"</span>, rc.ToString());
      doc.Views.Redraw();
      <span class="highlight-keyword">return</span> rc;
    }
  }
}</pre></div><div id="ID0EBBBBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Imports</span> Rhino
<span class="highlight-keyword">Imports</span> Rhino.Commands
<span class="highlight-keyword">Imports</span> Rhino.Input
<span class="highlight-keyword">Imports</span> Rhino.DocObjects

<span class="highlight-keyword">Namespace</span> examples_vb
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> NurbsCurveIncreaseDegreeCommand
    <span class="highlight-keyword">Inherits</span> Command
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">ReadOnly</span> <span class="highlight-keyword">Property</span> EnglishName() <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span>
      <span class="highlight-keyword">Get</span>
        <span class="highlight-keyword">Return</span> <span class="highlight-literal">"vbNurbsCrvIncreaseDegree"</span>
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">Get</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Property</span>

    <span class="highlight-keyword">Protected</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">Function</span> RunCommand(doc <span class="highlight-keyword">As</span> RhinoDoc, mode <span class="highlight-keyword">As</span> RunMode) <span class="highlight-keyword">As</span> Result
      <span class="highlight-keyword">Dim</span> obj_ref <span class="highlight-keyword">As</span> ObjRef
      <span class="highlight-keyword">Dim</span> rc = RhinoGet.GetOneObject(<span class="highlight-literal">"Select curve"</span>, <span class="highlight-keyword">False</span>, ObjectType.Curve, obj_ref)
      <span class="highlight-keyword">If</span> rc &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> rc
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">If</span> obj_ref <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> Result.Failure
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">Dim</span> curve = obj_ref.Curve()
      <span class="highlight-keyword">If</span> curve <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> Result.Failure
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">Dim</span> nurbs_curve = curve.ToNurbsCurve()

      <span class="highlight-keyword">Dim</span> new_degree <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">-1</span>
      rc = RhinoGet.GetInteger(<span class="highlight-keyword">String</span>.Format(<span class="highlight-literal">"New degree &lt;{0}...11&gt;"</span>, nurbs_curve.Degree), <span class="highlight-keyword">True</span>, new_degree, nurbs_curve.Degree, <span class="highlight-number">11</span>)
      <span class="highlight-keyword">If</span> rc &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> rc
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      rc = Result.Failure
      <span class="highlight-keyword">If</span> nurbs_curve.IncreaseDegree(new_degree) <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">If</span> doc.Objects.Replace(obj_ref.ObjectId, nurbs_curve) <span class="highlight-keyword">Then</span>
          rc = Result.Success
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      RhinoApp.WriteLine(<span class="highlight-literal">"Result: {0}"</span>, rc.ToString())
      doc.Views.Redraw()
      <span class="highlight-keyword">Return</span> rc
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Namespace</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBBBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAABBA_tab1" class="codeSnippetContainerTabSingle">Python</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">from</span> Rhino <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> Rhino.Commands <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> Rhino.Input <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> Rhino.DocObjects <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> scriptcontext <span class="highlight-keyword">import</span> doc

<span class="highlight-keyword">def</span> RunCommand():
  rc, obj_ref = RhinoGet.GetOneObject(<span class="highlight-literal">"Select curve"</span>, False, ObjectType.Curve)
  <span class="highlight-keyword">if</span> rc != Result.Success: <span class="highlight-keyword">return</span> rc
  <span class="highlight-keyword">if</span> obj_ref == None: <span class="highlight-keyword">return</span> Result.Failure
  curve = obj_ref.Curve()
  <span class="highlight-keyword">if</span> curve == None: <span class="highlight-keyword">return</span> Result.Failure
  nurbs_curve = curve.ToNurbsCurve()

  new_degree = <span class="highlight-number">-1</span>
  rc, new_degree = RhinoGet.GetInteger(
    <span class="highlight-literal">"New degree &lt;{0}...11&gt;"</span>.format(nurbs_curve.Degree), True, new_degree, nurbs_curve.Degree, <span class="highlight-number">11</span>)
  <span class="highlight-keyword">if</span> rc != Result.Success: <span class="highlight-keyword">return</span> rc

  rc = Result.Failure
  <span class="highlight-keyword">if</span> nurbs_curve.IncreaseDegree(new_degree):
    <span class="highlight-keyword">if</span> doc.Objects.Replace(obj_ref.ObjectId, nurbs_curve):
      rc = Result.Success

  <span class="highlight-keyword">print</span> <span class="highlight-literal">"Result: {0}"</span>.format(rc)
  doc.Views.Redraw()
  <span class="highlight-keyword">return</span> rc

<span class="highlight-keyword">if</span> __name__ == <span class="highlight-literal">"__main__"</span>:
  RunCommand()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_Geometry_NurbsCurve.htm">NurbsCurve Class</a></div><div class="seeAlsoStyle"><a href="N_Rhino_Geometry.htm">Rhino.Geometry Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.18.22124.03000 (Last updated: 5/10/2022)<br />Copyright © 2009-2022 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>