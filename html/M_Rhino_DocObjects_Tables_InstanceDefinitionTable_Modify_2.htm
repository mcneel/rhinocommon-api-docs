<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>InstanceDefinitionTable.Modify Method (Int32, String, String, Boolean)</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Rhino.DocObjects.Tables.InstanceDefinitionTable.Modify(System.Int32,System.String,System.String,System.Boolean)" /><meta name="Description" content="Modifies the instance definition name and description. Does not change instance definition ID or geometry." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.DocObjects.Tables" /><meta name="file" content="M_Rhino_DocObjects_Tables_InstanceDefinitionTable_Modify_2" /><meta name="guid" content="M_Rhino_DocObjects_Tables_InstanceDefinitionTable_Modify_2" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_DocObjects_Tables.htm" title="Rhino.DocObjects.Tables" tocid="N_Rhino_DocObjects_Tables">Rhino.DocObjects.Tables</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_DocObjects_Tables_InstanceDefinitionTable.htm" title="InstanceDefinitionTable Class" tocid="T_Rhino_DocObjects_Tables_InstanceDefinitionTable">InstanceDefinitionTable Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Rhino_DocObjects_Tables_InstanceDefinitionTable.htm" title="InstanceDefinitionTable Methods" tocid="Methods_T_Rhino_DocObjects_Tables_InstanceDefinitionTable">InstanceDefinitionTable Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_DocObjects_Tables_InstanceDefinitionTable_Modify.htm" title="Modify Method " tocid="Overload_Rhino_DocObjects_Tables_InstanceDefinitionTable_Modify">Modify Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Tables_InstanceDefinitionTable_Modify_2.htm" title="Modify Method (Int32, String, String, Boolean)" tocid="M_Rhino_DocObjects_Tables_InstanceDefinitionTable_Modify_2">Modify Method (Int32, String, String, Boolean)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Tables_InstanceDefinitionTable_Modify.htm" title="Modify Method (InstanceDefinition, String, String, Boolean)" tocid="M_Rhino_DocObjects_Tables_InstanceDefinitionTable_Modify">Modify Method (InstanceDefinition, String, String, Boolean)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Tables_InstanceDefinitionTable_Modify_3.htm" title="Modify Method (Int32, String, String, String, String, Boolean)" tocid="M_Rhino_DocObjects_Tables_InstanceDefinitionTable_Modify_3">Modify Method (Int32, String, String, String, String, Boolean)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Tables_InstanceDefinitionTable_Modify_1.htm" title="Modify Method (InstanceDefinition, String, String, String, String, Boolean)" tocid="M_Rhino_DocObjects_Tables_InstanceDefinitionTable_Modify_1">Modify Method (InstanceDefinition, String, String, String, String, Boolean)</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>InstanceDefinitionTable<span id="LSTBBCBC7F7_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBBCBC7F7_0?cpp=::|nu=.");</script>Modify Method (Int32, String, String, Boolean)</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Modifies the instance definition name and description.
            Does not change instance definition ID or geometry.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino_DocObjects_Tables.htm">Rhino.DocObjects.Tables</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="since"><strong>Since:</strong> 5.0</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">bool</span> <span class="identifier">Modify</span>(
	<span class="identifier">int</span> <span class="parameter">idefIndex</span>,
	<span class="identifier">string</span> <span class="parameter">newName</span>,
	<span class="identifier">string</span> <span class="parameter">newDescription</span>,
	<span class="identifier">bool</span> <span class="parameter">quiet</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">Modify</span> ( 
	<span class="parameter">idefIndex</span> <span class="keyword">As</span> <span class="identifier">Integer</span>,
	<span class="parameter">newName</span> <span class="keyword">As</span> <span class="identifier">String</span>,
	<span class="parameter">newDescription</span> <span class="keyword">As</span> <span class="identifier">String</span>,
	<span class="parameter">quiet</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>
) <span class="keyword">As</span> <span class="identifier">Boolean</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">idefIndex</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.int32" target="_blank">System<span id="LSTBBCBC7F7_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBBCBC7F7_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Int32</a><br />The index of the instance definition to be modified.</dd><dt><span class="parameter">newName</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.string" target="_blank">System<span id="LSTBBCBC7F7_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBBCBC7F7_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>String</a><br />The new name.</dd><dt><span class="parameter">newDescription</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.string" target="_blank">System<span id="LSTBBCBC7F7_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBBCBC7F7_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>String</a><br />The new description string.</dd><dt><span class="parameter">quiet</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.boolean" target="_blank">System<span id="LSTBBCBC7F7_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBBCBC7F7_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Boolean</a><br />
            If true, information message boxes pop up when illegal changes are attempted.
            </dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="https://docs.microsoft.com/dotnet/api/system.boolean" target="_blank">Boolean</a><br />
            true if successful.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBBBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','cs','1','2');return false;">C#</a></div><div id="ID0EBBBBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBBBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Rhino;
<span class="highlight-keyword">using</span> Rhino.Input;
<span class="highlight-keyword">using</span> Rhino.Commands;

<span class="highlight-keyword">namespace</span> examples_cs
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> RenameBlockCommand : Command
  {
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">string</span> EnglishName { <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-literal">"csRenameBlock"</span>; } }

    <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> Result RunCommand(RhinoDoc doc, RunMode mode)
    {
      <span class="highlight-comment">// Get the name of the insance definition to rename</span>
      <span class="highlight-keyword">var</span> instance_definition_name = <span class="highlight-literal">""</span>;
      <span class="highlight-keyword">var</span> rc = RhinoGet.GetString(<span class="highlight-literal">"Name of block to rename"</span>, <span class="highlight-keyword">true</span>, <span class="highlight-keyword">ref</span> instance_definition_name);
      <span class="highlight-keyword">if</span> (rc != Result.Success)
        <span class="highlight-keyword">return</span> rc;
      <span class="highlight-keyword">if</span> (<span class="highlight-keyword">string</span>.IsNullOrWhiteSpace(instance_definition_name))
        <span class="highlight-keyword">return</span> Result.Nothing;

      <span class="highlight-comment">// Verify instance definition exists</span>
      <span class="highlight-keyword">var</span> instance_definition = doc.InstanceDefinitions.Find(instance_definition_name, <span class="highlight-keyword">true</span>);
      <span class="highlight-keyword">if</span> (instance_definition == <span class="highlight-keyword">null</span>) {
        RhinoApp.WriteLine(<span class="highlight-literal">"Block '{0}' not found."</span>, instance_definition_name);
        <span class="highlight-keyword">return</span> Result.Nothing;
      }

      <span class="highlight-comment">// Verify instance definition is rename-able</span>
      <span class="highlight-keyword">if</span> (instance_definition.IsDeleted || instance_definition.IsReference) {
        RhinoApp.WriteLine(<span class="highlight-literal">"Unable to rename block '{0}'."</span>, instance_definition_name);
        <span class="highlight-keyword">return</span> Result.Nothing;
      }

      <span class="highlight-comment">// Get the new instance definition name</span>
      <span class="highlight-keyword">string</span> instance_definition_new_name = <span class="highlight-literal">""</span>;
      rc = RhinoGet.GetString(<span class="highlight-literal">"Name of block to rename"</span>, <span class="highlight-keyword">true</span>, <span class="highlight-keyword">ref</span> instance_definition_new_name);
      <span class="highlight-keyword">if</span> (rc != Result.Success)
        <span class="highlight-keyword">return</span> rc;
      <span class="highlight-keyword">if</span> (<span class="highlight-keyword">string</span>.IsNullOrWhiteSpace(instance_definition_new_name))
        <span class="highlight-keyword">return</span> Result.Nothing;

      <span class="highlight-comment">// Verify the new instance definition name is not already in use</span>
      <span class="highlight-keyword">var</span> existing_instance_definition = doc.InstanceDefinitions.Find(instance_definition_new_name, <span class="highlight-keyword">true</span>);
      <span class="highlight-keyword">if</span> (existing_instance_definition != <span class="highlight-keyword">null</span> &amp;&amp; !existing_instance_definition.IsDeleted) {
        RhinoApp.WriteLine(<span class="highlight-literal">"Block '{0}' already exists."</span>, existing_instance_definition);
        <span class="highlight-keyword">return</span> Result.Nothing;
      }

      <span class="highlight-comment">// change the block name</span>
      <span class="highlight-keyword">if</span> (!doc.InstanceDefinitions.Modify(instance_definition.Index, instance_definition_new_name, instance_definition.Description, <span class="highlight-keyword">true</span>)) {
        RhinoApp.WriteLine(<span class="highlight-literal">"Could not rename {0} to {1}"</span>, instance_definition.Name, instance_definition_new_name);
        <span class="highlight-keyword">return</span> Result.Failure;
      }

      <span class="highlight-keyword">return</span> Result.Success;
    }
  }
}</pre></div><div id="ID0EBBBBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Imports</span> Rhino
<span class="highlight-keyword">Imports</span> Rhino.Commands

<span class="highlight-keyword">Namespace</span> examples_vb
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> RenameBlockCommand
    <span class="highlight-keyword">Inherits</span> Command
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">ReadOnly</span> <span class="highlight-keyword">Property</span> EnglishName() <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span>
      <span class="highlight-keyword">Get</span>
        <span class="highlight-keyword">Return</span> <span class="highlight-literal">"vbRenameInstanceDefinition"</span>
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">Get</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Property</span>

    <span class="highlight-keyword">Protected</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">Function</span> RunCommand(doc <span class="highlight-keyword">As</span> RhinoDoc, mode <span class="highlight-keyword">As</span> RunMode) <span class="highlight-keyword">As</span> Result
      <span class="highlight-comment">' Get the name of the insance definition to rename</span>
      <span class="highlight-keyword">Dim</span> instanceDefinitionName <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">""</span>
      <span class="highlight-keyword">Dim</span> rc = Rhino.Input.RhinoGet.GetString(<span class="highlight-literal">"Name of block to rename"</span>, <span class="highlight-keyword">True</span>, instanceDefinitionName)
      <span class="highlight-keyword">If</span> rc &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> rc
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">If</span> [<span class="highlight-keyword">String</span>].IsNullOrWhiteSpace(instanceDefinitionName) <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> Result.[<span class="highlight-keyword">Nothing</span>]
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-comment">' Verify instance definition exists</span>
      <span class="highlight-keyword">Dim</span> instanceDefinition = doc.InstanceDefinitions.Find(instanceDefinitionName, <span class="highlight-keyword">True</span>)
      <span class="highlight-keyword">If</span> instanceDefinition <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        RhinoApp.WriteLine([<span class="highlight-keyword">String</span>].Format(<span class="highlight-literal">"Block "</span><span class="highlight-literal">"{0}"</span><span class="highlight-literal">" not found."</span>, instanceDefinitionName))
        <span class="highlight-keyword">Return</span> Result.[<span class="highlight-keyword">Nothing</span>]
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-comment">' Verify instance definition is rename-able</span>
      <span class="highlight-keyword">If</span> instanceDefinition.IsDeleted <span class="highlight-keyword">OrElse</span> instanceDefinition.IsReference <span class="highlight-keyword">Then</span>
        RhinoApp.WriteLine([<span class="highlight-keyword">String</span>].Format(<span class="highlight-literal">"Unable to rename block "</span><span class="highlight-literal">"{0}"</span><span class="highlight-literal">"."</span>, instanceDefinitionName))
        <span class="highlight-keyword">Return</span> Result.[<span class="highlight-keyword">Nothing</span>]
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-comment">' Get the new instance definition name</span>
      <span class="highlight-keyword">Dim</span> instanceDefinitionNewName <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">""</span>
      rc = Rhino.Input.RhinoGet.GetString(<span class="highlight-literal">"Name of block to rename"</span>, <span class="highlight-keyword">True</span>, instanceDefinitionNewName)
      <span class="highlight-keyword">If</span> rc &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> rc
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">If</span> [<span class="highlight-keyword">String</span>].IsNullOrWhiteSpace(instanceDefinitionNewName) <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> Result.[<span class="highlight-keyword">Nothing</span>]
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-comment">' Verify the new instance definition name is not already in use</span>
      <span class="highlight-keyword">Dim</span> existingInstanceDefinition = doc.InstanceDefinitions.Find(instanceDefinitionNewName, <span class="highlight-keyword">True</span>)
      <span class="highlight-keyword">If</span> existingInstanceDefinition <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">AndAlso</span> <span class="highlight-keyword">Not</span> existingInstanceDefinition.IsDeleted <span class="highlight-keyword">Then</span>
        RhinoApp.WriteLine([<span class="highlight-keyword">String</span>].Format(<span class="highlight-literal">"Block "</span><span class="highlight-literal">"{0}"</span><span class="highlight-literal">" already exists."</span>, existingInstanceDefinition))
        <span class="highlight-keyword">Return</span> Result.[<span class="highlight-keyword">Nothing</span>]
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-comment">' change the block name</span>
      <span class="highlight-keyword">If</span> <span class="highlight-keyword">Not</span> doc.InstanceDefinitions.Modify(instanceDefinition.Index, instanceDefinitionNewName, instanceDefinition.Description, <span class="highlight-keyword">True</span>) <span class="highlight-keyword">Then</span>
        RhinoApp.WriteLine([<span class="highlight-keyword">String</span>].Format(<span class="highlight-literal">"Could not rename {0} to {1}"</span>, instanceDefinition.Name, instanceDefinitionNewName))
        <span class="highlight-keyword">Return</span> Result.Failure
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-keyword">Return</span> Result.Success
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Namespace</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBBBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAABBA_tab1" class="codeSnippetContainerTabSingle">Python</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">import</span> rhinoscriptsyntax <span class="highlight-keyword">as</span> rs
<span class="highlight-keyword">from</span> scriptcontext <span class="highlight-keyword">import</span> doc

<span class="highlight-keyword">def</span> Rename():
    blockName = rs.GetString(<span class="highlight-literal">"block to rename"</span>)
    instanceDefinition = doc.InstanceDefinitions.Find(blockName, True)
    <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> instanceDefinition: 
        <span class="highlight-keyword">print</span> <span class="highlight-literal">"{0} block does not exist"</span>.format(blockName)
        <span class="highlight-keyword">return</span>

    newName = rs.GetString(<span class="highlight-literal">"new name"</span>)
    instanceDefinition = doc.InstanceDefinitions.Find(newName, True)
    <span class="highlight-keyword">if</span> instanceDefinition: 
        <span class="highlight-keyword">print</span> <span class="highlight-literal">"the name '{0}' is already taken by another block"</span>.format(newName)
        <span class="highlight-keyword">return</span>

    rs.RenameBlock(blockName, newName)

<span class="highlight-keyword">if</span> __name__ == <span class="highlight-literal">"__main__"</span>:
    Rename()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_DocObjects_Tables_InstanceDefinitionTable.htm">InstanceDefinitionTable Class</a></div><div class="seeAlsoStyle"><a href="Overload_Rhino_DocObjects_Tables_InstanceDefinitionTable_Modify.htm">Modify Overload</a></div><div class="seeAlsoStyle"><a href="N_Rhino_DocObjects_Tables.htm">Rhino.DocObjects.Tables Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.17.22102.05000 (Last updated: 4/21/2022)<br />Copyright © 2009-2022 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>