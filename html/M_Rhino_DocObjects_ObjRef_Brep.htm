<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>ObjRef.Brep Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Brep method" /><meta name="System.Keywords" content="ObjRef.Brep method" /><meta name="Microsoft.Help.F1" content="Rhino.DocObjects.ObjRef.Brep" /><meta name="Microsoft.Help.Id" content="M:Rhino.DocObjects.ObjRef.Brep" /><meta name="Description" content="Gets the brep if this reference geometry is one." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.DocObjects" /><meta name="file" content="M_Rhino_DocObjects_ObjRef_Brep" /><meta name="guid" content="M_Rhino_DocObjects_ObjRef_Brep" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_DocObjects.htm" title="Rhino.DocObjects" tocid="N_Rhino_DocObjects">Rhino.DocObjects</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_DocObjects_ObjRef.htm" title="ObjRef Class" tocid="T_Rhino_DocObjects_ObjRef">ObjRef Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Rhino_DocObjects_ObjRef.htm" title="ObjRef Methods" tocid="Methods_T_Rhino_DocObjects_ObjRef">ObjRef Methods</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_Brep.htm" title="Brep Method " tocid="M_Rhino_DocObjects_ObjRef_Brep">Brep Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_ClippingPlaneSurface.htm" title="ClippingPlaneSurface Method " tocid="M_Rhino_DocObjects_ObjRef_ClippingPlaneSurface">ClippingPlaneSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_Curve.htm" title="Curve Method " tocid="M_Rhino_DocObjects_ObjRef_Curve">Curve Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_CurveParameter.htm" title="CurveParameter Method " tocid="M_Rhino_DocObjects_ObjRef_CurveParameter">CurveParameter Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_DocObjects_ObjRef_Dispose.htm" title="Dispose Method " tocid="Overload_Rhino_DocObjects_ObjRef_Dispose">Dispose Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_Edge.htm" title="Edge Method " tocid="M_Rhino_DocObjects_ObjRef_Edge">Edge Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_Face.htm" title="Face Method " tocid="M_Rhino_DocObjects_ObjRef_Face">Face Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_Finalize.htm" title="Finalize Method " tocid="M_Rhino_DocObjects_ObjRef_Finalize">Finalize Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_Geometry.htm" title="Geometry Method " tocid="M_Rhino_DocObjects_ObjRef_Geometry">Geometry Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_Hatch.htm" title="Hatch Method " tocid="M_Rhino_DocObjects_ObjRef_Hatch">Hatch Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_InstanceDefinitionPart.htm" title="InstanceDefinitionPart Method " tocid="M_Rhino_DocObjects_ObjRef_InstanceDefinitionPart">InstanceDefinitionPart Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_Light.htm" title="Light Method " tocid="M_Rhino_DocObjects_ObjRef_Light">Light Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_Mesh.htm" title="Mesh Method " tocid="M_Rhino_DocObjects_ObjRef_Mesh">Mesh Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_Object.htm" title="Object Method " tocid="M_Rhino_DocObjects_ObjRef_Object">Object Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_Point.htm" title="Point Method " tocid="M_Rhino_DocObjects_ObjRef_Point">Point Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_PointCloud.htm" title="PointCloud Method " tocid="M_Rhino_DocObjects_ObjRef_PointCloud">PointCloud Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_SelectionMethod.htm" title="SelectionMethod Method " tocid="M_Rhino_DocObjects_ObjRef_SelectionMethod">SelectionMethod Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_SelectionPoint.htm" title="SelectionPoint Method " tocid="M_Rhino_DocObjects_ObjRef_SelectionPoint">SelectionPoint Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_SelectionView.htm" title="SelectionView Method " tocid="M_Rhino_DocObjects_ObjRef_SelectionView">SelectionView Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_SelectionViewDetailSerialNumber.htm" title="SelectionViewDetailSerialNumber Method " tocid="M_Rhino_DocObjects_ObjRef_SelectionViewDetailSerialNumber">SelectionViewDetailSerialNumber Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_SetSelectionComponent.htm" title="SetSelectionComponent Method " tocid="M_Rhino_DocObjects_ObjRef_SetSelectionComponent">SetSelectionComponent Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_SubD.htm" title="SubD Method " tocid="M_Rhino_DocObjects_ObjRef_SubD">SubD Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_SubDFace.htm" title="SubDFace Method " tocid="M_Rhino_DocObjects_ObjRef_SubDFace">SubDFace Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_Surface.htm" title="Surface Method " tocid="M_Rhino_DocObjects_ObjRef_Surface">Surface Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_SurfaceParameter.htm" title="SurfaceParameter Method " tocid="M_Rhino_DocObjects_ObjRef_SurfaceParameter">SurfaceParameter Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_TextDot.htm" title="TextDot Method " tocid="M_Rhino_DocObjects_ObjRef_TextDot">TextDot Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_TextEntity.htm" title="TextEntity Method " tocid="M_Rhino_DocObjects_ObjRef_TextEntity">TextEntity Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_ObjRef_Trim.htm" title="Trim Method " tocid="M_Rhino_DocObjects_ObjRef_Trim">Trim Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>ObjRef<span id="LST21D00038_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST21D00038_0?cpp=::|nu=.");</script>Brep Method </h1></td></tr></table><span class="introStyle"></span> <div class="summary">
             Gets the brep if this reference geometry is one.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino_DocObjects.htm">Rhino.DocObjects</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="since"><strong>Since:</strong> 5.0</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">Brep</span> <span class="identifier">Brep</span>()</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">Brep</span> <span class="keyword">As</span> <span class="identifier">Brep</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Return Value</h4>Type: <a href="T_Rhino_Geometry_Brep.htm">Brep</a><br />A boundary representation; or null on error.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBBBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','cs','1','2');return false;">C#</a></div><div id="ID0EBBBBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBBBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System.Collections.Generic;
<span class="highlight-keyword">using</span> Rhino.Commands;

<span class="highlight-keyword">partial</span> <span class="highlight-keyword">class</span> Examples
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> Rhino.Commands.Result BooleanDifference(Rhino.RhinoDoc doc)
  {
    Rhino.DocObjects.ObjRef[] objrefs;
    Result rc = Rhino.Input.RhinoGet.GetMultipleObjects(<span class="highlight-literal">"Select first set of polysurfaces"</span>,
                                                        <span class="highlight-keyword">false</span>, Rhino.DocObjects.ObjectType.PolysrfFilter, <span class="highlight-keyword">out</span> objrefs);
    <span class="highlight-keyword">if</span> (rc != Rhino.Commands.Result.Success)
      <span class="highlight-keyword">return</span> rc;
    <span class="highlight-keyword">if</span> (objrefs == <span class="highlight-keyword">null</span> || objrefs.Length &lt; <span class="highlight-number">1</span>)
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure;

    List&lt;Rhino.Geometry.Brep&gt; in_breps0 = <span class="highlight-keyword">new</span> List&lt;Rhino.Geometry.Brep&gt;();
    <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; objrefs.Length; i++)
    {
      Rhino.Geometry.Brep brep = objrefs[i].Brep();
      <span class="highlight-keyword">if</span> (brep != <span class="highlight-keyword">null</span>)
        in_breps0.Add(brep);
    }

    doc.Objects.UnselectAll();
    rc = Rhino.Input.RhinoGet.GetMultipleObjects(<span class="highlight-literal">"Select second set of polysurfaces"</span>,
      <span class="highlight-keyword">false</span>, Rhino.DocObjects.ObjectType.PolysrfFilter, <span class="highlight-keyword">out</span> objrefs);
    <span class="highlight-keyword">if</span> (rc != Rhino.Commands.Result.Success)
      <span class="highlight-keyword">return</span> rc;
    <span class="highlight-keyword">if</span> (objrefs == <span class="highlight-keyword">null</span> || objrefs.Length &lt; <span class="highlight-number">1</span>)
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure;

    List&lt;Rhino.Geometry.Brep&gt; in_breps1 = <span class="highlight-keyword">new</span> List&lt;Rhino.Geometry.Brep&gt;();
    <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; objrefs.Length; i++)
    {
      Rhino.Geometry.Brep brep = objrefs[i].Brep();
      <span class="highlight-keyword">if</span> (brep != <span class="highlight-keyword">null</span>)
        in_breps1.Add(brep);
    }

    <span class="highlight-keyword">double</span> tolerance = doc.ModelAbsoluteTolerance;
    Rhino.Geometry.Brep[] breps = Rhino.Geometry.Brep.CreateBooleanDifference(in_breps0, in_breps1, tolerance);
    <span class="highlight-keyword">if</span> (breps.Length &lt; <span class="highlight-number">1</span>)
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Nothing;
    <span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; breps.Length; i++)
      doc.Objects.AddBrep(breps[i]);
    doc.Views.Redraw();
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success;
  }
}</pre></div><div id="ID0EBBBBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Imports</span> System.Collections.Generic

<span class="highlight-keyword">Partial</span> <span class="highlight-keyword">Class</span> Examples
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Function</span> BooleanDifference(<span class="highlight-keyword">ByVal</span> doc <span class="highlight-keyword">As</span> Rhino.RhinoDoc) <span class="highlight-keyword">As</span> Rhino.Commands.Result
    <span class="highlight-keyword">Dim</span> rc <span class="highlight-keyword">As</span> Rhino.Commands.Result
    <span class="highlight-keyword">Dim</span> objrefs <span class="highlight-keyword">As</span> Rhino.DocObjects.ObjRef() = <span class="highlight-keyword">Nothing</span>
    rc = Rhino.Input.RhinoGet.GetMultipleObjects(<span class="highlight-literal">"Select first set of polysurfaces"</span>, <span class="highlight-keyword">False</span>, Rhino.DocObjects.ObjectType.PolysrfFilter, objrefs)
    <span class="highlight-keyword">If</span> rc &lt;&gt; Rhino.Commands.Result.Success <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> rc
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">If</span> objrefs <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">OrElse</span> objrefs.Length &lt; <span class="highlight-number">1</span> <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Failure
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Dim</span> in_breps0 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> Rhino.Geometry.Brep)()
    <span class="highlight-keyword">For</span> i <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> objrefs.Length - <span class="highlight-number">1</span>
      <span class="highlight-keyword">Dim</span> brep <span class="highlight-keyword">As</span> Rhino.Geometry.Brep = objrefs(i).Brep()
      <span class="highlight-keyword">If</span> brep <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        in_breps0.Add(brep)
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Next</span>

    doc.Objects.UnselectAll()
    rc = Rhino.Input.RhinoGet.GetMultipleObjects(<span class="highlight-literal">"Select second set of polysurfaces"</span>, <span class="highlight-keyword">False</span>, Rhino.DocObjects.ObjectType.PolysrfFilter, objrefs)
    <span class="highlight-keyword">If</span> rc &lt;&gt; Rhino.Commands.Result.Success <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> rc
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">If</span> objrefs <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">OrElse</span> objrefs.Length &lt; <span class="highlight-number">1</span> <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Failure
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Dim</span> in_breps1 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> Rhino.Geometry.Brep)()
    <span class="highlight-keyword">For</span> i <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> objrefs.Length - <span class="highlight-number">1</span>
      <span class="highlight-keyword">Dim</span> brep <span class="highlight-keyword">As</span> Rhino.Geometry.Brep = objrefs(i).Brep()
      <span class="highlight-keyword">If</span> brep <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        in_breps1.Add(brep)
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Next</span>

    <span class="highlight-keyword">Dim</span> tolerance <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = doc.ModelAbsoluteTolerance
    <span class="highlight-keyword">Dim</span> breps <span class="highlight-keyword">As</span> Rhino.Geometry.Brep() = Rhino.Geometry.Brep.CreateBooleanDifference(in_breps0, in_breps1, tolerance)
    <span class="highlight-keyword">If</span> breps.Length &lt; <span class="highlight-number">1</span> <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.[<span class="highlight-keyword">Nothing</span>]
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">For</span> i <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> breps.Length - <span class="highlight-number">1</span>
      doc.Objects.AddBrep(breps(i))
    <span class="highlight-keyword">Next</span>
    doc.Views.Redraw()
    <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Success
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBBBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAABBA_tab1" class="codeSnippetContainerTabSingle">Python</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">import</span> Rhino
<span class="highlight-keyword">import</span> scriptcontext

<span class="highlight-keyword">def</span> BooleanDifference():
    filter = Rhino.DocObjects.ObjectType.PolysrfFilter
    rc, objrefs = Rhino.Input.RhinoGet.GetMultipleObjects(<span class="highlight-literal">"Select first set of polysurfaces"</span>, False, filter)
    <span class="highlight-keyword">if</span> rc != Rhino.Commands.Result.Success: <span class="highlight-keyword">return</span> rc
    <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> objrefs: <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure

    in_breps0 = []
    <span class="highlight-keyword">for</span> objref <span class="highlight-keyword">in</span> objrefs:
        brep = objref.Brep()
        <span class="highlight-keyword">if</span> brep: in_breps0.append(brep)

    scriptcontext.doc.Objects.UnselectAll()
    rc, objrefs = Rhino.Input.RhinoGet.GetMultipleObjects(<span class="highlight-literal">"Select second set of polysurfaces"</span>, False, filter)
    <span class="highlight-keyword">if</span> rc != Rhino.Commands.Result.Success: <span class="highlight-keyword">return</span> rc
    <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> objrefs: <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure

    in_breps1 = []
    <span class="highlight-keyword">for</span> objref <span class="highlight-keyword">in</span> objrefs:
        brep = objref.Brep()
        <span class="highlight-keyword">if</span> brep: in_breps1.append(brep)

    tolerance = scriptcontext.doc.ModelAbsoluteTolerance
    breps = Rhino.Geometry.Brep.CreateBooleanDifference(in_breps0, in_breps1, tolerance)
    <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> breps: <span class="highlight-keyword">return</span> Rhino.Commands.Result.Nothing
    <span class="highlight-keyword">for</span> brep <span class="highlight-keyword">in</span> breps: scriptcontext.doc.Objects.AddBrep(brep)
    scriptcontext.doc.Views.Redraw()
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success

<span class="highlight-keyword">if</span> __name__==<span class="highlight-literal">"__main__"</span>:
    BooleanDifference()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_DocObjects_ObjRef.htm">ObjRef Class</a></div><div class="seeAlsoStyle"><a href="N_Rhino_DocObjects.htm">Rhino.DocObjects Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.17.22102.05000 (Last updated: 4/21/2022)<br />Copyright © 2009-2022 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>