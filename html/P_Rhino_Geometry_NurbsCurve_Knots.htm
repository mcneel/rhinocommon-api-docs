<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>NurbsCurve.Knots Property </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Knots property" /><meta name="System.Keywords" content="NurbsCurve.Knots property" /><meta name="Microsoft.Help.F1" content="Rhino.Geometry.NurbsCurve.Knots" /><meta name="Microsoft.Help.F1" content="Rhino.Geometry.NurbsCurve.get_Knots" /><meta name="Microsoft.Help.Id" content="P:Rhino.Geometry.NurbsCurve.Knots" /><meta name="Description" content="Gets access to the knots (or &quot;knot vector&quot;) of this NURBS curve." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Geometry" /><meta name="file" content="P_Rhino_Geometry_NurbsCurve_Knots" /><meta name="guid" content="P_Rhino_Geometry_NurbsCurve_Knots" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_Geometry.htm" title="Rhino.Geometry" tocid="N_Rhino_Geometry">Rhino.Geometry</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_Geometry_NurbsCurve.htm" title="NurbsCurve Class" tocid="T_Rhino_Geometry_NurbsCurve">NurbsCurve Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Properties_T_Rhino_Geometry_NurbsCurve.htm" title="NurbsCurve Properties" tocid="Properties_T_Rhino_Geometry_NurbsCurve">NurbsCurve Properties</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/P_Rhino_Geometry_NurbsCurve_HasBezierSpans.htm" title="HasBezierSpans Property " tocid="P_Rhino_Geometry_NurbsCurve_HasBezierSpans">HasBezierSpans Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/P_Rhino_Geometry_NurbsCurve_IsRational.htm" title="IsRational Property " tocid="P_Rhino_Geometry_NurbsCurve_IsRational">IsRational Property </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/P_Rhino_Geometry_NurbsCurve_Knots.htm" title="Knots Property " tocid="P_Rhino_Geometry_NurbsCurve_Knots">Knots Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/P_Rhino_Geometry_NurbsCurve_Order.htm" title="Order Property " tocid="P_Rhino_Geometry_NurbsCurve_Order">Order Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/P_Rhino_Geometry_NurbsCurve_Points.htm" title="Points Property " tocid="P_Rhino_Geometry_NurbsCurve_Points">Points Property </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>NurbsCurve<span id="LSTD1594FB5_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD1594FB5_0?cpp=::|nu=.");</script>Knots Property </h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Gets access to the knots (or "knot vector") of this NURBS curve.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino_Geometry.htm">Rhino.Geometry</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="since"><strong>Since:</strong> 5.0</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">NurbsCurveKnotList</span> <span class="identifier">Knots</span> { <span class="keyword">get</span>; }</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">ReadOnly</span> <span class="keyword">Property</span> <span class="identifier">Knots</span> <span class="keyword">As</span> <span class="identifier">NurbsCurveKnotList</span>
	<span class="keyword">Get</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Property Value</h4>Type: <a href="T_Rhino_Geometry_Collections_NurbsCurveKnotList.htm">NurbsCurveKnotList</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBBBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','cs','1','2');return false;">C#</a></div><div id="ID0EBBBBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBBBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;

<span class="highlight-keyword">partial</span> <span class="highlight-keyword">class</span> Examples
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> Rhino.Commands.Result AddNurbsCircle(Rhino.RhinoDoc doc)
  {
    <span class="highlight-comment">// The easy way to get a NURBS curve from a circle is with</span>
    <span class="highlight-comment">// the following two lines of code.</span>
    <span class="highlight-comment">// </span>
    <span class="highlight-comment">// Rhino.Geometry.Circle c = new Rhino.Geometry.Circle(20);</span>
    <span class="highlight-comment">// Rhino.Geometry.NurbsCurve nc = c.ToNurbsCurve();</span>
    <span class="highlight-comment">// </span>
    <span class="highlight-comment">// This sample demonstrates creating a NURBS curve from scratch.</span>
    <span class="highlight-keyword">const</span> <span class="highlight-keyword">int</span> dimension = <span class="highlight-number">3</span>;
    <span class="highlight-keyword">const</span> <span class="highlight-keyword">bool</span> isRational = <span class="highlight-keyword">true</span>;
    <span class="highlight-keyword">const</span> <span class="highlight-keyword">int</span> order = <span class="highlight-number">3</span>;
    <span class="highlight-keyword">const</span> <span class="highlight-keyword">int</span> cv_count = <span class="highlight-number">9</span>;
    Rhino.Geometry.NurbsCurve nc = <span class="highlight-keyword">new</span> Rhino.Geometry.NurbsCurve(dimension, isRational, order, cv_count);
    nc.Points.SetPoint(<span class="highlight-number">0</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>);
    nc.Points.SetPoint(<span class="highlight-number">1</span>, <span class="highlight-number">0.707107</span>, <span class="highlight-number">0.707107</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.707107</span>);
    nc.Points.SetPoint(<span class="highlight-number">2</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>);
    nc.Points.SetPoint(<span class="highlight-number">3</span>, <span class="highlight-number">-0.707107</span>, <span class="highlight-number">0.707107</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.707107</span>);
    nc.Points.SetPoint(<span class="highlight-number">4</span>, <span class="highlight-number">-1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>);
    nc.Points.SetPoint(<span class="highlight-number">5</span>, <span class="highlight-number">-0.707107</span>, <span class="highlight-number">-0.707107</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.707107</span>);
    nc.Points.SetPoint(<span class="highlight-number">6</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">-1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>);
    nc.Points.SetPoint(<span class="highlight-number">7</span>, <span class="highlight-number">0.707107</span>, <span class="highlight-number">-0.707107</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.707107</span>);
    nc.Points.SetPoint(<span class="highlight-number">8</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>);
    nc.Knots[<span class="highlight-number">0</span>] = <span class="highlight-number">0.0</span>;
    nc.Knots[<span class="highlight-number">1</span>] = <span class="highlight-number">0.0</span>;
    nc.Knots[<span class="highlight-number">2</span>] = <span class="highlight-number">0.5</span> * Math.PI;
    nc.Knots[<span class="highlight-number">3</span>] = <span class="highlight-number">0.5</span> * Math.PI;
    nc.Knots[<span class="highlight-number">4</span>] = Math.PI;
    nc.Knots[<span class="highlight-number">5</span>] = Math.PI;
    nc.Knots[<span class="highlight-number">6</span>] = <span class="highlight-number">1.5</span> * Math.PI;
    nc.Knots[<span class="highlight-number">7</span>] = <span class="highlight-number">1.5</span> * Math.PI;
    nc.Knots[<span class="highlight-number">8</span>] = <span class="highlight-number">2.0</span> * Math.PI;
    nc.Knots[<span class="highlight-number">9</span>] = <span class="highlight-number">2.0</span> * Math.PI;
    <span class="highlight-keyword">if</span> (nc.IsValid)
    {
      doc.Objects.AddCurve(nc);
      doc.Views.Redraw();
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success;
    }
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure;
  }
}</pre></div><div id="ID0EBBBBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Partial</span> <span class="highlight-keyword">Class</span> Examples
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Function</span> AddNurbsCircle(<span class="highlight-keyword">ByVal</span> doc <span class="highlight-keyword">As</span> Rhino.RhinoDoc) <span class="highlight-keyword">As</span> Rhino.Commands.Result
    <span class="highlight-comment">' The easy way to get a NURBS curve from a circle is with</span>
    <span class="highlight-comment">' the following two lines of code.</span>
    <span class="highlight-comment">'</span>
    <span class="highlight-comment">' Dim c As New Rhino.Geometry.Circle(20)</span>
    <span class="highlight-comment">' Dim nc As Rhino.Geometry.NurbsCurve = c.ToNurbsCurve()</span>
    <span class="highlight-comment">'</span>
    <span class="highlight-comment">' This sample demonstrates creating a NURBS curve from scratch.</span>
    <span class="highlight-keyword">Const</span> dimension <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">3</span>
    <span class="highlight-keyword">Const</span> isRational <span class="highlight-keyword">As</span> <span class="highlight-keyword">Boolean</span> = <span class="highlight-keyword">True</span>
    <span class="highlight-keyword">Const</span> order <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">3</span>
    <span class="highlight-keyword">Const</span> cv_count <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">9</span>
    <span class="highlight-keyword">Dim</span> nc <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Rhino.Geometry.NurbsCurve(dimension, isRational, order, cv_count)
    nc.Points.SetPoint(<span class="highlight-number">0</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>)
    nc.Points.SetPoint(<span class="highlight-number">1</span>, <span class="highlight-number">0.707107</span>, <span class="highlight-number">0.707107</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.707107</span>)
    nc.Points.SetPoint(<span class="highlight-number">2</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>)
    nc.Points.SetPoint(<span class="highlight-number">3</span>, <span class="highlight-number">-0.707107</span>, <span class="highlight-number">0.707107</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.707107</span>)
    nc.Points.SetPoint(<span class="highlight-number">4</span>, <span class="highlight-number">-1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>)
    nc.Points.SetPoint(<span class="highlight-number">5</span>, <span class="highlight-number">-0.707107</span>, <span class="highlight-number">-0.707107</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.707107</span>)
    nc.Points.SetPoint(<span class="highlight-number">6</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">-1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>)
    nc.Points.SetPoint(<span class="highlight-number">7</span>, <span class="highlight-number">0.707107</span>, <span class="highlight-number">-0.707107</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.707107</span>)
    nc.Points.SetPoint(<span class="highlight-number">8</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>)
    nc.Knots(<span class="highlight-number">0</span>) = <span class="highlight-number">0.0</span>
    nc.Knots(<span class="highlight-number">1</span>) = <span class="highlight-number">0.0</span>
    nc.Knots(<span class="highlight-number">2</span>) = <span class="highlight-number">0.5</span> * Math.PI
    nc.Knots(<span class="highlight-number">3</span>) = <span class="highlight-number">0.5</span> * Math.PI
    nc.Knots(<span class="highlight-number">4</span>) = Math.PI
    nc.Knots(<span class="highlight-number">5</span>) = Math.PI
    nc.Knots(<span class="highlight-number">6</span>) = <span class="highlight-number">1.5</span> * Math.PI
    nc.Knots(<span class="highlight-number">7</span>) = <span class="highlight-number">1.5</span> * Math.PI
    nc.Knots(<span class="highlight-number">8</span>) = <span class="highlight-number">2.0</span> * Math.PI
    nc.Knots(<span class="highlight-number">9</span>) = <span class="highlight-number">2.0</span> * Math.PI
    <span class="highlight-keyword">If</span> nc.IsValid <span class="highlight-keyword">Then</span>
      doc.Objects.AddCurve(nc)
      doc.Views.Redraw()
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Success
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Failure
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBBBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAABBA_tab1" class="codeSnippetContainerTabSingle">Python</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">using System;

partial <span class="highlight-keyword">class</span> Examples
{
  public static Rhino.Commands.Result AddNurbsCircle(Rhino.RhinoDoc doc)
  {
    // The easy way to get a NURBS curve <span class="highlight-keyword">from</span> a circle <span class="highlight-keyword">is</span> <span class="highlight-keyword">with</span>
    // the following two lines of code.
    //
    // Rhino.Geometry.Circle c = new Rhino.Geometry.Circle(<span class="highlight-number">20</span>);
    // Rhino.Geometry.NurbsCurve nc = c.ToNurbsCurve();
    //
    // This sample demonstrates creating a NURBS curve <span class="highlight-keyword">from</span> scratch.
    int dimension = <span class="highlight-number">3</span>;
    bool isRational = true;
    int order = <span class="highlight-number">3</span>;
    int cv_count = <span class="highlight-number">9</span>;
    Rhino.Geometry.NurbsCurve nc = new Rhino.Geometry.NurbsCurve(dimension, isRational, order, cv_count);
    nc.Points.SetPoint(<span class="highlight-number">0</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>);
    nc.Points.SetPoint(<span class="highlight-number">1</span>, <span class="highlight-number">0.707107</span>, <span class="highlight-number">0.707107</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.707107</span>);
    nc.Points.SetPoint(<span class="highlight-number">2</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>);
    nc.Points.SetPoint(<span class="highlight-number">3</span>, <span class="highlight-number">-0.707107</span>, <span class="highlight-number">0.707107</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.707107</span>);
    nc.Points.SetPoint(<span class="highlight-number">4</span>, <span class="highlight-number">-1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>);
    nc.Points.SetPoint(<span class="highlight-number">5</span>, <span class="highlight-number">-0.707107</span>, <span class="highlight-number">-0.707107</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.707107</span>);
    nc.Points.SetPoint(<span class="highlight-number">6</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">-1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>);
    nc.Points.SetPoint(<span class="highlight-number">7</span>, <span class="highlight-number">0.707107</span>, <span class="highlight-number">-0.707107</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.707107</span>);
    nc.Points.SetPoint(<span class="highlight-number">8</span>, <span class="highlight-number">1.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">0.0</span>, <span class="highlight-number">1.0</span>);
    nc.Knots[<span class="highlight-number">0</span>] = <span class="highlight-number">0.0</span>;
    nc.Knots[<span class="highlight-number">1</span>] = <span class="highlight-number">0.0</span>;
    nc.Knots[<span class="highlight-number">2</span>] = <span class="highlight-number">0.5</span> * Math.PI;
    nc.Knots[<span class="highlight-number">3</span>] = <span class="highlight-number">0.5</span> * Math.PI;
    nc.Knots[<span class="highlight-number">4</span>] = Math.PI;
    nc.Knots[<span class="highlight-number">5</span>] = Math.PI;
    nc.Knots[<span class="highlight-number">6</span>] = <span class="highlight-number">1.5</span> * Math.PI;
    nc.Knots[<span class="highlight-number">7</span>] = <span class="highlight-number">1.5</span> * Math.PI;
    nc.Knots[<span class="highlight-number">8</span>] = <span class="highlight-number">2.0</span> * Math.PI;
    nc.Knots[<span class="highlight-number">9</span>] = <span class="highlight-number">2.0</span> * Math.PI;
    <span class="highlight-keyword">if</span> (nc.IsValid)
    {
      doc.Objects.AddCurve(nc);
      doc.Views.Redraw();
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success;
    }
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure;
  }
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_Geometry_NurbsCurve.htm">NurbsCurve Class</a></div><div class="seeAlsoStyle"><a href="N_Rhino_Geometry.htm">Rhino.Geometry Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.17.22102.05000 (Last updated: 4/21/2022)<br />Copyright © 2009-2022 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>