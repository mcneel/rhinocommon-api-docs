<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Intersection.LineCircle Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="LineCircle method" /><meta name="System.Keywords" content="Intersection.LineCircle method" /><meta name="Microsoft.Help.F1" content="Rhino.Geometry.Intersect.Intersection.LineCircle" /><meta name="Microsoft.Help.Id" content="M:Rhino.Geometry.Intersect.Intersection.LineCircle(Rhino.Geometry.Line,Rhino.Geometry.Circle,System.Double@,Rhino.Geometry.Point3d@,System.Double@,Rhino.Geometry.Point3d@)" /><meta name="Description" content="Intersects a line with a circle using exact calculations." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Geometry.Intersect" /><meta name="file" content="M_Rhino_Geometry_Intersect_Intersection_LineCircle" /><meta name="guid" content="M_Rhino_Geometry_Intersect_Intersection_LineCircle" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_Geometry_Intersect.htm" title="Rhino.Geometry.Intersect" tocid="N_Rhino_Geometry_Intersect">Rhino.Geometry.Intersect</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_Geometry_Intersect_Intersection.htm" title="Intersection Class" tocid="T_Rhino_Geometry_Intersect_Intersection">Intersection Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Rhino_Geometry_Intersect_Intersection.htm" title="Intersection Methods" tocid="Methods_T_Rhino_Geometry_Intersect_Intersection">Intersection Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_ArcArc.htm" title="ArcArc Method " tocid="M_Rhino_Geometry_Intersect_Intersection_ArcArc">ArcArc Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_BrepBrep.htm" title="BrepBrep Method " tocid="M_Rhino_Geometry_Intersect_Intersection_BrepBrep">BrepBrep Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_BrepPlane.htm" title="BrepPlane Method " tocid="M_Rhino_Geometry_Intersect_Intersection_BrepPlane">BrepPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_BrepSurface.htm" title="BrepSurface Method " tocid="M_Rhino_Geometry_Intersect_Intersection_BrepSurface">BrepSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_CircleCircle.htm" title="CircleCircle Method " tocid="M_Rhino_Geometry_Intersect_Intersection_CircleCircle">CircleCircle Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Intersect_Intersection_CurveBrep.htm" title="CurveBrep Method " tocid="Overload_Rhino_Geometry_Intersect_Intersection_CurveBrep">CurveBrep Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_CurveBrepFace.htm" title="CurveBrepFace Method " tocid="M_Rhino_Geometry_Intersect_Intersection_CurveBrepFace">CurveBrepFace Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_CurveCurve.htm" title="CurveCurve Method " tocid="M_Rhino_Geometry_Intersect_Intersection_CurveCurve">CurveCurve Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_CurveCurveValidate.htm" title="CurveCurveValidate Method " tocid="M_Rhino_Geometry_Intersect_Intersection_CurveCurveValidate">CurveCurveValidate Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_CurveLine.htm" title="CurveLine Method " tocid="M_Rhino_Geometry_Intersect_Intersection_CurveLine">CurveLine Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_CurvePlane.htm" title="CurvePlane Method " tocid="M_Rhino_Geometry_Intersect_Intersection_CurvePlane">CurvePlane Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_CurveSelf.htm" title="CurveSelf Method " tocid="M_Rhino_Geometry_Intersect_Intersection_CurveSelf">CurveSelf Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Intersect_Intersection_CurveSurface.htm" title="CurveSurface Method " tocid="Overload_Rhino_Geometry_Intersect_Intersection_CurveSurface">CurveSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Intersect_Intersection_CurveSurfaceValidate.htm" title="CurveSurfaceValidate Method " tocid="Overload_Rhino_Geometry_Intersect_Intersection_CurveSurfaceValidate">CurveSurfaceValidate Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Intersect_Intersection_LineBox.htm" title="LineBox Method " tocid="Overload_Rhino_Geometry_Intersect_Intersection_LineBox">LineBox Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_LineCircle.htm" title="LineCircle Method " tocid="M_Rhino_Geometry_Intersect_Intersection_LineCircle">LineCircle Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_LineCylinder.htm" title="LineCylinder Method " tocid="M_Rhino_Geometry_Intersect_Intersection_LineCylinder">LineCylinder Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Intersect_Intersection_LineLine.htm" title="LineLine Method " tocid="Overload_Rhino_Geometry_Intersect_Intersection_LineLine">LineLine Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_LinePlane.htm" title="LinePlane Method " tocid="M_Rhino_Geometry_Intersect_Intersection_LinePlane">LinePlane Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_LineSphere.htm" title="LineSphere Method " tocid="M_Rhino_Geometry_Intersect_Intersection_LineSphere">LineSphere Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Intersect_Intersection_MeshLine.htm" title="MeshLine Method " tocid="Overload_Rhino_Geometry_Intersect_Intersection_MeshLine">MeshLine Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_MeshLineSorted.htm" title="MeshLineSorted Method " tocid="M_Rhino_Geometry_Intersect_Intersection_MeshLineSorted">MeshLineSorted Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_MeshMesh.htm" title="MeshMesh Method " tocid="M_Rhino_Geometry_Intersect_Intersection_MeshMesh">MeshMesh Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_MeshMeshAccurate.htm" title="MeshMeshAccurate Method " tocid="M_Rhino_Geometry_Intersect_Intersection_MeshMeshAccurate">MeshMeshAccurate Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_MeshMeshFast.htm" title="MeshMeshFast Method " tocid="M_Rhino_Geometry_Intersect_Intersection_MeshMeshFast">MeshMeshFast Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Intersect_Intersection_MeshPlane.htm" title="MeshPlane Method " tocid="Overload_Rhino_Geometry_Intersect_Intersection_MeshPlane">MeshPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_MeshPolyline.htm" title="MeshPolyline Method " tocid="M_Rhino_Geometry_Intersect_Intersection_MeshPolyline">MeshPolyline Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_MeshPolylineSorted.htm" title="MeshPolylineSorted Method " tocid="M_Rhino_Geometry_Intersect_Intersection_MeshPolylineSorted">MeshPolylineSorted Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Intersect_Intersection_MeshRay.htm" title="MeshRay Method " tocid="Overload_Rhino_Geometry_Intersect_Intersection_MeshRay">MeshRay Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_PlaneCircle.htm" title="PlaneCircle Method " tocid="M_Rhino_Geometry_Intersect_Intersection_PlaneCircle">PlaneCircle Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_PlanePlane.htm" title="PlanePlane Method " tocid="M_Rhino_Geometry_Intersect_Intersection_PlanePlane">PlanePlane Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_PlanePlanePlane.htm" title="PlanePlanePlane Method " tocid="M_Rhino_Geometry_Intersect_Intersection_PlanePlanePlane">PlanePlanePlane Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_PlaneSphere.htm" title="PlaneSphere Method " tocid="M_Rhino_Geometry_Intersect_Intersection_PlaneSphere">PlaneSphere Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_ProjectPointsToBreps.htm" title="ProjectPointsToBreps Method " tocid="M_Rhino_Geometry_Intersect_Intersection_ProjectPointsToBreps">ProjectPointsToBreps Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_ProjectPointsToBrepsEx.htm" title="ProjectPointsToBrepsEx Method " tocid="M_Rhino_Geometry_Intersect_Intersection_ProjectPointsToBrepsEx">ProjectPointsToBrepsEx Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_ProjectPointsToMeshes.htm" title="ProjectPointsToMeshes Method " tocid="M_Rhino_Geometry_Intersect_Intersection_ProjectPointsToMeshes">ProjectPointsToMeshes Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_ProjectPointsToMeshesEx.htm" title="ProjectPointsToMeshesEx Method " tocid="M_Rhino_Geometry_Intersect_Intersection_ProjectPointsToMeshesEx">ProjectPointsToMeshesEx Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Intersect_Intersection_RayShoot.htm" title="RayShoot Method " tocid="Overload_Rhino_Geometry_Intersect_Intersection_RayShoot">RayShoot Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_SphereSphere.htm" title="SphereSphere Method " tocid="M_Rhino_Geometry_Intersect_Intersection_SphereSphere">SphereSphere Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Intersect_Intersection_SurfaceSurface.htm" title="SurfaceSurface Method " tocid="M_Rhino_Geometry_Intersect_Intersection_SurfaceSurface">SurfaceSurface Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Intersection<span id="LSTFAE89DEA_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTFAE89DEA_0?cpp=::|nu=.");</script>LineCircle Method </h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Intersects a line with a circle using exact calculations.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino_Geometry_Intersect.htm">Rhino.Geometry.Intersect</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="since"><strong>Since:</strong> 5.0</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">LineCircleIntersection</span> <span class="identifier">LineCircle</span>(
	<span class="identifier">Line</span> <span class="parameter">line</span>,
	<span class="identifier">Circle</span> <span class="parameter">circle</span>,
	<span class="keyword">out</span> <span class="identifier">double</span> <span class="parameter">t1</span>,
	<span class="keyword">out</span> <span class="identifier">Point3d</span> <span class="parameter">point1</span>,
	<span class="keyword">out</span> <span class="identifier">double</span> <span class="parameter">t2</span>,
	<span class="keyword">out</span> <span class="identifier">Point3d</span> <span class="parameter">point2</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">LineCircle</span> ( 
	<span class="parameter">line</span> <span class="keyword">As</span> <span class="identifier">Line</span>,
	<span class="parameter">circle</span> <span class="keyword">As</span> <span class="identifier">Circle</span>,
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">t1</span> <span class="keyword">As</span> <span class="identifier">Double</span>,
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">point1</span> <span class="keyword">As</span> <span class="identifier">Point3d</span>,
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">t2</span> <span class="keyword">As</span> <span class="identifier">Double</span>,
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">point2</span> <span class="keyword">As</span> <span class="identifier">Point3d</span>
) <span class="keyword">As</span> <span class="identifier">LineCircleIntersection</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">line</span></dt><dd>Type: <a href="T_Rhino_Geometry_Line.htm">Rhino.Geometry<span id="LSTFAE89DEA_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTFAE89DEA_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Line</a><br />Line for intersection.</dd><dt><span class="parameter">circle</span></dt><dd>Type: <a href="T_Rhino_Geometry_Circle.htm">Rhino.Geometry<span id="LSTFAE89DEA_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTFAE89DEA_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Circle</a><br />Circle for intersection.</dd><dt><span class="parameter">t1</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.double" target="_blank">System<span id="LSTFAE89DEA_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTFAE89DEA_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Double</a><span id="LSTFAE89DEA_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTFAE89DEA_4?cpp=%");</script><br />Parameter on line for first intersection.</dd><dt><span class="parameter">point1</span></dt><dd>Type: <a href="T_Rhino_Geometry_Point3d.htm">Rhino.Geometry<span id="LSTFAE89DEA_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTFAE89DEA_5?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Point3d</a><span id="LSTFAE89DEA_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTFAE89DEA_6?cpp=%");</script><br />Point on circle closest to first intersection.</dd><dt><span class="parameter">t2</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.double" target="_blank">System<span id="LSTFAE89DEA_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTFAE89DEA_7?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Double</a><span id="LSTFAE89DEA_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTFAE89DEA_8?cpp=%");</script><br />Parameter on line for second intersection.</dd><dt><span class="parameter">point2</span></dt><dd>Type: <a href="T_Rhino_Geometry_Point3d.htm">Rhino.Geometry<span id="LSTFAE89DEA_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTFAE89DEA_9?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Point3d</a><span id="LSTFAE89DEA_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTFAE89DEA_10?cpp=%");</script><br />Point on circle closest to second intersection.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="T_Rhino_Geometry_Intersect_LineCircleIntersection.htm">LineCircleIntersection</a><br />
            If <a href="T_Rhino_Geometry_Intersect_LineCircleIntersection.htm">Single</a> is returned, only t1 and point1 will have valid values. 
            If <a href="T_Rhino_Geometry_Intersect_LineCircleIntersection.htm">Multiple</a> is returned, t2 and point2 will also be filled out.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBBBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','cs','1','2');return false;">C#</a></div><div id="ID0EBBBBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBBBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Rhino;
<span class="highlight-keyword">using</span> Rhino.Commands;
<span class="highlight-keyword">using</span> Rhino.Input;
<span class="highlight-keyword">using</span> Rhino.Geometry;
<span class="highlight-keyword">using</span> Rhino.Geometry.Intersect;

<span class="highlight-keyword">namespace</span> examples_cs
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> IntersectLineCircleCommand : Command
  {
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">string</span> EnglishName { <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-literal">"csIntersectLineCircle"</span>; } }

    <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> Result RunCommand(RhinoDoc doc, RunMode mode)
    {
      Circle circle;
      <span class="highlight-keyword">var</span> rc = RhinoGet.GetCircle(<span class="highlight-keyword">out</span> circle);
      <span class="highlight-keyword">if</span> (rc != Result.Success)
        <span class="highlight-keyword">return</span> rc;
      doc.Objects.AddCircle(circle);
      doc.Views.Redraw();

      Line line;
      rc = RhinoGet.GetLine(<span class="highlight-keyword">out</span> line);
      <span class="highlight-keyword">if</span> (rc != Result.Success)
        <span class="highlight-keyword">return</span> rc;
      doc.Objects.AddLine(line);
      doc.Views.Redraw();

      <span class="highlight-keyword">double</span> t1, t2;
      Point3d point1, point2;
      <span class="highlight-keyword">var</span> line_circle_intersect = Intersection.LineCircle(line, circle, <span class="highlight-keyword">out</span> t1, <span class="highlight-keyword">out</span> point1, <span class="highlight-keyword">out</span> t2, <span class="highlight-keyword">out</span> point2);
      <span class="highlight-keyword">string</span> msg = <span class="highlight-literal">""</span>;
      <span class="highlight-keyword">switch</span> (line_circle_intersect) {
        <span class="highlight-keyword">case</span> LineCircleIntersection.None:
          msg = <span class="highlight-literal">"line does not intersect circle"</span>;
          <span class="highlight-keyword">break</span>;
        <span class="highlight-keyword">case</span> LineCircleIntersection.Single:
          msg = <span class="highlight-keyword">string</span>.Format(<span class="highlight-literal">"line intersects circle at point ({0})"</span>, point1);
          doc.Objects.AddPoint(point1);
          <span class="highlight-keyword">break</span>;
        <span class="highlight-keyword">case</span> LineCircleIntersection.Multiple:
          msg = <span class="highlight-keyword">string</span>.Format(<span class="highlight-literal">"line intersects circle at points ({0}) and ({1})"</span>,
            point1, point2);
          doc.Objects.AddPoint(point1);
          doc.Objects.AddPoint(point2);
          <span class="highlight-keyword">break</span>;
      }
      RhinoApp.WriteLine(msg);
      doc.Views.Redraw();
      <span class="highlight-keyword">return</span> Result.Success;
    }
  }
}</pre></div><div id="ID0EBBBBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Imports</span> Rhino
<span class="highlight-keyword">Imports</span> Rhino.Commands
<span class="highlight-keyword">Imports</span> Rhino.Geometry
<span class="highlight-keyword">Imports</span> Rhino.Geometry.Intersect

<span class="highlight-keyword">Namespace</span> examples_vb
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> IntersectLineCircleCommand
    <span class="highlight-keyword">Inherits</span> Command
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">ReadOnly</span> <span class="highlight-keyword">Property</span> EnglishName() <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span>
      <span class="highlight-keyword">Get</span>
        <span class="highlight-keyword">Return</span> <span class="highlight-literal">"vbIntersectLineCircle"</span>
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">Get</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Property</span>

    <span class="highlight-keyword">Protected</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">Function</span> RunCommand(doc <span class="highlight-keyword">As</span> RhinoDoc, mode <span class="highlight-keyword">As</span> RunMode) <span class="highlight-keyword">As</span> Result
      <span class="highlight-keyword">Dim</span> circle <span class="highlight-keyword">As</span> Circle
      <span class="highlight-keyword">Dim</span> rc = Rhino.Input.RhinoGet.GetCircle(circle)
      <span class="highlight-keyword">If</span> rc &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> rc
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      doc.Objects.AddCircle(circle)
      doc.Views.Redraw()

      <span class="highlight-keyword">Dim</span> line <span class="highlight-keyword">As</span> Line
      rc = Rhino.Input.RhinoGet.GetLine(line)
      <span class="highlight-keyword">If</span> rc &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> rc
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      doc.Objects.AddLine(line)
      doc.Views.Redraw()

      <span class="highlight-keyword">Dim</span> t1 <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>, t2 <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>
      <span class="highlight-keyword">Dim</span> point1 <span class="highlight-keyword">As</span> Point3d, point2 <span class="highlight-keyword">As</span> Point3d
      <span class="highlight-keyword">Dim</span> lineCircleIntersect = Intersection.LineCircle(line, circle, t1, point1, t2, point2)
      <span class="highlight-keyword">Dim</span> msg <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-literal">""</span>
      <span class="highlight-keyword">Select</span> <span class="highlight-keyword">Case</span> lineCircleIntersect
        <span class="highlight-keyword">Case</span> LineCircleIntersection.None
          msg = <span class="highlight-literal">"line does not intersect circle"</span>
          <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
        <span class="highlight-keyword">Case</span> LineCircleIntersection.[<span class="highlight-keyword">Single</span>]
          msg = [<span class="highlight-keyword">String</span>].Format(<span class="highlight-literal">"line intersects circle at point ({0},{1},{2})"</span>, point1.X, point1.Y, point1.Z)
          doc.Objects.AddPoint(point1)
          <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
        <span class="highlight-keyword">Case</span> LineCircleIntersection.Multiple
          msg = [<span class="highlight-keyword">String</span>].Format(<span class="highlight-literal">"line intersects circle at points ({0},{1},{2}) and ({3},{4},{5})"</span>, point1.X, point1.Y, point1.Z, point2.X, point2.Y, _
            point2.Z)
          doc.Objects.AddPoint(point1)
          doc.Objects.AddPoint(point2)
          <span class="highlight-keyword">Exit</span> <span class="highlight-keyword">Select</span>
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">Select</span>
      RhinoApp.WriteLine(msg)
      doc.Views.Redraw()
      <span class="highlight-keyword">Return</span> Result.Success
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Namespace</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBBBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAABBA_tab1" class="codeSnippetContainerTabSingle">Python</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">import</span> rhinoscriptsyntax <span class="highlight-keyword">as</span> rs
<span class="highlight-keyword">from</span> scriptcontext <span class="highlight-keyword">import</span> doc
<span class="highlight-keyword">import</span> Rhino
<span class="highlight-keyword">from</span> Rhino.Geometry.Intersect <span class="highlight-keyword">import</span> Intersection, LineCircleIntersection

<span class="highlight-keyword">def</span> RunCommand():
  rc, circle = Rhino.Input.RhinoGet.GetCircle()
  <span class="highlight-keyword">if</span> rc != Rhino.Commands.Result.Success:
    <span class="highlight-keyword">return</span> rc
  doc.Objects.AddCircle(circle)
  doc.Views.Redraw()

  rc, line = Rhino.Input.RhinoGet.GetLine()
  <span class="highlight-keyword">if</span> rc != Rhino.Commands.Result.Success:
    <span class="highlight-keyword">return</span> rc
  doc.Objects.AddLine(line)
  doc.Views.Redraw()

  lineCircleIntersect, t1, point1, t2, point2 = Intersection.LineCircle(line, circle)
  message = <span class="highlight-literal">""</span>
  <span class="highlight-keyword">if</span> lineCircleIntersect == LineCircleIntersection.None:
    message = <span class="highlight-literal">"line does not intersect circle"</span>
  <span class="highlight-keyword">elif</span> lineCircleIntersect == LineCircleIntersection.Single:
    message = <span class="highlight-literal">"line intersects circle at point ({0},{1},{2})"</span>.format(point1.X, point1.Y, point1.Z)
    doc.Objects.AddPoint(point1)
  <span class="highlight-keyword">elif</span> lineCircleIntersect == LineCircleIntersection.Multiple:
    message = <span class="highlight-literal">"line intersects circle at points ({0},{1},{2}) and ({3},{4},{5})"</span>.format(
      point1.X, point1.Y, point1.Z, point2.X, point2.Y, point2.Z)
    doc.Objects.AddPoint(point1)
    doc.Objects.AddPoint(point2)

  <span class="highlight-keyword">print</span> message
  doc.Views.Redraw()

<span class="highlight-keyword">if</span> __name__ == <span class="highlight-literal">"__main__"</span>:
    RunCommand()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_Geometry_Intersect_Intersection.htm">Intersection Class</a></div><div class="seeAlsoStyle"><a href="N_Rhino_Geometry_Intersect.htm">Rhino.Geometry.Intersect Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.16.22067.13000 (Last updated: 3/10/2022)<br />Copyright © 2009-2022 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>