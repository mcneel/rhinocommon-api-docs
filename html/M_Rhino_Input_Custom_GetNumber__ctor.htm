<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>GetNumber Constructor </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="GetNumber class, constructor" /><meta name="System.Keywords" content="GetNumber.GetNumber constructor" /><meta name="Microsoft.Help.F1" content="Rhino.Input.Custom.GetNumber.#ctor" /><meta name="Microsoft.Help.F1" content="Rhino.Input.Custom.GetNumber.GetNumber" /><meta name="Microsoft.Help.Id" content="M:Rhino.Input.Custom.GetNumber.#ctor" /><meta name="Description" content="Create a new GetNumber." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Input.Custom" /><meta name="file" content="M_Rhino_Input_Custom_GetNumber__ctor" /><meta name="guid" content="M_Rhino_Input_Custom_GetNumber__ctor" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_Input_Custom.htm" title="Rhino.Input.Custom" tocid="N_Rhino_Input_Custom">Rhino.Input.Custom</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_Input_Custom_GetNumber.htm" title="GetNumber Class" tocid="T_Rhino_Input_Custom_GetNumber">GetNumber Class</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Input_Custom_GetNumber__ctor.htm" title="GetNumber Constructor " tocid="M_Rhino_Input_Custom_GetNumber__ctor">GetNumber Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Rhino_Input_Custom_GetNumber.htm" title="GetNumber Methods" tocid="Methods_T_Rhino_Input_Custom_GetNumber">GetNumber Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>GetNumber Constructor </h1></td></tr></table><span class="introStyle"></span> <div class="summary">Create a new GetNumber.</div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino_Input_Custom.htm">Rhino.Input.Custom</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="since"><strong>Since:</strong> 5.0</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">GetNumber</span>()</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Sub</span> <span class="identifier">New</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBBBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','cs','1','2');return false;">C#</a></div><div id="ID0EBBBBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBBBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;

<span class="highlight-keyword">partial</span> <span class="highlight-keyword">class</span> Examples
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> Rhino.Commands.Result AddBackgroundBitmap(Rhino.RhinoDoc doc)
  {
    <span class="highlight-comment">// Allow the user to select a bitmap file</span>
    <span class="highlight-keyword">var</span> fd = <span class="highlight-keyword">new</span> Rhino.UI.OpenFileDialog { Filter = <span class="highlight-literal">"Image Files (*.bmp;*.png;*.jpg)|*.bmp;*.png;*.jpg"</span> };
    <span class="highlight-keyword">if</span> (!fd.ShowOpenDialog())
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Cancel;

    <span class="highlight-comment">// Verify the file that was selected</span>
    System.Drawing.Image image;
    <span class="highlight-keyword">try</span>
    {
      image = System.Drawing.Image.FromFile(fd.FileName);
    }
    <span class="highlight-keyword">catch</span> (Exception)
    {
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure;
    }

    <span class="highlight-comment">// Allow the user to pick the bitmap origin</span>
    <span class="highlight-keyword">var</span> gp = <span class="highlight-keyword">new</span> Rhino.Input.Custom.GetPoint();
    gp.SetCommandPrompt(<span class="highlight-literal">"Bitmap Origin"</span>);
    gp.ConstrainToConstructionPlane(<span class="highlight-keyword">true</span>);
    gp.Get();
    <span class="highlight-keyword">if</span> (gp.CommandResult() != Rhino.Commands.Result.Success)
      <span class="highlight-keyword">return</span> gp.CommandResult();

    <span class="highlight-comment">// Get the view that the point was picked in.</span>
    <span class="highlight-comment">// This will be the view that the bitmap appears in.</span>
    <span class="highlight-keyword">var</span> view = gp.View();
    <span class="highlight-keyword">if</span> (view == <span class="highlight-keyword">null</span>)
    {
      view = doc.Views.ActiveView;
      <span class="highlight-keyword">if</span> (view == <span class="highlight-keyword">null</span>)
        <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure;
    }

    <span class="highlight-comment">// Allow the user to specify the bitmap width in model units</span>
    <span class="highlight-keyword">var</span> gn = <span class="highlight-keyword">new</span> Rhino.Input.Custom.GetNumber();
    gn.SetCommandPrompt(<span class="highlight-literal">"Bitmap width"</span>);
    gn.SetLowerLimit(<span class="highlight-number">1.0</span>, <span class="highlight-keyword">false</span>);
    gn.Get();
    <span class="highlight-keyword">if</span> (gn.CommandResult() != Rhino.Commands.Result.Success)
      <span class="highlight-keyword">return</span> gn.CommandResult();

    <span class="highlight-comment">// Cook up some scale factors</span>
    <span class="highlight-keyword">var</span> w = gn.Number();
    <span class="highlight-keyword">var</span> image_width = image.Width;
    <span class="highlight-keyword">var</span> image_height = image.Height;
    <span class="highlight-keyword">var</span> h = w * (image_height / image_width);

    <span class="highlight-keyword">var</span> plane = view.ActiveViewport.ConstructionPlane();
    plane.Origin = gp.Point();
    view.ActiveViewport.SetTraceImage(fd.FileName, plane, w, h, <span class="highlight-keyword">false</span>, <span class="highlight-keyword">false</span>);
    view.Redraw();
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success;
  }
}</pre></div><div id="ID0EBBBBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Partial</span> <span class="highlight-keyword">Class</span> Examples
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Function</span> AddBackgroundBitmap(<span class="highlight-keyword">ByVal</span> doc <span class="highlight-keyword">As</span> Rhino.RhinoDoc) <span class="highlight-keyword">As</span> Rhino.Commands.Result
    <span class="highlight-comment">' Allow the user to select a bitmap file</span>
    <span class="highlight-keyword">Dim</span> fd <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Rhino.UI.OpenFileDialog()
    fd.Filter = <span class="highlight-literal">"Image Files (*.bmp;*.png;*.jpg)|*.bmp;*.png;*.jpg"</span>
    <span class="highlight-keyword">If</span> fd.ShowDialog() &lt;&gt; System.Windows.Forms.DialogResult.OK <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Cancel
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Verify the file that was selected</span>
    <span class="highlight-keyword">Dim</span> image <span class="highlight-keyword">As</span> System.Drawing.Image
    <span class="highlight-keyword">Try</span>
      image = System.Drawing.Image.FromFile(fd.FileName)
    <span class="highlight-keyword">Catch</span> generatedExceptionName <span class="highlight-keyword">As</span> Exception
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Failure
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Try</span>

    <span class="highlight-comment">' Allow the user to pick the bitmap origin</span>
    <span class="highlight-keyword">Dim</span> gp <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Rhino.Input.Custom.GetPoint()
    gp.SetCommandPrompt(<span class="highlight-literal">"Bitmap Origin"</span>)
    gp.ConstrainToConstructionPlane(<span class="highlight-keyword">True</span>)
    gp.<span class="highlight-keyword">Get</span>()
    <span class="highlight-keyword">If</span> gp.CommandResult() &lt;&gt; Rhino.Commands.Result.Success <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> gp.CommandResult()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Get the view that the point was picked in.</span>
    <span class="highlight-comment">' This will be the view that the bitmap appears in.</span>
    <span class="highlight-keyword">Dim</span> view <span class="highlight-keyword">As</span> Rhino.Display.RhinoView = gp.View()
    <span class="highlight-keyword">If</span> view <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
      view = doc.Views.ActiveView
      <span class="highlight-keyword">If</span> view <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Failure
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Allow the user to specify the bitmap with in model units</span>
    <span class="highlight-keyword">Dim</span> gn <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Rhino.Input.Custom.GetNumber()
    gn.SetCommandPrompt(<span class="highlight-literal">"Bitmap width"</span>)
    gn.SetLowerLimit(<span class="highlight-number">1.0</span>, <span class="highlight-keyword">False</span>)
    gn.<span class="highlight-keyword">Get</span>()
    <span class="highlight-keyword">If</span> gn.CommandResult() &lt;&gt; Rhino.Commands.Result.Success <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> gn.CommandResult()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Cook up some scale factors</span>
    <span class="highlight-keyword">Dim</span> w <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = gn.Number()
    <span class="highlight-keyword">Dim</span> image_width <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = <span class="highlight-keyword">CDbl</span>(image.Width)
    <span class="highlight-keyword">Dim</span> image_height <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = <span class="highlight-keyword">CDbl</span>(image.Height)
    <span class="highlight-keyword">Dim</span> h <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = w * (image_height / image_width)

    <span class="highlight-keyword">Dim</span> plane <span class="highlight-keyword">As</span> Rhino.Geometry.Plane = view.ActiveViewport.ConstructionPlane()
    plane.Origin = gp.Point()
    view.ActiveViewport.SetTraceImage(fd.FileName, plane, w, h, <span class="highlight-keyword">False</span>, <span class="highlight-keyword">False</span>)
    view.Redraw()
    <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Success
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBBBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAABBA_tab1" class="codeSnippetContainerTabSingle">Python</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">import</span> Rhino
<span class="highlight-keyword">import</span> scriptcontext
<span class="highlight-keyword">import</span> System.Windows.Forms.DialogResult
<span class="highlight-keyword">import</span> System.Drawing.Image

<span class="highlight-keyword">def</span> AddBackgroundBitmap():
    <span class="highlight-comment"># Allow the user to select a bitmap file</span>
    fd = Rhino.UI.OpenFileDialog()
    fd.Filter = <span class="highlight-literal">"Image Files (*.bmp;*.png;*.jpg)|*.bmp;*.png;*.jpg"</span>
    <span class="highlight-keyword">if</span> fd.ShowDialog()!=System.Windows.Forms.DialogResult.OK:
        <span class="highlight-keyword">return</span> Rhino.Commands.Result.Cancel

    <span class="highlight-comment"># Verify the file that was selected</span>
    image = None
    <span class="highlight-keyword">try</span>:
        image = System.Drawing.Image.FromFile(fd.FileName)
    <span class="highlight-keyword">except</span>:
        <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure

    <span class="highlight-comment"># Allow the user to pick the bitmap origin</span>
    gp = Rhino.Input.Custom.GetPoint()
    gp.SetCommandPrompt(<span class="highlight-literal">"Bitmap Origin"</span>)
    gp.ConstrainToConstructionPlane(True)
    gp.Get()
    <span class="highlight-keyword">if</span> gp.CommandResult()!=Rhino.Commands.Result.Success:
        <span class="highlight-keyword">return</span> gp.CommandResult()

    <span class="highlight-comment"># Get the view that the point was picked in.</span>
    <span class="highlight-comment"># This will be the view that the bitmap appears in.</span>
    view = gp.View()
    <span class="highlight-keyword">if</span> view <span class="highlight-keyword">is</span> None:
        view = scriptcontext.doc.Views.ActiveView
        <span class="highlight-keyword">if</span> view <span class="highlight-keyword">is</span> None: <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure

    <span class="highlight-comment"># Allow the user to specify the bitmap with in model units</span>
    gn = Rhino.Input.Custom.GetNumber()
    gn.SetCommandPrompt(<span class="highlight-literal">"Bitmap width"</span>)
    gn.SetLowerLimit(<span class="highlight-number">1.0</span>, False)
    gn.Get()
    <span class="highlight-keyword">if</span> gn.CommandResult()!=Rhino.Commands.Result.Success:
        <span class="highlight-keyword">return</span> gn.CommandResult()

    <span class="highlight-comment"># Cook up some scale factors</span>
    w = gn.Number()
    h = w * (image.Width / image.Height)

    plane = view.ActiveViewport.ConstructionPlane()
    plane.Origin = gp.Point()
    view.ActiveViewport.SetTraceImage(fd.FileName, plane, w, h, False, False)
    view.Redraw()
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success

<span class="highlight-keyword">if</span> __name__==<span class="highlight-literal">"__main__"</span>:
    AddBackgroundBitmap()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_Input_Custom_GetNumber.htm">GetNumber Class</a></div><div class="seeAlsoStyle"><a href="N_Rhino_Input_Custom.htm">Rhino.Input.Custom Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.18.22124.03000 (Last updated: 5/10/2022)<br />Copyright © 2009-2022 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>