<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>IntersectionEvent.IsOverlap Property </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="IsOverlap property" /><meta name="System.Keywords" content="IntersectionEvent.IsOverlap property" /><meta name="Microsoft.Help.F1" content="Rhino.Geometry.Intersect.IntersectionEvent.IsOverlap" /><meta name="Microsoft.Help.F1" content="Rhino.Geometry.Intersect.IntersectionEvent.get_IsOverlap" /><meta name="Microsoft.Help.Id" content="P:Rhino.Geometry.Intersect.IntersectionEvent.IsOverlap" /><meta name="Description" content="All curve intersection events are either a single point or an overlap." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Geometry.Intersect" /><meta name="file" content="P_Rhino_Geometry_Intersect_IntersectionEvent_IsOverlap" /><meta name="guid" content="P_Rhino_Geometry_Intersect_IntersectionEvent_IsOverlap" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_Geometry_Intersect.htm" title="Rhino.Geometry.Intersect" tocid="N_Rhino_Geometry_Intersect">Rhino.Geometry.Intersect</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_Geometry_Intersect_IntersectionEvent.htm" title="IntersectionEvent Class" tocid="T_Rhino_Geometry_Intersect_IntersectionEvent">IntersectionEvent Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Properties_T_Rhino_Geometry_Intersect_IntersectionEvent.htm" title="IntersectionEvent Properties" tocid="Properties_T_Rhino_Geometry_Intersect_IntersectionEvent">IntersectionEvent Properties</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/P_Rhino_Geometry_Intersect_IntersectionEvent_IsOverlap.htm" title="IsOverlap Property " tocid="P_Rhino_Geometry_Intersect_IntersectionEvent_IsOverlap">IsOverlap Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/P_Rhino_Geometry_Intersect_IntersectionEvent_IsPoint.htm" title="IsPoint Property " tocid="P_Rhino_Geometry_Intersect_IntersectionEvent_IsPoint">IsPoint Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/P_Rhino_Geometry_Intersect_IntersectionEvent_OverlapA.htm" title="OverlapA Property " tocid="P_Rhino_Geometry_Intersect_IntersectionEvent_OverlapA">OverlapA Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/P_Rhino_Geometry_Intersect_IntersectionEvent_OverlapB.htm" title="OverlapB Property " tocid="P_Rhino_Geometry_Intersect_IntersectionEvent_OverlapB">OverlapB Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/P_Rhino_Geometry_Intersect_IntersectionEvent_ParameterA.htm" title="ParameterA Property " tocid="P_Rhino_Geometry_Intersect_IntersectionEvent_ParameterA">ParameterA Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/P_Rhino_Geometry_Intersect_IntersectionEvent_ParameterB.htm" title="ParameterB Property " tocid="P_Rhino_Geometry_Intersect_IntersectionEvent_ParameterB">ParameterB Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/P_Rhino_Geometry_Intersect_IntersectionEvent_PointA.htm" title="PointA Property " tocid="P_Rhino_Geometry_Intersect_IntersectionEvent_PointA">PointA Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/P_Rhino_Geometry_Intersect_IntersectionEvent_PointA2.htm" title="PointA2 Property " tocid="P_Rhino_Geometry_Intersect_IntersectionEvent_PointA2">PointA2 Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/P_Rhino_Geometry_Intersect_IntersectionEvent_PointB.htm" title="PointB Property " tocid="P_Rhino_Geometry_Intersect_IntersectionEvent_PointB">PointB Property </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/P_Rhino_Geometry_Intersect_IntersectionEvent_PointB2.htm" title="PointB2 Property " tocid="P_Rhino_Geometry_Intersect_IntersectionEvent_PointB2">PointB2 Property </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>IntersectionEvent<span id="LSTEDF18A91_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTEDF18A91_0?cpp=::|nu=.");</script>IsOverlap Property </h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            All curve intersection events are either a single point or an overlap.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino_Geometry_Intersect.htm">Rhino.Geometry.Intersect</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="since"><strong>Since:</strong> 5.0</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">bool</span> <span class="identifier">IsOverlap</span> { <span class="keyword">get</span>; }</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">ReadOnly</span> <span class="keyword">Property</span> <span class="identifier">IsOverlap</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>
	<span class="keyword">Get</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Property Value</h4>Type: <a href="https://docs.microsoft.com/dotnet/api/system.boolean" target="_blank">Boolean</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBBBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','cs','1','2');return false;">C#</a></div><div id="ID0EBBBBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBBBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Rhino;
<span class="highlight-keyword">using</span> Rhino.Geometry;
<span class="highlight-keyword">using</span> Rhino.Geometry.Intersect;
<span class="highlight-keyword">using</span> Rhino.Input.Custom;
<span class="highlight-keyword">using</span> Rhino.DocObjects;
<span class="highlight-keyword">using</span> Rhino.Commands;

<span class="highlight-keyword">namespace</span> examples_cs
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> CurveSurfaceIntersectCommand : Command
  {
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">string</span> EnglishName { <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-literal">"csCurveSurfaceIntersect"</span>; } }

    <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> Result RunCommand(RhinoDoc doc, RunMode mode)
    {
      <span class="highlight-keyword">var</span> gs = <span class="highlight-keyword">new</span> GetObject();
      gs.SetCommandPrompt(<span class="highlight-literal">"select brep"</span>);
      gs.GeometryFilter = ObjectType.Brep;
      gs.DisablePreSelect();
      gs.SubObjectSelect = <span class="highlight-keyword">false</span>;
      gs.Get();
      <span class="highlight-keyword">if</span> (gs.CommandResult() != Result.Success)
        <span class="highlight-keyword">return</span> gs.CommandResult();
      <span class="highlight-keyword">var</span> brep = gs.Object(<span class="highlight-number">0</span>).Brep();

      <span class="highlight-keyword">var</span> gc = <span class="highlight-keyword">new</span> GetObject();
      gc.SetCommandPrompt(<span class="highlight-literal">"select curve"</span>);
      gc.GeometryFilter = ObjectType.Curve;
      gc.DisablePreSelect();
      gc.SubObjectSelect = <span class="highlight-keyword">false</span>;
      gc.Get();
      <span class="highlight-keyword">if</span> (gc.CommandResult() != Result.Success)
        <span class="highlight-keyword">return</span> gc.CommandResult();
      <span class="highlight-keyword">var</span> curve = gc.Object(<span class="highlight-number">0</span>).Curve();

      <span class="highlight-keyword">if</span> (brep == <span class="highlight-keyword">null</span> || curve == <span class="highlight-keyword">null</span>)
        <span class="highlight-keyword">return</span> Result.Failure;

      <span class="highlight-keyword">var</span> tolerance = doc.ModelAbsoluteTolerance;

      Point3d[] intersection_points;
      Curve[] overlap_curves;
      <span class="highlight-keyword">if</span> (!Intersection.CurveBrep(curve, brep, tolerance, <span class="highlight-keyword">out</span> overlap_curves, <span class="highlight-keyword">out</span> intersection_points))
      {
        RhinoApp.WriteLine(<span class="highlight-literal">"curve brep intersection failed"</span>);
        <span class="highlight-keyword">return</span> Result.Nothing;
      }

      <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> overlap_curve <span class="highlight-keyword">in</span> overlap_curves)
        doc.Objects.AddCurve(overlap_curve);
      <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> intersection_point <span class="highlight-keyword">in</span> intersection_points)
        doc.Objects.AddPoint(intersection_point);

      RhinoApp.WriteLine(<span class="highlight-literal">"{0} overlap curves, and {1} intersection points"</span>, overlap_curves.Length, intersection_points.Length);
      doc.Views.Redraw();

      <span class="highlight-keyword">return</span> Result.Success;
    }
  }
}</pre></div><div id="ID0EBBBBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Imports</span> Rhino
<span class="highlight-keyword">Imports</span> Rhino.Geometry
<span class="highlight-keyword">Imports</span> Rhino.Geometry.Intersect
<span class="highlight-keyword">Imports</span> Rhino.Input.Custom
<span class="highlight-keyword">Imports</span> Rhino.DocObjects
<span class="highlight-keyword">Imports</span> Rhino.Commands

<span class="highlight-keyword">Namespace</span> examples_vb
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> CurveSurfaceIntersectCommand
    <span class="highlight-keyword">Inherits</span> Command
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">ReadOnly</span> <span class="highlight-keyword">Property</span> EnglishName() <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span>
      <span class="highlight-keyword">Get</span>
        <span class="highlight-keyword">Return</span> <span class="highlight-literal">"vbCurveSurfaceIntersect"</span>
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">Get</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Property</span>

    <span class="highlight-keyword">Protected</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">Function</span> RunCommand(doc <span class="highlight-keyword">As</span> RhinoDoc, mode <span class="highlight-keyword">As</span> RunMode) <span class="highlight-keyword">As</span> Result
      <span class="highlight-keyword">Dim</span> gs = <span class="highlight-keyword">New</span> GetObject()
      gs.SetCommandPrompt(<span class="highlight-literal">"select brep"</span>)
      gs.GeometryFilter = ObjectType.Brep
      gs.DisablePreSelect()
      gs.SubObjectSelect = <span class="highlight-keyword">False</span>
      gs.<span class="highlight-keyword">Get</span>()
      <span class="highlight-keyword">If</span> gs.CommandResult() &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> gs.CommandResult()
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">Dim</span> brep = gs.[<span class="highlight-keyword">Object</span>](<span class="highlight-number">0</span>).Brep()

      <span class="highlight-keyword">Dim</span> gc = <span class="highlight-keyword">New</span> GetObject()
      gc.SetCommandPrompt(<span class="highlight-literal">"select curve"</span>)
      gc.GeometryFilter = ObjectType.Curve
      gc.DisablePreSelect()
      gc.SubObjectSelect = <span class="highlight-keyword">False</span>
      gc.<span class="highlight-keyword">Get</span>()
      <span class="highlight-keyword">If</span> gc.CommandResult() &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> gc.CommandResult()
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">Dim</span> curve = gc.<span class="highlight-keyword">Object</span>(<span class="highlight-number">0</span>).Curve()

      <span class="highlight-keyword">If</span> brep <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">OrElse</span> curve <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> Result.Failure
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-keyword">Dim</span> tolerance = doc.ModelAbsoluteTolerance

      <span class="highlight-keyword">Dim</span> intersectionPoints <span class="highlight-keyword">As</span> Point3d() = <span class="highlight-keyword">Nothing</span>
      <span class="highlight-keyword">Dim</span> overlapCurves <span class="highlight-keyword">As</span> Curve() = <span class="highlight-keyword">Nothing</span>
      <span class="highlight-keyword">If</span> <span class="highlight-keyword">Not</span> Intersection.CurveBrep(curve, brep, tolerance, overlapCurves, intersectionPoints) <span class="highlight-keyword">Then</span>
        RhinoApp.WriteLine(<span class="highlight-literal">"curve brep intersection failed"</span>)
        <span class="highlight-keyword">Return</span> Result.<span class="highlight-keyword">Nothing</span>
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> overlapCurve <span class="highlight-keyword">As</span> Curve <span class="highlight-keyword">In</span> overlapCurves
        doc.Objects.AddCurve(overlapCurve)
      <span class="highlight-keyword">Next</span>
      <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> intersectionPoint <span class="highlight-keyword">As</span> Point3d <span class="highlight-keyword">In</span> intersectionPoints
        doc.Objects.AddPoint(intersectionPoint)
      <span class="highlight-keyword">Next</span>

      RhinoApp.WriteLine(<span class="highlight-literal">"{0} overlap curves, and {1} intersection points"</span>, overlapCurves.Length, intersectionPoints.Length)
      doc.Views.Redraw()

      <span class="highlight-keyword">Return</span> Result.Success
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Namespace</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBBBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAABBA_tab1" class="codeSnippetContainerTabSingle">Python</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">import</span> rhinoscriptsyntax <span class="highlight-keyword">as</span> rs
<span class="highlight-keyword">from</span> scriptcontext <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">import</span> Rhino
<span class="highlight-keyword">import</span> System.Collections.Generic <span class="highlight-keyword">as</span> scg
<span class="highlight-keyword">import</span> System <span class="highlight-keyword">as</span> s

<span class="highlight-keyword">def</span> RunCommand():
  srfid = rs.GetObject(<span class="highlight-literal">"select surface"</span>, rs.filter.surface | rs.filter.polysurface)
  <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> srfid: <span class="highlight-keyword">return</span>

  crvid = rs.GetObject(<span class="highlight-literal">"select curve"</span>, rs.filter.curve)
  <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> crvid: <span class="highlight-keyword">return</span>

  result = rs.CurveBrepIntersect(crvid, srfid)
  <span class="highlight-keyword">if</span> result == None:
    <span class="highlight-keyword">print</span> <span class="highlight-literal">"no intersection"</span>
    <span class="highlight-keyword">return</span>

  curves, points = result
  <span class="highlight-keyword">for</span> curve <span class="highlight-keyword">in</span> curves:
    doc.Objects.AddCurve(rs.coercecurve(curve))
  <span class="highlight-keyword">for</span> point <span class="highlight-keyword">in</span> points:
    rs.AddPoint(point)

  doc.Views.Redraw()

<span class="highlight-keyword">if</span> __name__ == <span class="highlight-literal">"__main__"</span>:
  RunCommand()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_Geometry_Intersect_IntersectionEvent.htm">IntersectionEvent Class</a></div><div class="seeAlsoStyle"><a href="N_Rhino_Geometry_Intersect.htm">Rhino.Geometry.Intersect Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.16.22067.13000 (Last updated: 3/10/2022)<br />Copyright © 2009-2022 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>