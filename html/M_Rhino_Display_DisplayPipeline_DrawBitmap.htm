<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>DisplayPipeline.DrawBitmap Method (DisplayBitmap, Int32, Int32)</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Rhino.Display.DisplayPipeline.DrawBitmap(Rhino.Display.DisplayBitmap,System.Int32,System.Int32)" /><meta name="Description" content="Draws a bitmap in screen coordinates" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Display" /><meta name="file" content="M_Rhino_Display_DisplayPipeline_DrawBitmap" /><meta name="guid" content="M_Rhino_Display_DisplayPipeline_DrawBitmap" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_Display.htm" title="Rhino.Display" tocid="N_Rhino_Display">Rhino.Display</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_Display_DisplayPipeline.htm" title="DisplayPipeline Class" tocid="T_Rhino_Display_DisplayPipeline">DisplayPipeline Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Rhino_Display_DisplayPipeline.htm" title="DisplayPipeline Methods" tocid="Methods_T_Rhino_Display_DisplayPipeline">DisplayPipeline Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Display_DisplayPipeline_DrawBitmap.htm" title="DrawBitmap Method " tocid="Overload_Rhino_Display_DisplayPipeline_DrawBitmap">DrawBitmap Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Display_DisplayPipeline_DrawBitmap.htm" title="DrawBitmap Method (DisplayBitmap, Int32, Int32)" tocid="M_Rhino_Display_DisplayPipeline_DrawBitmap">DrawBitmap Method (DisplayBitmap, Int32, Int32)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Display_DisplayPipeline_DrawBitmap_1.htm" title="DrawBitmap Method (DisplayBitmap, Int32, Int32, Color)" tocid="M_Rhino_Display_DisplayPipeline_DrawBitmap_1">DrawBitmap Method (DisplayBitmap, Int32, Int32, Color)</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>DisplayPipeline<span id="LST7F9C6C8B_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7F9C6C8B_0?cpp=::|nu=.");</script>DrawBitmap Method (DisplayBitmap, Int32, Int32)</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Draws a bitmap in screen coordinates
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino_Display.htm">Rhino.Display</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">void</span> <span class="identifier">DrawBitmap</span>(
	<span class="identifier">DisplayBitmap</span> <span class="parameter">bitmap</span>,
	<span class="identifier">int</span> <span class="parameter">left</span>,
	<span class="identifier">int</span> <span class="parameter">top</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Sub</span> <span class="identifier">DrawBitmap</span> ( 
	<span class="parameter">bitmap</span> <span class="keyword">As</span> <span class="identifier">DisplayBitmap</span>,
	<span class="parameter">left</span> <span class="keyword">As</span> <span class="identifier">Integer</span>,
	<span class="parameter">top</span> <span class="keyword">As</span> <span class="identifier">Integer</span>
)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">bitmap</span></dt><dd>Type: <a href="T_Rhino_Display_DisplayBitmap.htm">Rhino.Display<span id="LST7F9C6C8B_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7F9C6C8B_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>DisplayBitmap</a><br />bitmap to draw</dd><dt><span class="parameter">left</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.int32" target="_blank">System<span id="LST7F9C6C8B_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7F9C6C8B_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Int32</a><br />where top/left corner of bitmap should appear in screen coordinates</dd><dt><span class="parameter">top</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.int32" target="_blank">System<span id="LST7F9C6C8B_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7F9C6C8B_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Int32</a><br />where top/left corner of bitmap should appear in screen coordinates</dd></dl></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBBBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','cs','1','2');return false;">C#</a></div><div id="ID0EBBBBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBBBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System.Drawing;
<span class="highlight-keyword">using</span> Rhino;
<span class="highlight-keyword">using</span> Rhino.Commands;
<span class="highlight-keyword">using</span> Rhino.Display;

<span class="highlight-keyword">namespace</span> examples_cs
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> DrawBitmapConduit : Rhino.Display.DisplayConduit
  {
    <span class="highlight-keyword">private</span> <span class="highlight-keyword">readonly</span> DisplayBitmap m_display_bitmap;

    <span class="highlight-keyword">public</span> DrawBitmapConduit()
    {
      <span class="highlight-keyword">var</span> flag = <span class="highlight-keyword">new</span> System.Drawing.Bitmap(<span class="highlight-number">100</span>, <span class="highlight-number">100</span>);
      <span class="highlight-keyword">for</span>( <span class="highlight-keyword">int</span> x = <span class="highlight-number">0</span>; x &lt;  flag.Height; ++x )
          <span class="highlight-keyword">for</span>( <span class="highlight-keyword">int</span> y = <span class="highlight-number">0</span>; y &lt; flag.Width; ++y )
              flag.SetPixel(x, y, Color.White);

      <span class="highlight-keyword">var</span> g = Graphics.FromImage(flag);
      g.FillEllipse(Brushes.Blue, <span class="highlight-number">25</span>, <span class="highlight-number">25</span>, <span class="highlight-number">50</span>, <span class="highlight-number">50</span>);
      m_display_bitmap = <span class="highlight-keyword">new</span> DisplayBitmap(flag);
    }

    <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">void</span> DrawForeground(Rhino.Display.DrawEventArgs e)
    {
      e.Display.DrawBitmap(m_display_bitmap, <span class="highlight-number">50</span>, <span class="highlight-number">50</span>, Color.White);
    }
  }

  <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> DrawBitmapCommand : Command
  {
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">string</span> EnglishName { <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-literal">"csDrawBitmap"</span>; } }

    <span class="highlight-keyword">readonly</span> DrawBitmapConduit m_conduit = <span class="highlight-keyword">new</span> DrawBitmapConduit();

    <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> Result RunCommand(RhinoDoc doc, RunMode mode)
    {
      <span class="highlight-comment">// toggle conduit on/off</span>
      m_conduit.Enabled = !m_conduit.Enabled;

      RhinoApp.WriteLine(<span class="highlight-literal">"Custom conduit enabled = {0}"</span>, m_conduit.Enabled);
      doc.Views.Redraw();
      <span class="highlight-keyword">return</span> Result.Success;
    }
  }
}</pre></div><div id="ID0EBBBBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Imports</span> System.Drawing
<span class="highlight-keyword">Imports</span> Rhino
<span class="highlight-keyword">Imports</span> Rhino.Commands
<span class="highlight-keyword">Imports</span> Rhino.Display

<span class="highlight-keyword">Namespace</span> examples_vb
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> DrawBitmapConduit
    <span class="highlight-keyword">Inherits</span> Rhino.Display.DisplayConduit
    <span class="highlight-keyword">Private</span> <span class="highlight-keyword">ReadOnly</span> m_display_bitmap <span class="highlight-keyword">As</span> DisplayBitmap

    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> <span class="highlight-keyword">New</span>()
      <span class="highlight-keyword">Dim</span> flag = <span class="highlight-keyword">New</span> System.Drawing.Bitmap(<span class="highlight-number">100</span>, <span class="highlight-number">100</span>)
      <span class="highlight-keyword">For</span> x <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> flag.Height - <span class="highlight-number">1</span>
        <span class="highlight-keyword">For</span> y <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> flag.Width - <span class="highlight-number">1</span>
          flag.SetPixel(x, y, Color.White)
        <span class="highlight-keyword">Next</span>
      <span class="highlight-keyword">Next</span>

      <span class="highlight-keyword">Dim</span> g = Graphics.FromImage(flag)
      g.FillEllipse(Brushes.Blue, <span class="highlight-number">25</span>, <span class="highlight-number">25</span>, <span class="highlight-number">50</span>, <span class="highlight-number">50</span>)
      m_display_bitmap = <span class="highlight-keyword">New</span> DisplayBitmap(flag)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>

    <span class="highlight-keyword">Protected</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">Sub</span> DrawForeground(e <span class="highlight-keyword">As</span> Rhino.Display.DrawEventArgs)
      e.Display.DrawBitmap(m_display_bitmap, <span class="highlight-number">50</span>, <span class="highlight-number">50</span>, Color.White)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span>

  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> DrawBitmapCommand
    <span class="highlight-keyword">Inherits</span> Command
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">ReadOnly</span> <span class="highlight-keyword">Property</span> EnglishName() <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span>
      <span class="highlight-keyword">Get</span>
        <span class="highlight-keyword">Return</span> <span class="highlight-literal">"vbDrawBitmap"</span>
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">Get</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Property</span>

    <span class="highlight-keyword">ReadOnly</span> m_conduit <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> DrawBitmapConduit()

    <span class="highlight-keyword">Protected</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">Function</span> RunCommand(doc <span class="highlight-keyword">As</span> RhinoDoc, mode <span class="highlight-keyword">As</span> RunMode) <span class="highlight-keyword">As</span> Result
      <span class="highlight-comment">' toggle conduit on/off</span>
      m_conduit.Enabled = <span class="highlight-keyword">Not</span> m_conduit.Enabled

      RhinoApp.WriteLine(<span class="highlight-literal">"Custom conduit enabled = {0}"</span>, m_conduit.Enabled)
      doc.Views.Redraw()
      <span class="highlight-keyword">Return</span> Result.Success
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Namespace</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBBBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAABBA_tab1" class="codeSnippetContainerTabSingle">Python</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">import</span> Rhino
<span class="highlight-keyword">from</span> Rhino.Geometry <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">import</span> System.Drawing
<span class="highlight-keyword">import</span> Rhino.Display
<span class="highlight-keyword">import</span> scriptcontext
<span class="highlight-keyword">import</span> rhinoscriptsyntax <span class="highlight-keyword">as</span> rs

<span class="highlight-keyword">class</span> CustomConduit(Rhino.Display.DisplayConduit):
    <span class="highlight-keyword">def</span> __init__(self):
      flag = System.Drawing.Bitmap(<span class="highlight-number">100</span>,<span class="highlight-number">100</span>)
      <span class="highlight-keyword">for</span> x <span class="highlight-keyword">in</span> range(<span class="highlight-number">0</span>,<span class="highlight-number">100</span>):
        <span class="highlight-keyword">for</span> y <span class="highlight-keyword">in</span> range(<span class="highlight-number">0</span>,<span class="highlight-number">100</span>):
          flag.SetPixel(x, y, System.Drawing.Color.Red)
      g = System.Drawing.Graphics.FromImage(flag)
      g.FillEllipse(System.Drawing.Brushes.Blue, <span class="highlight-number">25</span>, <span class="highlight-number">25</span>, <span class="highlight-number">50</span>, <span class="highlight-number">50</span>)
      self.display_bitmap = Rhino.Display.DisplayBitmap(flag)

    <span class="highlight-keyword">def</span> DrawForeground(self, e):
      e.Display.DrawBitmap(self.display_bitmap, <span class="highlight-number">50</span>, <span class="highlight-number">50</span>, System.Drawing.Color.Red)

<span class="highlight-keyword">if</span> __name__== <span class="highlight-literal">"__main__"</span>:
    conduit = CustomConduit()
    conduit.Enabled = True
    scriptcontext.doc.Views.Redraw()
    rs.GetString(<span class="highlight-literal">"Pausing for user input"</span>)
    conduit.Enabled = False
    scriptcontext.doc.Views.Redraw()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Version Information</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Rhino for Mac</h4>Supported in: 5.4<br /><h4 class="subHeading">Rhino for Windows</h4>Supported in: 7.0<br /></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID4RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_Display_DisplayPipeline.htm">DisplayPipeline Class</a></div><div class="seeAlsoStyle"><a href="Overload_Rhino_Display_DisplayPipeline_DrawBitmap.htm">DrawBitmap Overload</a></div><div class="seeAlsoStyle"><a href="N_Rhino_Display.htm">Rhino.Display Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.0.20112.12440 (Last updated: 4/28/2020)<br />Copyright © 2009-2020 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>