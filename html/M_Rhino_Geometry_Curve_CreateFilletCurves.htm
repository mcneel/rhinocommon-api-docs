<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Curve.CreateFilletCurves Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="CreateFilletCurves method" /><meta name="System.Keywords" content="Curve.CreateFilletCurves method" /><meta name="Microsoft.Help.F1" content="Rhino.Geometry.Curve.CreateFilletCurves" /><meta name="Microsoft.Help.Id" content="M:Rhino.Geometry.Curve.CreateFilletCurves(Rhino.Geometry.Curve,Rhino.Geometry.Point3d,Rhino.Geometry.Curve,Rhino.Geometry.Point3d,System.Double,System.Boolean,System.Boolean,System.Boolean,System.Double,System.Double)" /><meta name="Description" content="Creates a tangent arc between two curves and trims or extends the curves to the arc." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Geometry" /><meta name="file" content="M_Rhino_Geometry_Curve_CreateFilletCurves" /><meta name="guid" content="M_Rhino_Geometry_Curve_CreateFilletCurves" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_Geometry.htm" title="Rhino.Geometry" tocid="N_Rhino_Geometry">Rhino.Geometry</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_Geometry_Curve.htm" title="Curve Class" tocid="T_Rhino_Geometry_Curve">Curve Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Rhino_Geometry_Curve.htm" title="Curve Methods" tocid="Methods_T_Rhino_Geometry_Curve">Curve Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_ChangeClosedCurveSeam.htm" title="ChangeClosedCurveSeam Method " tocid="M_Rhino_Geometry_Curve_ChangeClosedCurveSeam">ChangeClosedCurveSeam Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_ChangeDimension.htm" title="ChangeDimension Method " tocid="M_Rhino_Geometry_Curve_ChangeDimension">ChangeDimension Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_ClosedCurveOrientation.htm" title="ClosedCurveOrientation Method " tocid="Overload_Rhino_Geometry_Curve_ClosedCurveOrientation">ClosedCurveOrientation Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_ClosestPoint.htm" title="ClosestPoint Method " tocid="Overload_Rhino_Geometry_Curve_ClosestPoint">ClosestPoint Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_ClosestPoints.htm" title="ClosestPoints Method " tocid="Overload_Rhino_Geometry_Curve_ClosestPoints">ClosestPoints Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_CombineShortSegments.htm" title="CombineShortSegments Method " tocid="M_Rhino_Geometry_Curve_CombineShortSegments">CombineShortSegments Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_Contains.htm" title="Contains Method " tocid="Overload_Rhino_Geometry_Curve_Contains">Contains Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_CreateArcBlend.htm" title="CreateArcBlend Method " tocid="M_Rhino_Geometry_Curve_CreateArcBlend">CreateArcBlend Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_CreateArcLineArcBlend.htm" title="CreateArcLineArcBlend Method " tocid="M_Rhino_Geometry_Curve_CreateArcLineArcBlend">CreateArcLineArcBlend Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_CreateBlendCurve.htm" title="CreateBlendCurve Method " tocid="Overload_Rhino_Geometry_Curve_CreateBlendCurve">CreateBlendCurve Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_CreateBooleanDifference.htm" title="CreateBooleanDifference Method " tocid="Overload_Rhino_Geometry_Curve_CreateBooleanDifference">CreateBooleanDifference Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_CreateBooleanIntersection.htm" title="CreateBooleanIntersection Method " tocid="Overload_Rhino_Geometry_Curve_CreateBooleanIntersection">CreateBooleanIntersection Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_CreateBooleanRegions.htm" title="CreateBooleanRegions Method " tocid="Overload_Rhino_Geometry_Curve_CreateBooleanRegions">CreateBooleanRegions Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_CreateBooleanUnion.htm" title="CreateBooleanUnion Method " tocid="Overload_Rhino_Geometry_Curve_CreateBooleanUnion">CreateBooleanUnion Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_CreateControlPointCurve.htm" title="CreateControlPointCurve Method " tocid="Overload_Rhino_Geometry_Curve_CreateControlPointCurve">CreateControlPointCurve Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_CreateCurve2View.htm" title="CreateCurve2View Method " tocid="M_Rhino_Geometry_Curve_CreateCurve2View">CreateCurve2View Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_CreateFillet.htm" title="CreateFillet Method " tocid="M_Rhino_Geometry_Curve_CreateFillet">CreateFillet Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_CreateFilletCornersCurve.htm" title="CreateFilletCornersCurve Method " tocid="M_Rhino_Geometry_Curve_CreateFilletCornersCurve">CreateFilletCornersCurve Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_CreateFilletCurves.htm" title="CreateFilletCurves Method " tocid="M_Rhino_Geometry_Curve_CreateFilletCurves">CreateFilletCurves Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_CreateInterpolatedCurve.htm" title="CreateInterpolatedCurve Method " tocid="Overload_Rhino_Geometry_Curve_CreateInterpolatedCurve">CreateInterpolatedCurve Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_CreateMatchCurve.htm" title="CreateMatchCurve Method " tocid="M_Rhino_Geometry_Curve_CreateMatchCurve">CreateMatchCurve Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_CreateMeanCurve.htm" title="CreateMeanCurve Method " tocid="Overload_Rhino_Geometry_Curve_CreateMeanCurve">CreateMeanCurve Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_CreatePeriodicCurve.htm" title="CreatePeriodicCurve Method " tocid="Overload_Rhino_Geometry_Curve_CreatePeriodicCurve">CreatePeriodicCurve Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_CreateSoftEditCurve.htm" title="CreateSoftEditCurve Method " tocid="M_Rhino_Geometry_Curve_CreateSoftEditCurve">CreateSoftEditCurve Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_CreateTextOutlines.htm" title="CreateTextOutlines Method " tocid="M_Rhino_Geometry_Curve_CreateTextOutlines">CreateTextOutlines Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_CreateTweenCurves.htm" title="CreateTweenCurves Method " tocid="Overload_Rhino_Geometry_Curve_CreateTweenCurves">CreateTweenCurves Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_CreateTweenCurvesWithMatching.htm" title="CreateTweenCurvesWithMatching Method " tocid="Overload_Rhino_Geometry_Curve_CreateTweenCurvesWithMatching">CreateTweenCurvesWithMatching Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_CreateTweenCurvesWithSampling.htm" title="CreateTweenCurvesWithSampling Method " tocid="Overload_Rhino_Geometry_Curve_CreateTweenCurvesWithSampling">CreateTweenCurvesWithSampling Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_CurvatureAt.htm" title="CurvatureAt Method " tocid="M_Rhino_Geometry_Curve_CurvatureAt">CurvatureAt Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_DerivativeAt.htm" title="DerivativeAt Method " tocid="Overload_Rhino_Geometry_Curve_DerivativeAt">DerivativeAt Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_Dispose.htm" title="Dispose Method " tocid="Overload_Rhino_Geometry_Curve_Dispose">Dispose Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_DivideAsContour.htm" title="DivideAsContour Method " tocid="M_Rhino_Geometry_Curve_DivideAsContour">DivideAsContour Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_DivideByCount.htm" title="DivideByCount Method " tocid="Overload_Rhino_Geometry_Curve_DivideByCount">DivideByCount Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_DivideByLength.htm" title="DivideByLength Method " tocid="Overload_Rhino_Geometry_Curve_DivideByLength">DivideByLength Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_DivideEquidistant.htm" title="DivideEquidistant Method " tocid="M_Rhino_Geometry_Curve_DivideEquidistant">DivideEquidistant Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_DoDirectionsMatch.htm" title="DoDirectionsMatch Method " tocid="M_Rhino_Geometry_Curve_DoDirectionsMatch">DoDirectionsMatch Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_Duplicate.htm" title="Duplicate Method " tocid="M_Rhino_Geometry_Curve_Duplicate">Duplicate Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_DuplicateCurve.htm" title="DuplicateCurve Method " tocid="M_Rhino_Geometry_Curve_DuplicateCurve">DuplicateCurve Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_DuplicateSegments.htm" title="DuplicateSegments Method " tocid="M_Rhino_Geometry_Curve_DuplicateSegments">DuplicateSegments Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_Extend.htm" title="Extend Method " tocid="Overload_Rhino_Geometry_Curve_Extend">Extend Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_ExtendByArc.htm" title="ExtendByArc Method " tocid="M_Rhino_Geometry_Curve_ExtendByArc">ExtendByArc Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_ExtendByLine.htm" title="ExtendByLine Method " tocid="M_Rhino_Geometry_Curve_ExtendByLine">ExtendByLine Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_ExtendOnSurface.htm" title="ExtendOnSurface Method " tocid="Overload_Rhino_Geometry_Curve_ExtendOnSurface">ExtendOnSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_ExtremeParameters.htm" title="ExtremeParameters Method " tocid="M_Rhino_Geometry_Curve_ExtremeParameters">ExtremeParameters Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_Fair.htm" title="Fair Method " tocid="M_Rhino_Geometry_Curve_Fair">Fair Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_Fit.htm" title="Fit Method " tocid="M_Rhino_Geometry_Curve_Fit">Fit Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_FrameAt.htm" title="FrameAt Method " tocid="M_Rhino_Geometry_Curve_FrameAt">FrameAt Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_GetConicSectionType.htm" title="GetConicSectionType Method " tocid="Overload_Rhino_Geometry_Curve_GetConicSectionType">GetConicSectionType Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_GetCurveParameterFromNurbsFormParameter.htm" title="GetCurveParameterFromNurbsFormParameter Method " tocid="M_Rhino_Geometry_Curve_GetCurveParameterFromNurbsFormParameter">GetCurveParameterFromNurbsFormParameter Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_GetDistancesBetweenCurves.htm" title="GetDistancesBetweenCurves Method " tocid="M_Rhino_Geometry_Curve_GetDistancesBetweenCurves">GetDistancesBetweenCurves Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_GetFilletPoints.htm" title="GetFilletPoints Method " tocid="M_Rhino_Geometry_Curve_GetFilletPoints">GetFilletPoints Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_GetLength.htm" title="GetLength Method " tocid="Overload_Rhino_Geometry_Curve_GetLength">GetLength Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_GetLocalPerpPoint.htm" title="GetLocalPerpPoint Method " tocid="Overload_Rhino_Geometry_Curve_GetLocalPerpPoint">GetLocalPerpPoint Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_GetLocalTangentPoint.htm" title="GetLocalTangentPoint Method " tocid="Overload_Rhino_Geometry_Curve_GetLocalTangentPoint">GetLocalTangentPoint Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_GetNextDiscontinuity.htm" title="GetNextDiscontinuity Method " tocid="Overload_Rhino_Geometry_Curve_GetNextDiscontinuity">GetNextDiscontinuity Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_GetNurbsFormParameterFromCurveParameter.htm" title="GetNurbsFormParameterFromCurveParameter Method " tocid="M_Rhino_Geometry_Curve_GetNurbsFormParameterFromCurveParameter">GetNurbsFormParameterFromCurveParameter Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_GetPerpendicularFrames.htm" title="GetPerpendicularFrames Method " tocid="M_Rhino_Geometry_Curve_GetPerpendicularFrames">GetPerpendicularFrames Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_HasNurbsForm.htm" title="HasNurbsForm Method " tocid="M_Rhino_Geometry_Curve_HasNurbsForm">HasNurbsForm Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_InflectionPoints.htm" title="InflectionPoints Method " tocid="M_Rhino_Geometry_Curve_InflectionPoints">InflectionPoints Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_IsArc.htm" title="IsArc Method " tocid="Overload_Rhino_Geometry_Curve_IsArc">IsArc Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_IsCircle.htm" title="IsCircle Method " tocid="Overload_Rhino_Geometry_Curve_IsCircle">IsCircle Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_IsClosable.htm" title="IsClosable Method " tocid="Overload_Rhino_Geometry_Curve_IsClosable">IsClosable Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_IsContinuous.htm" title="IsContinuous Method " tocid="M_Rhino_Geometry_Curve_IsContinuous">IsContinuous Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_IsEllipse.htm" title="IsEllipse Method " tocid="Overload_Rhino_Geometry_Curve_IsEllipse">IsEllipse Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_IsInPlane.htm" title="IsInPlane Method " tocid="Overload_Rhino_Geometry_Curve_IsInPlane">IsInPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_IsLinear.htm" title="IsLinear Method " tocid="Overload_Rhino_Geometry_Curve_IsLinear">IsLinear Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_IsPlanar.htm" title="IsPlanar Method " tocid="Overload_Rhino_Geometry_Curve_IsPlanar">IsPlanar Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_IsPolyline.htm" title="IsPolyline Method " tocid="M_Rhino_Geometry_Curve_IsPolyline">IsPolyline Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_IsShort.htm" title="IsShort Method " tocid="Overload_Rhino_Geometry_Curve_IsShort">IsShort Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_JoinCurves.htm" title="JoinCurves Method " tocid="Overload_Rhino_Geometry_Curve_JoinCurves">JoinCurves Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_LengthParameter.htm" title="LengthParameter Method " tocid="Overload_Rhino_Geometry_Curve_LengthParameter">LengthParameter Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_LocalClosestPoint.htm" title="LocalClosestPoint Method " tocid="M_Rhino_Geometry_Curve_LocalClosestPoint">LocalClosestPoint Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_MakeClosed.htm" title="MakeClosed Method " tocid="M_Rhino_Geometry_Curve_MakeClosed">MakeClosed Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_MakeEndsMeet.htm" title="MakeEndsMeet Method " tocid="M_Rhino_Geometry_Curve_MakeEndsMeet">MakeEndsMeet Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_MaxCurvaturePoints.htm" title="MaxCurvaturePoints Method " tocid="M_Rhino_Geometry_Curve_MaxCurvaturePoints">MaxCurvaturePoints Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_NonConstOperation.htm" title="NonConstOperation Method " tocid="M_Rhino_Geometry_Curve_NonConstOperation">NonConstOperation Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_NormalizedLengthParameter.htm" title="NormalizedLengthParameter Method " tocid="Overload_Rhino_Geometry_Curve_NormalizedLengthParameter">NormalizedLengthParameter Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_NormalizedLengthParameters.htm" title="NormalizedLengthParameters Method " tocid="Overload_Rhino_Geometry_Curve_NormalizedLengthParameters">NormalizedLengthParameters Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_Offset.htm" title="Offset Method " tocid="Overload_Rhino_Geometry_Curve_Offset">Offset Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_OffsetNormalToSurface.htm" title="OffsetNormalToSurface Method " tocid="M_Rhino_Geometry_Curve_OffsetNormalToSurface">OffsetNormalToSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_OffsetOnSurface.htm" title="OffsetOnSurface Method " tocid="Overload_Rhino_Geometry_Curve_OffsetOnSurface">OffsetOnSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_PerpendicularFrameAt.htm" title="PerpendicularFrameAt Method " tocid="M_Rhino_Geometry_Curve_PerpendicularFrameAt">PerpendicularFrameAt Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_PlanarClosedCurveRelationship.htm" title="PlanarClosedCurveRelationship Method " tocid="M_Rhino_Geometry_Curve_PlanarClosedCurveRelationship">PlanarClosedCurveRelationship Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_PlanarCurveCollision.htm" title="PlanarCurveCollision Method " tocid="M_Rhino_Geometry_Curve_PlanarCurveCollision">PlanarCurveCollision Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_PointAt.htm" title="PointAt Method " tocid="M_Rhino_Geometry_Curve_PointAt">PointAt Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_PointAtLength.htm" title="PointAtLength Method " tocid="M_Rhino_Geometry_Curve_PointAtLength">PointAtLength Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_PointAtNormalizedLength.htm" title="PointAtNormalizedLength Method " tocid="M_Rhino_Geometry_Curve_PointAtNormalizedLength">PointAtNormalizedLength Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_ProjectToBrep.htm" title="ProjectToBrep Method " tocid="Overload_Rhino_Geometry_Curve_ProjectToBrep">ProjectToBrep Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_ProjectToMesh.htm" title="ProjectToMesh Method " tocid="Overload_Rhino_Geometry_Curve_ProjectToMesh">ProjectToMesh Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_ProjectToPlane.htm" title="ProjectToPlane Method " tocid="M_Rhino_Geometry_Curve_ProjectToPlane">ProjectToPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_PullToBrepFace.htm" title="PullToBrepFace Method " tocid="Overload_Rhino_Geometry_Curve_PullToBrepFace">PullToBrepFace Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_PullToMesh.htm" title="PullToMesh Method " tocid="M_Rhino_Geometry_Curve_PullToMesh">PullToMesh Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_Rebuild.htm" title="Rebuild Method " tocid="M_Rhino_Geometry_Curve_Rebuild">Rebuild Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_RemoveShortSegments.htm" title="RemoveShortSegments Method " tocid="M_Rhino_Geometry_Curve_RemoveShortSegments">RemoveShortSegments Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_Reverse.htm" title="Reverse Method " tocid="M_Rhino_Geometry_Curve_Reverse">Reverse Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_RibbonOffset.htm" title="RibbonOffset Method " tocid="Overload_Rhino_Geometry_Curve_RibbonOffset">RibbonOffset Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_SetEndPoint.htm" title="SetEndPoint Method " tocid="M_Rhino_Geometry_Curve_SetEndPoint">SetEndPoint Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_SetStartPoint.htm" title="SetStartPoint Method " tocid="M_Rhino_Geometry_Curve_SetStartPoint">SetStartPoint Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_Simplify.htm" title="Simplify Method " tocid="M_Rhino_Geometry_Curve_Simplify">Simplify Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_SimplifyEnd.htm" title="SimplifyEnd Method " tocid="M_Rhino_Geometry_Curve_SimplifyEnd">SimplifyEnd Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_Smooth.htm" title="Smooth Method " tocid="Overload_Rhino_Geometry_Curve_Smooth">Smooth Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_SpanDomain.htm" title="SpanDomain Method " tocid="M_Rhino_Geometry_Curve_SpanDomain">SpanDomain Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_Split.htm" title="Split Method " tocid="Overload_Rhino_Geometry_Curve_Split">Split Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_TangentAt.htm" title="TangentAt Method " tocid="M_Rhino_Geometry_Curve_TangentAt">TangentAt Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_ToArcsAndLines.htm" title="ToArcsAndLines Method " tocid="M_Rhino_Geometry_Curve_ToArcsAndLines">ToArcsAndLines Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_ToNurbsCurve.htm" title="ToNurbsCurve Method " tocid="Overload_Rhino_Geometry_Curve_ToNurbsCurve">ToNurbsCurve Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_ToPolyline.htm" title="ToPolyline Method " tocid="Overload_Rhino_Geometry_Curve_ToPolyline">ToPolyline Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_TorsionAt.htm" title="TorsionAt Method " tocid="M_Rhino_Geometry_Curve_TorsionAt">TorsionAt Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_Trim.htm" title="Trim Method " tocid="Overload_Rhino_Geometry_Curve_Trim">Trim Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_TryGetArc.htm" title="TryGetArc Method " tocid="Overload_Rhino_Geometry_Curve_TryGetArc">TryGetArc Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_TryGetCircle.htm" title="TryGetCircle Method " tocid="Overload_Rhino_Geometry_Curve_TryGetCircle">TryGetCircle Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_TryGetEllipse.htm" title="TryGetEllipse Method " tocid="Overload_Rhino_Geometry_Curve_TryGetEllipse">TryGetEllipse Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_TryGetPlane.htm" title="TryGetPlane Method " tocid="Overload_Rhino_Geometry_Curve_TryGetPlane">TryGetPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_TryGetPolyline.htm" title="TryGetPolyline Method " tocid="Overload_Rhino_Geometry_Curve_TryGetPolyline">TryGetPolyline Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Curve<span id="LST94F8AD9D_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST94F8AD9D_0?cpp=::|nu=.");</script>CreateFilletCurves Method </h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Creates a tangent arc between two curves and trims or extends the curves to the arc.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino_Geometry.htm">Rhino.Geometry</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="since"><strong>Since:</strong> 5.10</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">Curve</span>[] <span class="identifier">CreateFilletCurves</span>(
	<span class="identifier">Curve</span> <span class="parameter">curve0</span>,
	<span class="identifier">Point3d</span> <span class="parameter">point0</span>,
	<span class="identifier">Curve</span> <span class="parameter">curve1</span>,
	<span class="identifier">Point3d</span> <span class="parameter">point1</span>,
	<span class="identifier">double</span> <span class="parameter">radius</span>,
	<span class="identifier">bool</span> <span class="parameter">join</span>,
	<span class="identifier">bool</span> <span class="parameter">trim</span>,
	<span class="identifier">bool</span> <span class="parameter">arcExtension</span>,
	<span class="identifier">double</span> <span class="parameter">tolerance</span>,
	<span class="identifier">double</span> <span class="parameter">angleTolerance</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">CreateFilletCurves</span> ( 
	<span class="parameter">curve0</span> <span class="keyword">As</span> <span class="identifier">Curve</span>,
	<span class="parameter">point0</span> <span class="keyword">As</span> <span class="identifier">Point3d</span>,
	<span class="parameter">curve1</span> <span class="keyword">As</span> <span class="identifier">Curve</span>,
	<span class="parameter">point1</span> <span class="keyword">As</span> <span class="identifier">Point3d</span>,
	<span class="parameter">radius</span> <span class="keyword">As</span> <span class="identifier">Double</span>,
	<span class="parameter">join</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>,
	<span class="parameter">trim</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>,
	<span class="parameter">arcExtension</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>,
	<span class="parameter">tolerance</span> <span class="keyword">As</span> <span class="identifier">Double</span>,
	<span class="parameter">angleTolerance</span> <span class="keyword">As</span> <span class="identifier">Double</span>
) <span class="keyword">As</span> <span class="identifier">Curve</span>()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">curve0</span></dt><dd>Type: <a href="T_Rhino_Geometry_Curve.htm">Rhino.Geometry<span id="LST94F8AD9D_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST94F8AD9D_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Curve</a><br />The first curve to fillet.</dd><dt><span class="parameter">point0</span></dt><dd>Type: <a href="T_Rhino_Geometry_Point3d.htm">Rhino.Geometry<span id="LST94F8AD9D_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST94F8AD9D_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Point3d</a><br />
            A point on the first curve that is near the end where the fillet will
            be created.
            </dd><dt><span class="parameter">curve1</span></dt><dd>Type: <a href="T_Rhino_Geometry_Curve.htm">Rhino.Geometry<span id="LST94F8AD9D_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST94F8AD9D_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Curve</a><br />The second curve to fillet.</dd><dt><span class="parameter">point1</span></dt><dd>Type: <a href="T_Rhino_Geometry_Point3d.htm">Rhino.Geometry<span id="LST94F8AD9D_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST94F8AD9D_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Point3d</a><br />
            A point on the second curve that is near the end where the fillet will
            be created.
            </dd><dt><span class="parameter">radius</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.double" target="_blank">System<span id="LST94F8AD9D_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST94F8AD9D_5?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Double</a><br />The radius of the fillet.</dd><dt><span class="parameter">join</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.boolean" target="_blank">System<span id="LST94F8AD9D_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST94F8AD9D_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Boolean</a><br />Join the output curves.</dd><dt><span class="parameter">trim</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.boolean" target="_blank">System<span id="LST94F8AD9D_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST94F8AD9D_7?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Boolean</a><br />
            Trim copies of the input curves to the output fillet curve.
            </dd><dt><span class="parameter">arcExtension</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.boolean" target="_blank">System<span id="LST94F8AD9D_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST94F8AD9D_8?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Boolean</a><br />
            Applies when arcs are filleted but need to be extended to meet the
            fillet curve or chamfer line. If true, then the arc is extended
            maintaining its validity. If false, then the arc is extended with a
            line segment, which is joined to the arc converting it to a polycurve.
            </dd><dt><span class="parameter">tolerance</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.double" target="_blank">System<span id="LST94F8AD9D_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST94F8AD9D_9?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Double</a><br />
            The tolerance, generally the document's absolute tolerance.
            </dd><dt><span class="parameter">angleTolerance</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.double" target="_blank">System<span id="LST94F8AD9D_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST94F8AD9D_10?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Double</a><br /><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="angleTolerance"/&gt; documentation for "M:Rhino.Geometry.Curve.CreateFilletCurves(Rhino.Geometry.Curve,Rhino.Geometry.Point3d,Rhino.Geometry.Curve,Rhino.Geometry.Point3d,System.Double,System.Boolean,System.Boolean,System.Boolean,System.Double,System.Double)"]</p></dd></dl><h4 class="subHeading">Return Value</h4>Type: <span id="LST94F8AD9D_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST94F8AD9D_11?cpp=array&lt;");</script><a href="T_Rhino_Geometry_Curve.htm">Curve</a><span id="LST94F8AD9D_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST94F8AD9D_12?cpp=&gt;|vb=()|nu=[]");</script><br />
            The results of the fillet operation. The number of output curves depends
            on the input curves and the values of the parameters that were used
            during the fillet operation. In most cases, the output array will contain
            either one or three curves, although two curves can be returned if the
            radius is zero and join = false.
            For example, if both join and trim = true, then the output curve
            will be a polycurve containing the fillet curve joined with trimmed copies
            of the input curves. If join = false and trim = true, then three curves,
            the fillet curve and trimmed copies of the input curves, will be returned.
            If both join and trim = false, then just the fillet curve is returned.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBBBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','cs','1','2');return false;">C#</a></div><div id="ID0EBBBBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBBBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Rhino;
<span class="highlight-keyword">using</span> Rhino.Commands;
<span class="highlight-keyword">using</span> Rhino.Geometry;
<span class="highlight-keyword">using</span> Rhino.Input;
<span class="highlight-keyword">using</span> Rhino.DocObjects;
<span class="highlight-keyword">using</span> Rhino.Input.Custom;

<span class="highlight-keyword">namespace</span> examples_cs
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> FilletCurvesCommand : Command
  {
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">string</span> EnglishName { <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-literal">"csFilletCurves"</span>; } }

    <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> Result RunCommand(RhinoDoc doc, RunMode mode)
    {
      <span class="highlight-keyword">var</span> gc1 = <span class="highlight-keyword">new</span> GetObject();
      gc1.DisablePreSelect();
      gc1.SetCommandPrompt(<span class="highlight-literal">"Select first curve to fillet (close to the end you want to fillet)"</span>);
      gc1.GeometryFilter = ObjectType.Curve;
      gc1.GeometryAttributeFilter = GeometryAttributeFilter.OpenCurve;
      gc1.Get();
      <span class="highlight-keyword">if</span> (gc1.CommandResult() != Result.Success)
        <span class="highlight-keyword">return</span> gc1.CommandResult();
      <span class="highlight-keyword">var</span> curve1_obj_ref = gc1.Object(<span class="highlight-number">0</span>);
      <span class="highlight-keyword">var</span> curve1 = curve1_obj_ref.Curve();
      <span class="highlight-keyword">if</span> (curve1 == <span class="highlight-keyword">null</span>) <span class="highlight-keyword">return</span> Result.Failure;
      <span class="highlight-keyword">var</span> curve1_point_near_end = curve1_obj_ref.SelectionPoint();
      <span class="highlight-keyword">if</span> (curve1_point_near_end == Point3d.Unset)
        <span class="highlight-keyword">return</span> Result.Failure;

      <span class="highlight-keyword">var</span> gc2 = <span class="highlight-keyword">new</span> GetObject();
      gc2.DisablePreSelect();
      gc2.SetCommandPrompt(<span class="highlight-literal">"Select second curve to fillet (close to the end you want to fillet)"</span>);
      gc2.GeometryFilter = ObjectType.Curve;
      gc2.GeometryAttributeFilter = GeometryAttributeFilter.OpenCurve;
      gc2.Get();
      <span class="highlight-keyword">if</span> (gc2.CommandResult() != Result.Success)
        <span class="highlight-keyword">return</span> gc2.CommandResult();
      <span class="highlight-keyword">var</span> curve2_obj_ref = gc2.Object(<span class="highlight-number">0</span>);
      <span class="highlight-keyword">var</span> curve2 = curve2_obj_ref.Curve();
      <span class="highlight-keyword">if</span> (curve2 == <span class="highlight-keyword">null</span>) <span class="highlight-keyword">return</span> Result.Failure;
      <span class="highlight-keyword">var</span> curve2_point_near_end = curve2_obj_ref.SelectionPoint();
      <span class="highlight-keyword">if</span> (curve2_point_near_end == Point3d.Unset)
        <span class="highlight-keyword">return</span> Result.Failure;

      <span class="highlight-keyword">double</span> radius = <span class="highlight-number">0</span>;
      <span class="highlight-keyword">var</span> rc = RhinoGet.GetNumber(<span class="highlight-literal">"fillet radius"</span>, <span class="highlight-keyword">false</span>, <span class="highlight-keyword">ref</span> radius);
      <span class="highlight-keyword">if</span> (rc != Result.Success) <span class="highlight-keyword">return</span> rc;

      <span class="highlight-keyword">var</span> <span class="highlight-keyword">join</span> = <span class="highlight-keyword">false</span>;
      <span class="highlight-keyword">var</span> trim = <span class="highlight-keyword">true</span>;
      <span class="highlight-keyword">var</span> arc_extension = <span class="highlight-keyword">true</span>;
      <span class="highlight-keyword">var</span> fillet_curves = Curve.CreateFilletCurves(curve1, curve1_point_near_end, curve2, curve2_point_near_end, radius,
        <span class="highlight-keyword">join</span>, trim, arc_extension, doc.ModelAbsoluteTolerance, doc.ModelAngleToleranceDegrees);
      <span class="highlight-keyword">if</span> (fillet_curves == <span class="highlight-keyword">null</span> <span class="highlight-comment">/*|| fillet_curves.Length != 3*/</span>)
        <span class="highlight-keyword">return</span> Result.Failure;

      <span class="highlight-keyword">foreach</span>(<span class="highlight-keyword">var</span> fillet_curve <span class="highlight-keyword">in</span> fillet_curves)
        doc.Objects.AddCurve(fillet_curve);
      doc.Views.Redraw();
      <span class="highlight-keyword">return</span> rc;
    }
  }
}</pre></div><div id="ID0EBBBBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Imports</span> Rhino
<span class="highlight-keyword">Imports</span> Rhino.Commands
<span class="highlight-keyword">Imports</span> Rhino.Geometry
<span class="highlight-keyword">Imports</span> Rhino.Input
<span class="highlight-keyword">Imports</span> Rhino.DocObjects
<span class="highlight-keyword">Imports</span> Rhino.Input.Custom

<span class="highlight-keyword">Namespace</span> examples_vb
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> FilletCurvesCommand
    <span class="highlight-keyword">Inherits</span> Command
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">ReadOnly</span> <span class="highlight-keyword">Property</span> EnglishName() <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span>
      <span class="highlight-keyword">Get</span>
        <span class="highlight-keyword">Return</span> <span class="highlight-literal">"vbFilletCurves"</span>
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">Get</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Property</span>

    <span class="highlight-keyword">Protected</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">Function</span> RunCommand(doc <span class="highlight-keyword">As</span> RhinoDoc, mode <span class="highlight-keyword">As</span> RunMode) <span class="highlight-keyword">As</span> Result
      <span class="highlight-keyword">Dim</span> gc1 = <span class="highlight-keyword">New</span> GetObject()
      gc1.DisablePreSelect()
      gc1.SetCommandPrompt(<span class="highlight-literal">"Select first curve to fillet (close to the end you want to fillet)"</span>)
      gc1.GeometryFilter = ObjectType.Curve
      gc1.GeometryAttributeFilter = GeometryAttributeFilter.OpenCurve
      gc1.[<span class="highlight-keyword">Get</span>]()
      <span class="highlight-keyword">If</span> gc1.CommandResult() &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> gc1.CommandResult()
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">Dim</span> curve1_obj_ref = gc1.[<span class="highlight-keyword">Object</span>](<span class="highlight-number">0</span>)
      <span class="highlight-keyword">Dim</span> curve1 = curve1_obj_ref.Curve()
      <span class="highlight-keyword">If</span> curve1 <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> Result.Failure
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">Dim</span> curve1_point_near_end = curve1_obj_ref.SelectionPoint()
      <span class="highlight-keyword">If</span> curve1_point_near_end = Point3d.Unset <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> Result.Failure
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-keyword">Dim</span> gc2 = <span class="highlight-keyword">New</span> GetObject()
      gc2.DisablePreSelect()
      gc2.SetCommandPrompt(<span class="highlight-literal">"Select second curve to fillet (close to the end you want to fillet)"</span>)
      gc2.GeometryFilter = ObjectType.Curve
      gc2.GeometryAttributeFilter = GeometryAttributeFilter.OpenCurve
      gc2.[<span class="highlight-keyword">Get</span>]()
      <span class="highlight-keyword">If</span> gc2.CommandResult() &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> gc2.CommandResult()
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">Dim</span> curve2_obj_ref = gc2.[<span class="highlight-keyword">Object</span>](<span class="highlight-number">0</span>)
      <span class="highlight-keyword">Dim</span> curve2 = curve2_obj_ref.Curve()
      <span class="highlight-keyword">If</span> curve2 <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> Result.Failure
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">Dim</span> curve2_point_near_end = curve2_obj_ref.SelectionPoint()
      <span class="highlight-keyword">If</span> curve2_point_near_end = Point3d.Unset <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> Result.Failure
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-keyword">Dim</span> radius <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = <span class="highlight-number">0</span>
      <span class="highlight-keyword">Dim</span> rc = RhinoGet.GetNumber(<span class="highlight-literal">"fillet radius"</span>, <span class="highlight-keyword">False</span>, radius)
      <span class="highlight-keyword">If</span> rc &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> rc
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-keyword">Dim</span> fillet_curve = Curve.CreateFilletCurves(curve1, curve1_point_near_end, curve2, curve2_point_near_end, radius, <span class="highlight-keyword">True</span>, _
        <span class="highlight-keyword">True</span>, <span class="highlight-keyword">True</span>, doc.ModelAbsoluteTolerance, doc.ModelAngleToleranceDegrees)
      <span class="highlight-keyword">If</span> fillet_curve <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">OrElse</span> fillet_curve.Length &lt;&gt; <span class="highlight-number">1</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> Result.Failure
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      doc.Objects.AddCurve(fillet_curve(<span class="highlight-number">0</span>))
      doc.Views.Redraw()
      <span class="highlight-keyword">Return</span> rc
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Namespace</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBBBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAABBA_tab1" class="codeSnippetContainerTabSingle">Python</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">from</span> Rhino <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> Rhino.Commands <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> Rhino.Geometry <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> Rhino.Input <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> Rhino.DocObjects <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> Rhino.Input.Custom <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> scriptcontext <span class="highlight-keyword">import</span> doc

<span class="highlight-keyword">def</span> RunCommand():
  gc1 = GetObject()
  gc1.DisablePreSelect()
  gc1.SetCommandPrompt(<span class="highlight-literal">"Select first curve to fillet (close to the end you want to fillet)"</span>)
  gc1.GeometryFilter = ObjectType.Curve
  gc1.GeometryAttributeFilter = GeometryAttributeFilter.OpenCurve
  gc1.Get()
  <span class="highlight-keyword">if</span> gc1.CommandResult() != Result.Success:
    <span class="highlight-keyword">return</span> gc1.CommandResult()
  curve1_obj_ref = gc1.Object(<span class="highlight-number">0</span>)
  curve1 = curve1_obj_ref.Curve()
  <span class="highlight-keyword">if</span> curve1 == None: <span class="highlight-keyword">return</span> Result.Failure
  curve1_point_near_end = curve1_obj_ref.SelectionPoint()
  <span class="highlight-keyword">if</span> curve1_point_near_end == Point3d.Unset:
    <span class="highlight-keyword">return</span> Result.Failure

  gc2 = GetObject()
  gc2.DisablePreSelect()
  gc2.SetCommandPrompt(<span class="highlight-literal">"Select second curve to fillet (close to the end you want to fillet)"</span>)
  gc2.GeometryFilter = ObjectType.Curve
  gc2.GeometryAttributeFilter = GeometryAttributeFilter.OpenCurve
  gc2.Get()
  <span class="highlight-keyword">if</span> gc2.CommandResult() != Result.Success:
    <span class="highlight-keyword">return</span> gc2.CommandResult()
  curve2_obj_ref = gc2.Object(<span class="highlight-number">0</span>)
  curve2 = curve2_obj_ref.Curve()
  <span class="highlight-keyword">if</span> curve2 == None: <span class="highlight-keyword">return</span> Result.Failure
  curve2_point_near_end = curve2_obj_ref.SelectionPoint()
  <span class="highlight-keyword">if</span> curve2_point_near_end == Point3d.Unset:
    <span class="highlight-keyword">return</span> Result.Failure

  radius = <span class="highlight-number">0.0</span>
  rc, radius = RhinoGet.GetNumber(<span class="highlight-literal">"fillet radius"</span>, False, radius)
  <span class="highlight-keyword">if</span> rc != Result.Success: <span class="highlight-keyword">return</span> rc

  fillet_curve = Curve.CreateFilletCurves(curve1, curve1_point_near_end, curve2, curve2_point_near_end, radius,
    True, True, True, doc.ModelAbsoluteTolerance, doc.ModelAngleToleranceDegrees)
  <span class="highlight-keyword">if</span> fillet_curve == None <span class="highlight-keyword">or</span> fillet_curve.Length != <span class="highlight-number">1</span>:
    <span class="highlight-keyword">return</span> Result.Failure

  doc.Objects.AddCurve(fillet_curve[<span class="highlight-number">0</span>])
  doc.Views.Redraw()
  <span class="highlight-keyword">return</span> rc

<span class="highlight-keyword">if</span> __name__ == <span class="highlight-literal">"__main__"</span>:
  RunCommand()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_Geometry_Curve.htm">Curve Class</a></div><div class="seeAlsoStyle"><a href="N_Rhino_Geometry.htm">Rhino.Geometry Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.16.22067.13000 (Last updated: 3/10/2022)<br />Copyright © 2009-2022 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>