<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Plane Constructor (Point3d, Point3d, Point3d)</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Rhino.Geometry.Plane.#ctor(Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.Point3d)" /><meta name="Description" content="Initializes a plane from three non-collinear points." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Geometry" /><meta name="file" content="M_Rhino_Geometry_Plane__ctor_1" /><meta name="guid" content="M_Rhino_Geometry_Plane__ctor_1" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_Geometry.htm" title="Rhino.Geometry" tocid="N_Rhino_Geometry">Rhino.Geometry</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_Geometry_Plane.htm" title="Plane Structure" tocid="T_Rhino_Geometry_Plane">Plane Structure</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Plane__ctor.htm" title="Plane Constructor " tocid="Overload_Rhino_Geometry_Plane__ctor">Plane Constructor </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Plane__ctor.htm" title="Plane Constructor (Plane)" tocid="M_Rhino_Geometry_Plane__ctor">Plane Constructor (Plane)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Plane__ctor_2.htm" title="Plane Constructor (Point3d, Vector3d)" tocid="M_Rhino_Geometry_Plane__ctor_2">Plane Constructor (Point3d, Vector3d)</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Plane__ctor_1.htm" title="Plane Constructor (Point3d, Point3d, Point3d)" tocid="M_Rhino_Geometry_Plane__ctor_1">Plane Constructor (Point3d, Point3d, Point3d)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Plane__ctor_3.htm" title="Plane Constructor (Point3d, Vector3d, Vector3d)" tocid="M_Rhino_Geometry_Plane__ctor_3">Plane Constructor (Point3d, Vector3d, Vector3d)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Plane__ctor_4.htm" title="Plane Constructor (Double, Double, Double, Double)" tocid="M_Rhino_Geometry_Plane__ctor_4">Plane Constructor (Double, Double, Double, Double)</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Plane Constructor (Point3d, Point3d, Point3d)</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Initializes a plane from three non-collinear points.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino_Geometry.htm">Rhino.Geometry</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="since"><strong>Since:</strong> 5.0</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">Plane</span>(
	<span class="identifier">Point3d</span> <span class="parameter">origin</span>,
	<span class="identifier">Point3d</span> <span class="parameter">xPoint</span>,
	<span class="identifier">Point3d</span> <span class="parameter">yPoint</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Sub</span> <span class="identifier">New</span> ( 
	<span class="parameter">origin</span> <span class="keyword">As</span> <span class="identifier">Point3d</span>,
	<span class="parameter">xPoint</span> <span class="keyword">As</span> <span class="identifier">Point3d</span>,
	<span class="parameter">yPoint</span> <span class="keyword">As</span> <span class="identifier">Point3d</span>
)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">origin</span></dt><dd>Type: <a href="T_Rhino_Geometry_Point3d.htm">Rhino.Geometry<span id="LSTC82C49B3_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC82C49B3_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Point3d</a><br />Origin point of the plane.</dd><dt><span class="parameter">xPoint</span></dt><dd>Type: <a href="T_Rhino_Geometry_Point3d.htm">Rhino.Geometry<span id="LSTC82C49B3_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC82C49B3_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Point3d</a><br />
            Second point in the plane. The x-axis will be parallel to x_point-origin.
            </dd><dt><span class="parameter">yPoint</span></dt><dd>Type: <a href="T_Rhino_Geometry_Point3d.htm">Rhino.Geometry<span id="LSTC82C49B3_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC82C49B3_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Point3d</a><br />
            Third point on the plane that is not collinear with the first two points.
            taxis*(y_point-origin) will be &gt; 0.
            </dd></dl></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBBBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','cs','1','2');return false;">C#</a></div><div id="ID0EBBBBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBBBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;

<span class="highlight-keyword">partial</span> <span class="highlight-keyword">class</span> Examples
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> Rhino.Commands.Result AddClippingPlane(Rhino.RhinoDoc doc)
  {
    <span class="highlight-comment">// Define the corners of the clipping plane</span>
    Rhino.Geometry.Point3d[] corners;
    Rhino.Commands.Result rc = Rhino.Input.RhinoGet.GetRectangle(<span class="highlight-keyword">out</span> corners);
    <span class="highlight-keyword">if</span> (rc != Rhino.Commands.Result.Success)
      <span class="highlight-keyword">return</span> rc;

    <span class="highlight-comment">// Get the active view</span>
    Rhino.Display.RhinoView view = doc.Views.ActiveView;
    <span class="highlight-keyword">if</span> (view == <span class="highlight-keyword">null</span>)
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure;

    Rhino.Geometry.Point3d p0 = corners[<span class="highlight-number">0</span>];
    Rhino.Geometry.Point3d p1 = corners[<span class="highlight-number">1</span>];
    Rhino.Geometry.Point3d p3 = corners[<span class="highlight-number">3</span>];

    <span class="highlight-comment">// Create a plane from the corner points</span>
    Rhino.Geometry.Plane plane = <span class="highlight-keyword">new</span> Rhino.Geometry.Plane(p0, p1, p3);

    <span class="highlight-comment">// Add a clipping plane object to the document</span>
    Guid id = doc.Objects.AddClippingPlane(plane, p0.DistanceTo(p1), p0.DistanceTo(p3), view.ActiveViewportID);
    <span class="highlight-keyword">if</span> (id != Guid.Empty)
    {
      doc.Views.Redraw();
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success;
    }
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure;
  }
}</pre></div><div id="ID0EBBBBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Partial</span> <span class="highlight-keyword">Class</span> Examples
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Function</span> AddClippingPlane(<span class="highlight-keyword">ByVal</span> doc <span class="highlight-keyword">As</span> Rhino.RhinoDoc) <span class="highlight-keyword">As</span> Rhino.Commands.Result
    <span class="highlight-comment">' Define the corners of the clipping plane</span>
    <span class="highlight-keyword">Dim</span> corners <span class="highlight-keyword">As</span> Rhino.Geometry.Point3d() = <span class="highlight-keyword">Nothing</span>
    <span class="highlight-keyword">Dim</span> rc <span class="highlight-keyword">As</span> Rhino.Commands.Result = Rhino.Input.RhinoGet.GetRectangle(corners)
    <span class="highlight-keyword">If</span> rc &lt;&gt; Rhino.Commands.Result.Success <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> rc
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Get the active view</span>
    <span class="highlight-keyword">Dim</span> view <span class="highlight-keyword">As</span> Rhino.Display.RhinoView = doc.Views.ActiveView
    <span class="highlight-keyword">If</span> view <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Failure
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Dim</span> p0 <span class="highlight-keyword">As</span> Rhino.Geometry.Point3d = corners(<span class="highlight-number">0</span>)
    <span class="highlight-keyword">Dim</span> p1 <span class="highlight-keyword">As</span> Rhino.Geometry.Point3d = corners(<span class="highlight-number">1</span>)
    <span class="highlight-keyword">Dim</span> p3 <span class="highlight-keyword">As</span> Rhino.Geometry.Point3d = corners(<span class="highlight-number">3</span>)

    <span class="highlight-comment">' Create a plane from the corner points</span>
    <span class="highlight-keyword">Dim</span> plane <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Rhino.Geometry.Plane(p0, p1, p3)

    <span class="highlight-comment">' Add a clipping plane object to the document</span>
    <span class="highlight-keyword">Dim</span> id <span class="highlight-keyword">As</span> Guid = doc.Objects.AddClippingPlane(plane, p0.DistanceTo(p1), p0.DistanceTo(p3), view.ActiveViewportID)
    <span class="highlight-keyword">If</span> id &lt;&gt; Guid.Empty <span class="highlight-keyword">Then</span>
      doc.Views.Redraw()
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Success
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Failure
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBBBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAABBA_tab1" class="codeSnippetContainerTabSingle">Python</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">import</span> Rhino
<span class="highlight-keyword">import</span> scriptcontext
<span class="highlight-keyword">import</span> System.Guid

<span class="highlight-keyword">def</span> AddClippingPlane():
    <span class="highlight-comment"># Define the corners of the clipping plane</span>
    rc, corners = Rhino.Input.RhinoGet.GetRectangle()
    <span class="highlight-keyword">if</span> rc!=Rhino.Commands.Result.Success: <span class="highlight-keyword">return</span> rc

    <span class="highlight-comment"># Get the active view</span>
    view = scriptcontext.doc.Views.ActiveView
    <span class="highlight-keyword">if</span> view <span class="highlight-keyword">is</span> None: <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure

    p0, p1, p2, p3 = corners
    <span class="highlight-comment"># Create a plane from the corner points</span>
    plane = Rhino.Geometry.Plane(p0, p1, p3)

    <span class="highlight-comment"># Add a clipping plane object to the document</span>
    id = scriptcontext.doc.Objects.AddClippingPlane(plane, p0.DistanceTo(p1), p0.DistanceTo(p3), view.ActiveViewportID)
    <span class="highlight-keyword">if</span> id!=System.Guid.Empty:
        scriptcontext.doc.Views.Redraw()
        <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure

<span class="highlight-keyword">if</span> __name__==<span class="highlight-literal">"__main__"</span>:
    AddClippingPlane()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_Geometry_Plane.htm">Plane Structure</a></div><div class="seeAlsoStyle"><a href="Overload_Rhino_Geometry_Plane__ctor.htm">Plane Overload</a></div><div class="seeAlsoStyle"><a href="N_Rhino_Geometry.htm">Rhino.Geometry Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.17.22102.05000 (Last updated: 4/21/2022)<br />Copyright © 2009-2022 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>