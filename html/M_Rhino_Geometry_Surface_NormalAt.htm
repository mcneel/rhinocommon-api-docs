<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Surface.NormalAt Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="NormalAt method" /><meta name="System.Keywords" content="Surface.NormalAt method" /><meta name="Microsoft.Help.F1" content="Rhino.Geometry.Surface.NormalAt" /><meta name="Microsoft.Help.Id" content="M:Rhino.Geometry.Surface.NormalAt(System.Double,System.Double)" /><meta name="Description" content="Computes the surface normal at a point. This is the simple evaluation call - it does not support error handling." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Geometry" /><meta name="file" content="M_Rhino_Geometry_Surface_NormalAt" /><meta name="guid" content="M_Rhino_Geometry_Surface_NormalAt" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_Geometry.htm" title="Rhino.Geometry" tocid="N_Rhino_Geometry">Rhino.Geometry</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_Geometry_Surface.htm" title="Surface Class" tocid="T_Rhino_Geometry_Surface">Surface Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Rhino_Geometry_Surface.htm" title="Surface Methods" tocid="Methods_T_Rhino_Geometry_Surface">Surface Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_ClosestPoint.htm" title="ClosestPoint Method " tocid="M_Rhino_Geometry_Surface_ClosestPoint">ClosestPoint Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_ClosestSide.htm" title="ClosestSide Method " tocid="M_Rhino_Geometry_Surface_ClosestSide">ClosestSide Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_CreateExtrusion.htm" title="CreateExtrusion Method " tocid="M_Rhino_Geometry_Surface_CreateExtrusion">CreateExtrusion Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_CreateExtrusionToPoint.htm" title="CreateExtrusionToPoint Method " tocid="M_Rhino_Geometry_Surface_CreateExtrusionToPoint">CreateExtrusionToPoint Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Surface_CreatePeriodicSurface.htm" title="CreatePeriodicSurface Method " tocid="Overload_Rhino_Geometry_Surface_CreatePeriodicSurface">CreatePeriodicSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Surface_CreateRollingBallFillet.htm" title="CreateRollingBallFillet Method " tocid="Overload_Rhino_Geometry_Surface_CreateRollingBallFillet">CreateRollingBallFillet Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_CreateSoftEditSurface.htm" title="CreateSoftEditSurface Method " tocid="M_Rhino_Geometry_Surface_CreateSoftEditSurface">CreateSoftEditSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_CurvatureAt.htm" title="CurvatureAt Method " tocid="M_Rhino_Geometry_Surface_CurvatureAt">CurvatureAt Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_Degree.htm" title="Degree Method " tocid="M_Rhino_Geometry_Surface_Degree">Degree Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_Domain.htm" title="Domain Method " tocid="M_Rhino_Geometry_Surface_Domain">Domain Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_Evaluate.htm" title="Evaluate Method " tocid="M_Rhino_Geometry_Surface_Evaluate">Evaluate Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Surface_Extend.htm" title="Extend Method " tocid="Overload_Rhino_Geometry_Surface_Extend">Extend Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_Fit.htm" title="Fit Method " tocid="M_Rhino_Geometry_Surface_Fit">Fit Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_FrameAt.htm" title="FrameAt Method " tocid="M_Rhino_Geometry_Surface_FrameAt">FrameAt Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Surface_GetNextDiscontinuity.htm" title="GetNextDiscontinuity Method " tocid="Overload_Rhino_Geometry_Surface_GetNextDiscontinuity">GetNextDiscontinuity Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_GetNurbsFormParameterFromSurfaceParameter.htm" title="GetNurbsFormParameterFromSurfaceParameter Method " tocid="M_Rhino_Geometry_Surface_GetNurbsFormParameterFromSurfaceParameter">GetNurbsFormParameterFromSurfaceParameter Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_GetSpanVector.htm" title="GetSpanVector Method " tocid="M_Rhino_Geometry_Surface_GetSpanVector">GetSpanVector Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_GetSurfaceParameterFromNurbsFormParameter.htm" title="GetSurfaceParameterFromNurbsFormParameter Method " tocid="M_Rhino_Geometry_Surface_GetSurfaceParameterFromNurbsFormParameter">GetSurfaceParameterFromNurbsFormParameter Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_GetSurfaceSize.htm" title="GetSurfaceSize Method " tocid="M_Rhino_Geometry_Surface_GetSurfaceSize">GetSurfaceSize Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_HasNurbsForm.htm" title="HasNurbsForm Method " tocid="M_Rhino_Geometry_Surface_HasNurbsForm">HasNurbsForm Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_InterpolatedCurveOnSurface.htm" title="InterpolatedCurveOnSurface Method " tocid="M_Rhino_Geometry_Surface_InterpolatedCurveOnSurface">InterpolatedCurveOnSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Surface_InterpolatedCurveOnSurfaceUV.htm" title="InterpolatedCurveOnSurfaceUV Method " tocid="Overload_Rhino_Geometry_Surface_InterpolatedCurveOnSurfaceUV">InterpolatedCurveOnSurfaceUV Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_IsAtSeam.htm" title="IsAtSeam Method " tocid="M_Rhino_Geometry_Surface_IsAtSeam">IsAtSeam Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_IsAtSingularity.htm" title="IsAtSingularity Method " tocid="M_Rhino_Geometry_Surface_IsAtSingularity">IsAtSingularity Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_IsClosed.htm" title="IsClosed Method " tocid="M_Rhino_Geometry_Surface_IsClosed">IsClosed Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Surface_IsCone.htm" title="IsCone Method " tocid="Overload_Rhino_Geometry_Surface_IsCone">IsCone Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_IsContinuous.htm" title="IsContinuous Method " tocid="M_Rhino_Geometry_Surface_IsContinuous">IsContinuous Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Surface_IsCylinder.htm" title="IsCylinder Method " tocid="Overload_Rhino_Geometry_Surface_IsCylinder">IsCylinder Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Surface_IsIsoparametric.htm" title="IsIsoparametric Method " tocid="Overload_Rhino_Geometry_Surface_IsIsoparametric">IsIsoparametric Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_IsoCurve.htm" title="IsoCurve Method " tocid="M_Rhino_Geometry_Surface_IsoCurve">IsoCurve Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_IsPeriodic.htm" title="IsPeriodic Method " tocid="M_Rhino_Geometry_Surface_IsPeriodic">IsPeriodic Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Surface_IsPlanar.htm" title="IsPlanar Method " tocid="Overload_Rhino_Geometry_Surface_IsPlanar">IsPlanar Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_IsSingular.htm" title="IsSingular Method " tocid="M_Rhino_Geometry_Surface_IsSingular">IsSingular Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Surface_IsSphere.htm" title="IsSphere Method " tocid="Overload_Rhino_Geometry_Surface_IsSphere">IsSphere Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Surface_IsTorus.htm" title="IsTorus Method " tocid="Overload_Rhino_Geometry_Surface_IsTorus">IsTorus Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_LocalClosestPoint.htm" title="LocalClosestPoint Method " tocid="M_Rhino_Geometry_Surface_LocalClosestPoint">LocalClosestPoint Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_NormalAt.htm" title="NormalAt Method " tocid="M_Rhino_Geometry_Surface_NormalAt">NormalAt Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_Offset.htm" title="Offset Method " tocid="M_Rhino_Geometry_Surface_Offset">Offset Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_PointAt.htm" title="PointAt Method " tocid="M_Rhino_Geometry_Surface_PointAt">PointAt Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Surface_Pullback.htm" title="Pullback Method " tocid="Overload_Rhino_Geometry_Surface_Pullback">Pullback Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Surface_Pushup.htm" title="Pushup Method " tocid="Overload_Rhino_Geometry_Surface_Pushup">Pushup Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_Rebuild.htm" title="Rebuild Method " tocid="M_Rhino_Geometry_Surface_Rebuild">Rebuild Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_RebuildOneDirection.htm" title="RebuildOneDirection Method " tocid="M_Rhino_Geometry_Surface_RebuildOneDirection">RebuildOneDirection Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Surface_Reverse.htm" title="Reverse Method " tocid="Overload_Rhino_Geometry_Surface_Reverse">Reverse Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_SetDomain.htm" title="SetDomain Method " tocid="M_Rhino_Geometry_Surface_SetDomain">SetDomain Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_ShortPath.htm" title="ShortPath Method " tocid="M_Rhino_Geometry_Surface_ShortPath">ShortPath Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Surface_Smooth.htm" title="Smooth Method " tocid="Overload_Rhino_Geometry_Surface_Smooth">Smooth Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_SpanCount.htm" title="SpanCount Method " tocid="M_Rhino_Geometry_Surface_SpanCount">SpanCount Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_Split.htm" title="Split Method " tocid="M_Rhino_Geometry_Surface_Split">Split Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_ToBrep.htm" title="ToBrep Method " tocid="M_Rhino_Geometry_Surface_ToBrep">ToBrep Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Surface_ToNurbsSurface.htm" title="ToNurbsSurface Method " tocid="Overload_Rhino_Geometry_Surface_ToNurbsSurface">ToNurbsSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Surface_Transpose.htm" title="Transpose Method " tocid="Overload_Rhino_Geometry_Surface_Transpose">Transpose Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_Trim.htm" title="Trim Method " tocid="M_Rhino_Geometry_Surface_Trim">Trim Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Surface_TryGetCone.htm" title="TryGetCone Method " tocid="Overload_Rhino_Geometry_Surface_TryGetCone">TryGetCone Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Surface_TryGetCylinder.htm" title="TryGetCylinder Method " tocid="Overload_Rhino_Geometry_Surface_TryGetCylinder">TryGetCylinder Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Surface_TryGetFiniteCylinder.htm" title="TryGetFiniteCylinder Method " tocid="M_Rhino_Geometry_Surface_TryGetFiniteCylinder">TryGetFiniteCylinder Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Surface_TryGetPlane.htm" title="TryGetPlane Method " tocid="Overload_Rhino_Geometry_Surface_TryGetPlane">TryGetPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Surface_TryGetSphere.htm" title="TryGetSphere Method " tocid="Overload_Rhino_Geometry_Surface_TryGetSphere">TryGetSphere Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Surface_TryGetTorus.htm" title="TryGetTorus Method " tocid="Overload_Rhino_Geometry_Surface_TryGetTorus">TryGetTorus Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Surface_VariableOffset.htm" title="VariableOffset Method " tocid="Overload_Rhino_Geometry_Surface_VariableOffset">VariableOffset Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Surface<span id="LST58267C42_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST58267C42_0?cpp=::|nu=.");</script>NormalAt Method </h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Computes the surface normal at a point.
            <p>This is the simple evaluation call - it does not support error handling.</p></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino_Geometry.htm">Rhino.Geometry</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="since"><strong>Since:</strong> 5.0</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">Vector3d</span> <span class="identifier">NormalAt</span>(
	<span class="identifier">double</span> <span class="parameter">u</span>,
	<span class="identifier">double</span> <span class="parameter">v</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">NormalAt</span> ( 
	<span class="parameter">u</span> <span class="keyword">As</span> <span class="identifier">Double</span>,
	<span class="parameter">v</span> <span class="keyword">As</span> <span class="identifier">Double</span>
) <span class="keyword">As</span> <span class="identifier">Vector3d</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">u</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.double" target="_blank">System<span id="LST58267C42_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST58267C42_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Double</a><br />A U parameter.</dd><dt><span class="parameter">v</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.double" target="_blank">System<span id="LST58267C42_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST58267C42_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Double</a><br />A V parameter.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="T_Rhino_Geometry_Vector3d.htm">Vector3d</a><br />The normal.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBBBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','cs','1','2');return false;">C#</a></div><div id="ID0EBBBBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBBBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Rhino;
<span class="highlight-keyword">using</span> Rhino.Input.Custom;
<span class="highlight-keyword">using</span> Rhino.DocObjects;
<span class="highlight-keyword">using</span> Rhino.Commands;

<span class="highlight-keyword">namespace</span> examples_cs
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> NormalDirectionOfBrepFaceCommand : Command
  {
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">string</span> EnglishName { <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-literal">"csDetermineNormalDirectionOfBrepFace"</span>; } }

    <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> Result RunCommand(RhinoDoc doc, RunMode mode)
    {
      <span class="highlight-comment">// select a surface</span>
      <span class="highlight-keyword">var</span> gs = <span class="highlight-keyword">new</span> GetObject();
      gs.SetCommandPrompt(<span class="highlight-literal">"select surface"</span>);
      gs.GeometryFilter = ObjectType.Surface;
      gs.DisablePreSelect();
      gs.SubObjectSelect = <span class="highlight-keyword">false</span>;
      gs.Get();
      <span class="highlight-keyword">if</span> (gs.CommandResult() != Result.Success)
        <span class="highlight-keyword">return</span> gs.CommandResult();
      <span class="highlight-comment">// get the selected face</span>
      <span class="highlight-keyword">var</span> face = gs.Object(<span class="highlight-number">0</span>).Face();
      <span class="highlight-keyword">if</span> (face == <span class="highlight-keyword">null</span>)
        <span class="highlight-keyword">return</span> Result.Failure;

      <span class="highlight-comment">// pick a point on the surface.  Constain</span>
      <span class="highlight-comment">// picking to the face.</span>
      <span class="highlight-keyword">var</span> gp = <span class="highlight-keyword">new</span> GetPoint();
      gp.SetCommandPrompt(<span class="highlight-literal">"select point on surface"</span>);
      gp.Constrain(face, <span class="highlight-keyword">false</span>);
      gp.Get();
      <span class="highlight-keyword">if</span> (gp.CommandResult() != Result.Success)
        <span class="highlight-keyword">return</span> gp.CommandResult();

      <span class="highlight-comment">// get the parameters of the point on the</span>
      <span class="highlight-comment">// surface that is clesest to gp.Point()</span>
      <span class="highlight-keyword">double</span> u, v;
      <span class="highlight-keyword">if</span> (face.ClosestPoint(gp.Point(), <span class="highlight-keyword">out</span> u, <span class="highlight-keyword">out</span> v))
      {
        <span class="highlight-keyword">var</span> direction = face.NormalAt(u, v);
        <span class="highlight-keyword">if</span> (face.OrientationIsReversed)
          direction.Reverse();
        RhinoApp.WriteLine(
          <span class="highlight-keyword">string</span>.Format(
            <span class="highlight-literal">"Surface normal at uv({0:f},{1:f}) = ({2:f},{3:f},{4:f})"</span>, 
            u, v, direction.X, direction.Y, direction.Z));
      }
      <span class="highlight-keyword">return</span> Result.Success;
    }
  }
}</pre></div><div id="ID0EBBBBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Imports</span> Rhino
<span class="highlight-keyword">Imports</span> Rhino.Input.Custom
<span class="highlight-keyword">Imports</span> Rhino.DocObjects
<span class="highlight-keyword">Imports</span> Rhino.Commands

<span class="highlight-keyword">Namespace</span> examples_vb
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> NormalDirectionOfBrepFaceCommand
    <span class="highlight-keyword">Inherits</span> Command
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">ReadOnly</span> <span class="highlight-keyword">Property</span> EnglishName() <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span>
      <span class="highlight-keyword">Get</span>
        <span class="highlight-keyword">Return</span> <span class="highlight-literal">"vbDetermineNormDirectionOfBrepFace"</span>
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">Get</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Property</span>

    <span class="highlight-keyword">Protected</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">Function</span> RunCommand(doc <span class="highlight-keyword">As</span> RhinoDoc, mode <span class="highlight-keyword">As</span> RunMode) <span class="highlight-keyword">As</span> Result
      <span class="highlight-comment">' select a surface</span>
      <span class="highlight-keyword">Dim</span> gs = <span class="highlight-keyword">New</span> GetObject()
      gs.SetCommandPrompt(<span class="highlight-literal">"select surface"</span>)
      gs.GeometryFilter = ObjectType.Surface
      gs.DisablePreSelect()
      gs.SubObjectSelect = <span class="highlight-keyword">False</span>
      gs.[<span class="highlight-keyword">Get</span>]()
      <span class="highlight-keyword">If</span> gs.CommandResult() &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> gs.CommandResult()
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-comment">' get the selected face</span>
      <span class="highlight-keyword">Dim</span> face = gs.[<span class="highlight-keyword">Object</span>](<span class="highlight-number">0</span>).Face()
      <span class="highlight-keyword">If</span> face <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> Result.Failure
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-comment">' pick a point on the surface.  Constain</span>
      <span class="highlight-comment">' picking to the face.</span>
      <span class="highlight-keyword">Dim</span> gp = <span class="highlight-keyword">New</span> GetPoint()
      gp.SetCommandPrompt(<span class="highlight-literal">"select point on surface"</span>)
      gp.Constrain(face, <span class="highlight-keyword">False</span>)
      gp.[<span class="highlight-keyword">Get</span>]()
      <span class="highlight-keyword">If</span> gp.CommandResult() &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> gp.CommandResult()
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-comment">' get the parameters of the point on the</span>
      <span class="highlight-comment">' surface that is clesest to gp.Point()</span>
      <span class="highlight-keyword">Dim</span> u <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>, v <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>
      <span class="highlight-keyword">If</span> face.ClosestPoint(gp.Point(), u, v) <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Dim</span> direction = face.NormalAt(u, v)
        <span class="highlight-keyword">If</span> face.OrientationIsReversed <span class="highlight-keyword">Then</span>
          direction.Reverse()
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        RhinoApp.WriteLine(<span class="highlight-keyword">String</span>.Format(<span class="highlight-literal">"Surface normal at uv({0:f},{1:f}) = ({2:f},{3:f},{4:f})"</span>, u, v, direction.X, direction.Y, direction.Z))
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">Return</span> Result.Success
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Namespace</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBBBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAABBA_tab1" class="codeSnippetContainerTabSingle">Python</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">import</span> rhinoscriptsyntax <span class="highlight-keyword">as</span> rs
<span class="highlight-keyword">from</span> scriptcontext <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">import</span> Rhino
<span class="highlight-keyword">from</span> Rhino.Commands <span class="highlight-keyword">import</span> Result

<span class="highlight-keyword">def</span> RunCommand():
  <span class="highlight-comment"># select a surface</span>
  gs = Rhino.Input.Custom.GetObject()
  gs.SetCommandPrompt(<span class="highlight-literal">"select surface"</span>)
  gs.GeometryFilter = Rhino.DocObjects.ObjectType.Surface
  gs.DisablePreSelect()
  gs.SubObjectSelect = False
  gs.Get()
  <span class="highlight-keyword">if</span> gs.CommandResult() != Result.Success:
    <span class="highlight-keyword">return</span> gs.CommandResult()

  <span class="highlight-comment"># get the selected face</span>
  face = gs.Object(<span class="highlight-number">0</span>).Face()
  <span class="highlight-keyword">if</span> face == None:
    <span class="highlight-keyword">return</span>

  <span class="highlight-comment"># pick a point on the surface.  Constain</span>
  <span class="highlight-comment"># picking to the face.</span>
  gp = Rhino.Input.Custom.GetPoint()
  gp.SetCommandPrompt(<span class="highlight-literal">"select point on surface"</span>)
  gp.Constrain(face, False)
  gp.Get()
  <span class="highlight-keyword">if</span> gp.CommandResult() != Result.Success:
    <span class="highlight-keyword">return</span> gp.CommandResult()

  <span class="highlight-comment"># get the parameters of the point on the</span>
  <span class="highlight-comment"># surface that is clesest to gp.Point()</span>
  b, u, v = face.ClosestPoint(gp.Point())
  <span class="highlight-keyword">if</span> b:
    dir = face.NormalAt(u, v)
    <span class="highlight-keyword">if</span> face.OrientationIsReversed:
      dir.Reverse()
    <span class="highlight-keyword">print</span> <span class="highlight-literal">"Surface normal at uv({0:f},{1:f}) = ({2:f},{3:f},{4:f})"</span>.format(
        u, v, dir.X, dir.Y, dir.Z)

<span class="highlight-keyword">if</span> __name__ == <span class="highlight-literal">"__main__"</span>:
  RunCommand()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_Geometry_Surface.htm">Surface Class</a></div><div class="seeAlsoStyle"><a href="N_Rhino_Geometry.htm">Rhino.Geometry Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.18.22124.03000 (Last updated: 5/10/2022)<br />Copyright © 2009-2022 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>