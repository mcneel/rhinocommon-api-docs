<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>GetPoint.Constrain Method (Curve, Boolean)</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Rhino.Input.Custom.GetPoint.Constrain(Rhino.Geometry.Curve,System.Boolean)" /><meta name="Description" content="Constrains the picked point to lie on a curve." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Input.Custom" /><meta name="file" content="M_Rhino_Input_Custom_GetPoint_Constrain_3" /><meta name="guid" content="M_Rhino_Input_Custom_GetPoint_Constrain_3" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_Input_Custom.htm" title="Rhino.Input.Custom" tocid="N_Rhino_Input_Custom">Rhino.Input.Custom</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_Input_Custom_GetPoint.htm" title="GetPoint Class" tocid="T_Rhino_Input_Custom_GetPoint">GetPoint Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Rhino_Input_Custom_GetPoint.htm" title="GetPoint Methods" tocid="Methods_T_Rhino_Input_Custom_GetPoint">GetPoint Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Input_Custom_GetPoint_Constrain.htm" title="Constrain Method " tocid="Overload_Rhino_Input_Custom_GetPoint_Constrain">Constrain Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Input_Custom_GetPoint_Constrain.htm" title="Constrain Method (Arc)" tocid="M_Rhino_Input_Custom_GetPoint_Constrain">Constrain Method (Arc)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Input_Custom_GetPoint_Constrain_2.htm" title="Constrain Method (Circle)" tocid="M_Rhino_Input_Custom_GetPoint_Constrain_2">Constrain Method (Circle)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Input_Custom_GetPoint_Constrain_4.htm" title="Constrain Method (Cylinder)" tocid="M_Rhino_Input_Custom_GetPoint_Constrain_4">Constrain Method (Cylinder)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Input_Custom_GetPoint_Constrain_5.htm" title="Constrain Method (Line)" tocid="M_Rhino_Input_Custom_GetPoint_Constrain_5">Constrain Method (Line)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Input_Custom_GetPoint_Constrain_9.htm" title="Constrain Method (Sphere)" tocid="M_Rhino_Input_Custom_GetPoint_Constrain_9">Constrain Method (Sphere)</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Input_Custom_GetPoint_Constrain_3.htm" title="Constrain Method (Curve, Boolean)" tocid="M_Rhino_Input_Custom_GetPoint_Constrain_3">Constrain Method (Curve, Boolean)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Input_Custom_GetPoint_Constrain_6.htm" title="Constrain Method (Mesh, Boolean)" tocid="M_Rhino_Input_Custom_GetPoint_Constrain_6">Constrain Method (Mesh, Boolean)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Input_Custom_GetPoint_Constrain_7.htm" title="Constrain Method (Plane, Boolean)" tocid="M_Rhino_Input_Custom_GetPoint_Constrain_7">Constrain Method (Plane, Boolean)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Input_Custom_GetPoint_Constrain_8.htm" title="Constrain Method (Point3d, Point3d)" tocid="M_Rhino_Input_Custom_GetPoint_Constrain_8">Constrain Method (Point3d, Point3d)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Input_Custom_GetPoint_Constrain_10.htm" title="Constrain Method (Surface, Boolean)" tocid="M_Rhino_Input_Custom_GetPoint_Constrain_10">Constrain Method (Surface, Boolean)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Input_Custom_GetPoint_Constrain_1.htm" title="Constrain Method (Brep, Int32, Int32, Boolean)" tocid="M_Rhino_Input_Custom_GetPoint_Constrain_1">Constrain Method (Brep, Int32, Int32, Boolean)</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>GetPoint<span id="LSTC54FCB55_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC54FCB55_0?cpp=::|nu=.");</script>Constrain Method (Curve, Boolean)</h1></td></tr></table><span class="introStyle"></span> <div class="summary">Constrains the picked point to lie on a curve.</div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino_Input_Custom.htm">Rhino.Input.Custom</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="since"><strong>Since:</strong> 5.0</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">bool</span> <span class="identifier">Constrain</span>(
	<span class="identifier">Curve</span> <span class="parameter">curve</span>,
	<span class="identifier">bool</span> <span class="parameter">allowPickingPointOffObject</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">Constrain</span> ( 
	<span class="parameter">curve</span> <span class="keyword">As</span> <span class="identifier">Curve</span>,
	<span class="parameter">allowPickingPointOffObject</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>
) <span class="keyword">As</span> <span class="identifier">Boolean</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">curve</span></dt><dd>Type: <a href="T_Rhino_Geometry_Curve.htm">Rhino.Geometry<span id="LSTC54FCB55_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC54FCB55_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Curve</a><br />A curve to use as constraint.</dd><dt><span class="parameter">allowPickingPointOffObject</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.boolean" target="_blank">System<span id="LSTC54FCB55_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC54FCB55_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Boolean</a><br />
            defines whether the point pick is allowed to happen off object. When false,
            a "no no" cursor is shown when the cursor is not on the object. When true,
            a normal point picking cursor is used and the marker is visible also when
            the cursor is not on the object.
            </dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="https://docs.microsoft.com/dotnet/api/system.boolean" target="_blank">Boolean</a><br />true if constraint could be applied.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBBBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','cs','1','2');return false;">C#</a></div><div id="ID0EBBBBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBBBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Rhino.Commands;
<span class="highlight-keyword">using</span> Rhino.DocObjects;

<span class="highlight-keyword">partial</span> <span class="highlight-keyword">class</span> Examples
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> Rhino.Commands.Result InsertKnot(Rhino.RhinoDoc doc)
  {
    <span class="highlight-keyword">const</span> ObjectType filter = Rhino.DocObjects.ObjectType.Curve;
    Rhino.DocObjects.ObjRef objref;
    Result rc = Rhino.Input.RhinoGet.GetOneObject(<span class="highlight-literal">"Select curve for knot insertion"</span>, <span class="highlight-keyword">false</span>, filter, <span class="highlight-keyword">out</span> objref);
    <span class="highlight-keyword">if</span> (rc != Rhino.Commands.Result.Success)
      <span class="highlight-keyword">return</span> rc;
    Rhino.Geometry.Curve curve = objref.Curve();
    <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> == curve)
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure;
    Rhino.Geometry.NurbsCurve nurb = curve.ToNurbsCurve();
    <span class="highlight-keyword">if</span> (<span class="highlight-keyword">null</span> == nurb)
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure;

    Rhino.Input.Custom.GetPoint gp = <span class="highlight-keyword">new</span> Rhino.Input.Custom.GetPoint();
    gp.SetCommandPrompt(<span class="highlight-literal">"Point on curve to add knot"</span>);
    gp.Constrain(nurb, <span class="highlight-keyword">false</span>);
    gp.Get();
    <span class="highlight-keyword">if</span> (gp.CommandResult() == Rhino.Commands.Result.Success)
    {
      <span class="highlight-keyword">double</span> t;
      Rhino.Geometry.Curve crv = gp.PointOnCurve(<span class="highlight-keyword">out</span> t);
      <span class="highlight-keyword">if</span>( crv!=<span class="highlight-keyword">null</span> &amp;&amp; nurb.Knots.InsertKnot(t) )
      {
        doc.Objects.Replace(objref, nurb);
        doc.Views.Redraw();
      }
    }
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success;  
  }
}</pre></div><div id="ID0EBBBBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Imports</span> Rhino.DocObjects

<span class="highlight-keyword">Partial</span> <span class="highlight-keyword">Class</span> Examples
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Function</span> InsertKnot(<span class="highlight-keyword">ByVal</span> doc <span class="highlight-keyword">As</span> Rhino.RhinoDoc) <span class="highlight-keyword">As</span> Rhino.Commands.Result
    <span class="highlight-keyword">Dim</span> rc <span class="highlight-keyword">As</span> Rhino.Commands.Result
    <span class="highlight-keyword">Const</span> filter <span class="highlight-keyword">As</span> ObjectType = Rhino.DocObjects.ObjectType.Curve
    <span class="highlight-keyword">Dim</span> objref <span class="highlight-keyword">As</span> Rhino.DocObjects.ObjRef = <span class="highlight-keyword">Nothing</span>
    rc = Rhino.Input.RhinoGet.GetOneObject(<span class="highlight-literal">"Select curve for knot insertion"</span>, <span class="highlight-keyword">False</span>, filter, objref)
    <span class="highlight-keyword">If</span> rc &lt;&gt; Rhino.Commands.Result.Success <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> rc
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Dim</span> curve <span class="highlight-keyword">As</span> Rhino.Geometry.Curve = objref.Curve()
    <span class="highlight-keyword">If</span> curve <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Failure
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Dim</span> nurb <span class="highlight-keyword">As</span> Rhino.Geometry.NurbsCurve = curve.ToNurbsCurve()
    <span class="highlight-keyword">If</span> nurb <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Failure
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Dim</span> gp <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Rhino.Input.Custom.GetPoint()
    gp.SetCommandPrompt(<span class="highlight-literal">"Point on curve to add knot"</span>)
    gp.Constrain(nurb, <span class="highlight-keyword">False</span>)
    gp.[<span class="highlight-keyword">Get</span>]()
    <span class="highlight-keyword">If</span> gp.CommandResult() = Rhino.Commands.Result.Success <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Dim</span> t <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>
      <span class="highlight-keyword">Dim</span> crv <span class="highlight-keyword">As</span> Rhino.Geometry.Curve = gp.PointOnCurve(t)
      <span class="highlight-keyword">If</span> crv <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">AndAlso</span> nurb.Knots.InsertKnot(t) <span class="highlight-keyword">Then</span>
        doc.Objects.Replace(objref, nurb)
        doc.Views.Redraw()
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Success
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBBBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAABBA_tab1" class="codeSnippetContainerTabSingle">Python</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">import</span> Rhino
<span class="highlight-keyword">import</span> scriptcontext

<span class="highlight-keyword">def</span> InsertKnot():
    filter = Rhino.DocObjects.ObjectType.Curve
    rc, objref = Rhino.Input.RhinoGet.GetOneObject(<span class="highlight-literal">"Select curve for knot insertion"</span>, False, filter)
    <span class="highlight-keyword">if</span> rc != Rhino.Commands.Result.Success: <span class="highlight-keyword">return</span> rc

    curve = objref.Curve()
    <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> curve: <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure
    nurb = curve.ToNurbsCurve()
    <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> nurb: <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure

    gp = Rhino.Input.Custom.GetPoint()
    gp.SetCommandPrompt(<span class="highlight-literal">"Point on curve to add knot"</span>)
    gp.Constrain(nurb, False)
    gp.Get()
    <span class="highlight-keyword">if</span> gp.CommandResult() == Rhino.Commands.Result.Success:
        crv, t = gp.PointOnCurve()
        <span class="highlight-keyword">if</span> crv <span class="highlight-keyword">and</span> nurb.Knots.InsertKnot(t):
            scriptcontext.doc.Objects.Replace(objref, nurb)
            scriptcontext.doc.Views.Redraw()
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success

<span class="highlight-keyword">if</span> __name__==<span class="highlight-literal">"__main__"</span>:
    InsertKnot()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_Input_Custom_GetPoint.htm">GetPoint Class</a></div><div class="seeAlsoStyle"><a href="Overload_Rhino_Input_Custom_GetPoint_Constrain.htm">Constrain Overload</a></div><div class="seeAlsoStyle"><a href="N_Rhino_Input_Custom.htm">Rhino.Input.Custom Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.17.22102.05000 (Last updated: 4/21/2022)<br />Copyright © 2009-2022 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>