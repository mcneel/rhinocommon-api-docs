<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Curve.DivideByLength Method (Double, Boolean, Boolean)</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Rhino.Geometry.Curve.DivideByLength(System.Double,System.Boolean,System.Boolean)" /><meta name="Description" content="Divide the curve into specific length segments." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Geometry" /><meta name="file" content="M_Rhino_Geometry_Curve_DivideByLength_2" /><meta name="guid" content="M_Rhino_Geometry_Curve_DivideByLength_2" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_Geometry.htm" title="Rhino.Geometry" tocid="N_Rhino_Geometry">Rhino.Geometry</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_Geometry_Curve.htm" title="Curve Class" tocid="T_Rhino_Geometry_Curve">Curve Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Rhino_Geometry_Curve.htm" title="Curve Methods" tocid="Methods_T_Rhino_Geometry_Curve">Curve Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Curve_DivideByLength.htm" title="DivideByLength Method " tocid="Overload_Rhino_Geometry_Curve_DivideByLength">DivideByLength Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_DivideByLength.htm" title="DivideByLength Method (Double, Boolean)" tocid="M_Rhino_Geometry_Curve_DivideByLength">DivideByLength Method (Double, Boolean)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_DivideByLength_1.htm" title="DivideByLength Method (Double, Boolean, Point3d[])" tocid="M_Rhino_Geometry_Curve_DivideByLength_1">DivideByLength Method (Double, Boolean, Point3d[])</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_DivideByLength_2.htm" title="DivideByLength Method (Double, Boolean, Boolean)" tocid="M_Rhino_Geometry_Curve_DivideByLength_2">DivideByLength Method (Double, Boolean, Boolean)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Curve_DivideByLength_3.htm" title="DivideByLength Method (Double, Boolean, Boolean, Point3d[])" tocid="M_Rhino_Geometry_Curve_DivideByLength_3">DivideByLength Method (Double, Boolean, Boolean, Point3d[])</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Curve<span id="LST3E31F489_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3E31F489_0?cpp=::|nu=.");</script>DivideByLength Method (Double, Boolean, Boolean)</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Divide the curve into specific length segments.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino_Geometry.htm">Rhino.Geometry</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="since"><strong>Since:</strong> 6.0</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">double</span>[] <span class="identifier">DivideByLength</span>(
	<span class="identifier">double</span> <span class="parameter">segmentLength</span>,
	<span class="identifier">bool</span> <span class="parameter">includeEnds</span>,
	<span class="identifier">bool</span> <span class="parameter">reverse</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">DivideByLength</span> ( 
	<span class="parameter">segmentLength</span> <span class="keyword">As</span> <span class="identifier">Double</span>,
	<span class="parameter">includeEnds</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>,
	<span class="parameter">reverse</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>
) <span class="keyword">As</span> <span class="identifier">Double</span>()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">segmentLength</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.double" target="_blank">System<span id="LST3E31F489_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3E31F489_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Double</a><br />The length of each and every segment (except potentially the last one).</dd><dt><span class="parameter">includeEnds</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.boolean" target="_blank">System<span id="LST3E31F489_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3E31F489_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Boolean</a><br />If true, then the point at the start of the first division segment is returned.</dd><dt><span class="parameter">reverse</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.boolean" target="_blank">System<span id="LST3E31F489_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3E31F489_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Boolean</a><br />If true, then the divisions start from the end of the curve.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <span id="LST3E31F489_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3E31F489_4?cpp=array&lt;");</script><a href="https://docs.microsoft.com/dotnet/api/system.double" target="_blank">Double</a><span id="LST3E31F489_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3E31F489_5?cpp=&gt;|vb=()|nu=[]");</script><br />Array containing division curve parameters if successful, null on failure.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBBBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','cs','1','2');return false;">C#</a></div><div id="ID0EBBBBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBBBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Rhino.DocObjects;

<span class="highlight-keyword">partial</span> <span class="highlight-keyword">class</span> Examples
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> Rhino.Commands.Result DivideByLengthPoints(Rhino.RhinoDoc doc)
  {
    <span class="highlight-keyword">const</span> ObjectType filter = Rhino.DocObjects.ObjectType.Curve; 
    Rhino.DocObjects.ObjRef objref;
    Rhino.Commands.Result rc = Rhino.Input.RhinoGet.GetOneObject(<span class="highlight-literal">"Select curve to divide"</span>, <span class="highlight-keyword">false</span>, filter, <span class="highlight-keyword">out</span> objref);
    <span class="highlight-keyword">if</span> (rc != Rhino.Commands.Result.Success || objref == <span class="highlight-keyword">null</span>)
      <span class="highlight-keyword">return</span> rc;

    Rhino.Geometry.Curve crv = objref.Curve();
    <span class="highlight-keyword">if</span> (crv == <span class="highlight-keyword">null</span> || crv.IsShort(Rhino.RhinoMath.ZeroTolerance))
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure;

    <span class="highlight-keyword">double</span> crv_length = crv.GetLength();
    <span class="highlight-keyword">string</span> s = <span class="highlight-keyword">string</span>.Format(<span class="highlight-literal">"Curve length is {0:f3}. Segment length"</span>, crv_length);

    <span class="highlight-keyword">double</span> seg_length = crv_length / <span class="highlight-number">2.0</span>;
    rc = Rhino.Input.RhinoGet.GetNumber(s, <span class="highlight-keyword">false</span>, <span class="highlight-keyword">ref</span> seg_length, <span class="highlight-number">0</span>, crv_length);
    <span class="highlight-keyword">if</span> (rc != Rhino.Commands.Result.Success)
      <span class="highlight-keyword">return</span> rc;

    Rhino.Geometry.Point3d[] points;
    crv.DivideByLength(seg_length, <span class="highlight-keyword">true</span>, <span class="highlight-keyword">out</span> points);
    <span class="highlight-keyword">if</span> (points == <span class="highlight-keyword">null</span>)
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure;

    <span class="highlight-keyword">foreach</span> (Rhino.Geometry.Point3d point <span class="highlight-keyword">in</span> points)
      doc.Objects.AddPoint(point);

    doc.Views.Redraw();
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success;
  }
}</pre></div><div id="ID0EBBBBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Imports</span> Rhino.DocObjects

<span class="highlight-keyword">Partial</span> <span class="highlight-keyword">Class</span> Examples
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Function</span> DivideByLengthPoints(<span class="highlight-keyword">ByVal</span> doc <span class="highlight-keyword">As</span> Rhino.RhinoDoc) <span class="highlight-keyword">As</span> Rhino.Commands.Result
    <span class="highlight-keyword">Const</span> filter <span class="highlight-keyword">As</span> ObjectType = Rhino.DocObjects.ObjectType.Curve
    <span class="highlight-keyword">Dim</span> objref <span class="highlight-keyword">As</span> Rhino.DocObjects.ObjRef = <span class="highlight-keyword">Nothing</span>
    <span class="highlight-keyword">Dim</span> rc <span class="highlight-keyword">As</span> Rhino.Commands.Result = Rhino.Input.RhinoGet.GetOneObject(<span class="highlight-literal">"Select curve to divide"</span>, <span class="highlight-keyword">False</span>, filter, objref)
    <span class="highlight-keyword">If</span> rc &lt;&gt; Rhino.Commands.Result.Success <span class="highlight-keyword">OrElse</span> objref <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> rc
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Dim</span> crv <span class="highlight-keyword">As</span> Rhino.Geometry.Curve = objref.Curve()
    <span class="highlight-keyword">If</span> crv <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">OrElse</span> crv.IsShort(Rhino.RhinoMath.ZeroTolerance) <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Failure
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Dim</span> crv_length <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = crv.GetLength()
    <span class="highlight-keyword">Dim</span> s <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = <span class="highlight-keyword">String</span>.Format(<span class="highlight-literal">"Curve length is {0:f3}. Segment length"</span>, crv_length)

    <span class="highlight-keyword">Dim</span> seg_length <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> = crv_length / <span class="highlight-number">2.0</span>
    rc = Rhino.Input.RhinoGet.GetNumber(s, <span class="highlight-keyword">False</span>, seg_length, <span class="highlight-number">0</span>, crv_length)
    <span class="highlight-keyword">If</span> rc &lt;&gt; Rhino.Commands.Result.Success <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> rc
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Dim</span> points <span class="highlight-keyword">As</span> Rhino.Geometry.Point3d() = <span class="highlight-keyword">Nothing</span>
    crv.DivideByLength(seg_length, <span class="highlight-keyword">True</span>, points)
    <span class="highlight-keyword">If</span> points <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Failure
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> point <span class="highlight-keyword">As</span> Rhino.Geometry.Point3d <span class="highlight-keyword">In</span> points
      doc.Objects.AddPoint(point)
    <span class="highlight-keyword">Next</span>

    doc.Views.Redraw()
    <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Success
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBBBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAABBA_tab1" class="codeSnippetContainerTabSingle">Python</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">import</span> Rhino
<span class="highlight-keyword">import</span> scriptcontext

<span class="highlight-keyword">def</span> DivideByLengthPoints():
    filter = Rhino.DocObjects.ObjectType.Curve
    rc, objref = Rhino.Input.RhinoGet.GetOneObject(<span class="highlight-literal">"Select curve to divide"</span>, False, filter)
    <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> objref <span class="highlight-keyword">or</span> rc!=Rhino.Commands.Result.Success: <span class="highlight-keyword">return</span> rc

    crv = objref.Curve()
    <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> crv <span class="highlight-keyword">or</span> crv.IsShort(Rhino.RhinoMath.ZeroTolerance):
        <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure

    crv_length = crv.GetLength()
    s = <span class="highlight-literal">"Curve length is {0:.3f}. Segment length"</span>.format(crv_length)
    seg_length = crv_length / <span class="highlight-number">2.0</span>
    rc, length = Rhino.Input.RhinoGet.GetNumber(s, False, seg_length, <span class="highlight-number">0</span>, crv_length)
    <span class="highlight-keyword">if</span> rc!=Rhino.Commands.Result.Success: <span class="highlight-keyword">return</span> rc
    t_vals = crv.DivideByLength(length, True)
    <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> t_vals:
        <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure

    [scriptcontext.doc.Objects.AddPoint(crv.PointAt(t)) <span class="highlight-keyword">for</span> t <span class="highlight-keyword">in</span> t_vals]
    scriptcontext.doc.Views.Redraw()
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success

<span class="highlight-keyword">if</span> __name__==<span class="highlight-literal">"__main__"</span>:
    DivideByLengthPoints()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_Geometry_Curve.htm">Curve Class</a></div><div class="seeAlsoStyle"><a href="Overload_Rhino_Geometry_Curve_DivideByLength.htm">DivideByLength Overload</a></div><div class="seeAlsoStyle"><a href="N_Rhino_Geometry.htm">Rhino.Geometry Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.17.22102.05000 (Last updated: 4/21/2022)<br />Copyright © 2009-2022 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>