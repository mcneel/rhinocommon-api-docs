<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Layer.IsValidName Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="IsValidName method" /><meta name="System.Keywords" content="Layer.IsValidName method" /><meta name="Microsoft.Help.F1" content="Rhino.DocObjects.Layer.IsValidName" /><meta name="Microsoft.Help.Id" content="M:Rhino.DocObjects.Layer.IsValidName(System.String)" /><meta name="Description" content="Determines if a given string is valid for a layer name." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.DocObjects" /><meta name="file" content="M_Rhino_DocObjects_Layer_IsValidName" /><meta name="guid" content="M_Rhino_DocObjects_Layer_IsValidName" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_DocObjects.htm" title="Rhino.DocObjects" tocid="N_Rhino_DocObjects">Rhino.DocObjects</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_DocObjects_Layer.htm" title="Layer Class" tocid="T_Rhino_DocObjects_Layer">Layer Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Rhino_DocObjects_Layer.htm" title="Layer Methods" tocid="Methods_T_Rhino_DocObjects_Layer">Layer Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_CopyAttributesFrom.htm" title="CopyAttributesFrom Method " tocid="M_Rhino_DocObjects_Layer_CopyAttributesFrom">CopyAttributesFrom Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_Default.htm" title="Default Method " tocid="M_Rhino_DocObjects_Layer_Default">Default Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_DeletePerViewportColor.htm" title="DeletePerViewportColor Method " tocid="M_Rhino_DocObjects_Layer_DeletePerViewportColor">DeletePerViewportColor Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_DeletePerViewportPlotColor.htm" title="DeletePerViewportPlotColor Method " tocid="M_Rhino_DocObjects_Layer_DeletePerViewportPlotColor">DeletePerViewportPlotColor Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_DeletePerViewportPlotWeight.htm" title="DeletePerViewportPlotWeight Method " tocid="M_Rhino_DocObjects_Layer_DeletePerViewportPlotWeight">DeletePerViewportPlotWeight Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_DeletePerViewportSettings.htm" title="DeletePerViewportSettings Method " tocid="M_Rhino_DocObjects_Layer_DeletePerViewportSettings">DeletePerViewportSettings Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_DeletePerViewportVisible.htm" title="DeletePerViewportVisible Method " tocid="M_Rhino_DocObjects_Layer_DeletePerViewportVisible">DeletePerViewportVisible Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_DocObjects_Layer_Equals.htm" title="Equals Method " tocid="Overload_Rhino_DocObjects_Layer_Equals">Equals Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_GetChildren.htm" title="GetChildren Method " tocid="M_Rhino_DocObjects_Layer_GetChildren">GetChildren Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_GetDefaultLayerProperties.htm" title="GetDefaultLayerProperties Method " tocid="M_Rhino_DocObjects_Layer_GetDefaultLayerProperties">GetDefaultLayerProperties Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_GetHashCode.htm" title="GetHashCode Method " tocid="M_Rhino_DocObjects_Layer_GetHashCode">GetHashCode Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_DocObjects_Layer_GetLeafName.htm" title="GetLeafName Method " tocid="Overload_Rhino_DocObjects_Layer_GetLeafName">GetLeafName Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_DocObjects_Layer_GetParentName.htm" title="GetParentName Method " tocid="Overload_Rhino_DocObjects_Layer_GetParentName">GetParentName Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_GetPersistentLocking.htm" title="GetPersistentLocking Method " tocid="M_Rhino_DocObjects_Layer_GetPersistentLocking">GetPersistentLocking Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_GetPersistentVisibility.htm" title="GetPersistentVisibility Method " tocid="M_Rhino_DocObjects_Layer_GetPersistentVisibility">GetPersistentVisibility Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_GetUserString.htm" title="GetUserString Method " tocid="M_Rhino_DocObjects_Layer_GetUserString">GetUserString Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_GetUserStrings.htm" title="GetUserStrings Method " tocid="M_Rhino_DocObjects_Layer_GetUserStrings">GetUserStrings Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_HasPerViewportSettings.htm" title="HasPerViewportSettings Method " tocid="M_Rhino_DocObjects_Layer_HasPerViewportSettings">HasPerViewportSettings Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_DocObjects_Layer_IsChildOf.htm" title="IsChildOf Method " tocid="Overload_Rhino_DocObjects_Layer_IsChildOf">IsChildOf Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_DocObjects_Layer_IsParentOf.htm" title="IsParentOf Method " tocid="Overload_Rhino_DocObjects_Layer_IsParentOf">IsParentOf Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_IsValidName.htm" title="IsValidName Method " tocid="M_Rhino_DocObjects_Layer_IsValidName">IsValidName Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_PerViewportColor.htm" title="PerViewportColor Method " tocid="M_Rhino_DocObjects_Layer_PerViewportColor">PerViewportColor Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_PerViewportIsVisible.htm" title="PerViewportIsVisible Method " tocid="M_Rhino_DocObjects_Layer_PerViewportIsVisible">PerViewportIsVisible Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_PerViewportPersistentVisibility.htm" title="PerViewportPersistentVisibility Method " tocid="M_Rhino_DocObjects_Layer_PerViewportPersistentVisibility">PerViewportPersistentVisibility Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_PerViewportPlotColor.htm" title="PerViewportPlotColor Method " tocid="M_Rhino_DocObjects_Layer_PerViewportPlotColor">PerViewportPlotColor Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_PerViewportPlotWeight.htm" title="PerViewportPlotWeight Method " tocid="M_Rhino_DocObjects_Layer_PerViewportPlotWeight">PerViewportPlotWeight Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_SetPersistentLocking.htm" title="SetPersistentLocking Method " tocid="M_Rhino_DocObjects_Layer_SetPersistentLocking">SetPersistentLocking Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_SetPersistentVisibility.htm" title="SetPersistentVisibility Method " tocid="M_Rhino_DocObjects_Layer_SetPersistentVisibility">SetPersistentVisibility Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_SetPerViewportColor.htm" title="SetPerViewportColor Method " tocid="M_Rhino_DocObjects_Layer_SetPerViewportColor">SetPerViewportColor Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_SetPerViewportPersistentVisibility.htm" title="SetPerViewportPersistentVisibility Method " tocid="M_Rhino_DocObjects_Layer_SetPerViewportPersistentVisibility">SetPerViewportPersistentVisibility Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_SetPerViewportPlotColor.htm" title="SetPerViewportPlotColor Method " tocid="M_Rhino_DocObjects_Layer_SetPerViewportPlotColor">SetPerViewportPlotColor Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_SetPerViewportPlotWeight.htm" title="SetPerViewportPlotWeight Method " tocid="M_Rhino_DocObjects_Layer_SetPerViewportPlotWeight">SetPerViewportPlotWeight Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_SetPerViewportVisible.htm" title="SetPerViewportVisible Method " tocid="M_Rhino_DocObjects_Layer_SetPerViewportVisible">SetPerViewportVisible Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_SetUserString.htm" title="SetUserString Method " tocid="M_Rhino_DocObjects_Layer_SetUserString">SetUserString Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_ToString.htm" title="ToString Method " tocid="M_Rhino_DocObjects_Layer_ToString">ToString Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_UnsetPersistentLocking.htm" title="UnsetPersistentLocking Method " tocid="M_Rhino_DocObjects_Layer_UnsetPersistentLocking">UnsetPersistentLocking Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_UnsetPersistentVisibility.htm" title="UnsetPersistentVisibility Method " tocid="M_Rhino_DocObjects_Layer_UnsetPersistentVisibility">UnsetPersistentVisibility Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_DocObjects_Layer_UnsetPerViewportPersistentVisibility.htm" title="UnsetPerViewportPersistentVisibility Method " tocid="M_Rhino_DocObjects_Layer_UnsetPerViewportPersistentVisibility">UnsetPerViewportPersistentVisibility Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Layer<span id="LSTFBFFABAA_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTFBFFABAA_0?cpp=::|nu=.");</script>IsValidName Method </h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Determines if a given string is valid for a layer name.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino_DocObjects.htm">Rhino.DocObjects</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="since"><strong>Since:</strong> 5.0</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">bool</span> <span class="identifier">IsValidName</span>(
	<span class="identifier">string</span> <span class="parameter">name</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">IsValidName</span> ( 
	<span class="parameter">name</span> <span class="keyword">As</span> <span class="identifier">String</span>
) <span class="keyword">As</span> <span class="identifier">Boolean</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">name</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.string" target="_blank">System<span id="LSTFBFFABAA_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTFBFFABAA_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>String</a><br />A name to be validated.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="https://docs.microsoft.com/dotnet/api/system.boolean" target="_blank">Boolean</a><br />true if the name is valid for a layer name; otherwise, false.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBBBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','cs','1','2');return false;">C#</a></div><div id="ID0EBBBBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBBBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">partial</span> <span class="highlight-keyword">class</span> Examples
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> Rhino.Commands.Result AddLayer(Rhino.RhinoDoc doc)
  {
    <span class="highlight-comment">// Cook up an unused layer name</span>
    <span class="highlight-keyword">string</span> unused_name = doc.Layers.GetUnusedLayerName(<span class="highlight-keyword">false</span>);

    <span class="highlight-comment">// Prompt the user to enter a layer name</span>
    Rhino.Input.Custom.GetString gs = <span class="highlight-keyword">new</span> Rhino.Input.Custom.GetString();
    gs.SetCommandPrompt(<span class="highlight-literal">"Name of layer to add"</span>);
    gs.SetDefaultString(unused_name);
    gs.AcceptNothing(<span class="highlight-keyword">true</span>);
    gs.Get();
    <span class="highlight-keyword">if</span> (gs.CommandResult() != Rhino.Commands.Result.Success)
      <span class="highlight-keyword">return</span> gs.CommandResult();

    <span class="highlight-comment">// Was a layer named entered?</span>
    <span class="highlight-keyword">string</span> layer_name = gs.StringResult().Trim();
    <span class="highlight-keyword">if</span> (<span class="highlight-keyword">string</span>.IsNullOrEmpty(layer_name))
    {
      Rhino.RhinoApp.WriteLine(<span class="highlight-literal">"Layer name cannot be blank."</span>);
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Cancel;
    }

    <span class="highlight-comment">// Is the layer name valid?</span>
    <span class="highlight-keyword">if</span> (!Rhino.DocObjects.Layer.IsValidName(layer_name))
    {
      Rhino.RhinoApp.WriteLine(layer_name + <span class="highlight-literal">" is not a valid layer name."</span>);
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Cancel;
    }

    <span class="highlight-comment">// Does a layer with the same name already exist?</span>
    <span class="highlight-keyword">int</span> layer_index = doc.Layers.Find(layer_name, <span class="highlight-keyword">true</span>);
    <span class="highlight-keyword">if</span> (layer_index &gt;= <span class="highlight-number">0</span>)
    {
      Rhino.RhinoApp.WriteLine(<span class="highlight-literal">"A layer with the name {0} already exists."</span>, layer_name);
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Cancel;
    }

    <span class="highlight-comment">// Add a new layer to the document</span>
    layer_index = doc.Layers.Add(layer_name, System.Drawing.Color.Black);
    <span class="highlight-keyword">if</span> (layer_index &lt; <span class="highlight-number">0</span>)
    {
      Rhino.RhinoApp.WriteLine(<span class="highlight-literal">"Unable to add {0} layer."</span>, layer_name);
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure;
    }
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success;
  }
}</pre></div><div id="ID0EBBBBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Partial</span> <span class="highlight-keyword">Class</span> Examples
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Function</span> AddLayer(<span class="highlight-keyword">ByVal</span> doc <span class="highlight-keyword">As</span> Rhino.RhinoDoc) <span class="highlight-keyword">As</span> Rhino.Commands.Result
    <span class="highlight-comment">' Cook up an unused layer name</span>
    <span class="highlight-keyword">Dim</span> unused_name <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = doc.Layers.GetUnusedLayerName(<span class="highlight-keyword">False</span>)

    <span class="highlight-comment">' Prompt the user to enter a layer name</span>
    <span class="highlight-keyword">Dim</span> gs <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Rhino.Input.Custom.GetString()
    gs.SetCommandPrompt(<span class="highlight-literal">"Name of layer to add"</span>)
    gs.SetDefaultString(unused_name)
    gs.AcceptNothing(<span class="highlight-keyword">True</span>)
    gs.<span class="highlight-keyword">Get</span>()
    <span class="highlight-keyword">If</span> gs.CommandResult() &lt;&gt; Rhino.Commands.Result.Success <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> gs.CommandResult()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Was a layer named entered?</span>
    <span class="highlight-keyword">Dim</span> layer_name <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span> = gs.StringResult().Trim()
    <span class="highlight-keyword">If</span> <span class="highlight-keyword">String</span>.IsNullOrEmpty(layer_name) <span class="highlight-keyword">Then</span>
      Rhino.RhinoApp.WriteLine(<span class="highlight-literal">"Layer name cannot be blank."</span>)
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Cancel
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Is the layer name valid?</span>
    <span class="highlight-keyword">If</span> <span class="highlight-keyword">Not</span> Rhino.DocObjects.Layer.IsValidName(layer_name) <span class="highlight-keyword">Then</span>
      Rhino.RhinoApp.WriteLine(layer_name &amp; <span class="highlight-literal">" is not a valid layer name."</span>)
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Cancel
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Does a layer with the same name already exist?</span>
    <span class="highlight-keyword">Dim</span> layer_index <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = doc.Layers.Find(layer_name, <span class="highlight-keyword">True</span>)
    <span class="highlight-keyword">If</span> layer_index &gt;= <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
      Rhino.RhinoApp.WriteLine(<span class="highlight-literal">"A layer with the name {0} already exists."</span>, layer_name)
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Cancel
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Add a new layer to the document</span>
    layer_index = doc.Layers.Add(layer_name, System.Drawing.Color.Black)
    <span class="highlight-keyword">If</span> layer_index &lt; <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
      Rhino.RhinoApp.WriteLine(<span class="highlight-literal">"Unable to add {0} layer."</span>, layer_name)
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Failure
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Success
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBBBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAABBA_tab1" class="codeSnippetContainerTabSingle">Python</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">import</span> Rhino
<span class="highlight-keyword">import</span> scriptcontext
<span class="highlight-keyword">import</span> System.Guid, System.Drawing.Color

<span class="highlight-keyword">def</span> AddLayer():
    <span class="highlight-comment"># Cook up an unused layer name</span>
    unused_name = scriptcontext.doc.Layers.GetUnusedLayerName(False)

    <span class="highlight-comment"># Prompt the user to enter a layer name</span>
    gs = Rhino.Input.Custom.GetString()
    gs.SetCommandPrompt(<span class="highlight-literal">"Name of layer to add"</span>)
    gs.SetDefaultString(unused_name)
    gs.AcceptNothing(True)
    gs.Get()
    <span class="highlight-keyword">if</span> gs.CommandResult()!=Rhino.Commands.Result.Success:
        <span class="highlight-keyword">return</span> gs.CommandResult()

    <span class="highlight-comment"># Was a layer named entered?</span>
    layer_name = gs.StringResult().Trim()
    <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> layer_name:
        <span class="highlight-keyword">print</span> <span class="highlight-literal">"Layer name cannot be blank."</span>
        <span class="highlight-keyword">return</span> Rhino.Commands.Result.Cancel

    <span class="highlight-comment"># Is the layer name valid?</span>
    <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> Rhino.DocObjects.Layer.IsValidName(layer_name):
        <span class="highlight-keyword">print</span> layer_name, <span class="highlight-literal">"is not a valid layer name."</span>
        <span class="highlight-keyword">return</span> Rhino.Commands.Result.Cancel

    <span class="highlight-comment"># Does a layer with the same name already exist?</span>
    layer_index = scriptcontext.doc.Layers.Find(layer_name, True)
    <span class="highlight-keyword">if</span> layer_index&gt;=<span class="highlight-number">0</span>:
        <span class="highlight-keyword">print</span> <span class="highlight-literal">"A layer with the name"</span>, layer_name, <span class="highlight-literal">"already exists."</span>
        <span class="highlight-keyword">return</span> Rhino.Commands.Result.Cancel

    <span class="highlight-comment"># Add a new layer to the document</span>
    layer_index = scriptcontext.doc.Layers.Add(layer_name, System.Drawing.Color.Black)
    <span class="highlight-keyword">if</span> layer_index&lt;<span class="highlight-number">0</span>:
        <span class="highlight-keyword">print</span> <span class="highlight-literal">"Unable to add"</span>, layer_name, <span class="highlight-literal">"layer."</span>
        <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure

    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success


<span class="highlight-keyword">if</span> __name__==<span class="highlight-literal">"__main__"</span>:
    AddLayer()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_DocObjects_Layer.htm">Layer Class</a></div><div class="seeAlsoStyle"><a href="N_Rhino_DocObjects.htm">Rhino.DocObjects Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.16.22067.13000 (Last updated: 3/10/2022)<br />Copyright © 2009-2022 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>