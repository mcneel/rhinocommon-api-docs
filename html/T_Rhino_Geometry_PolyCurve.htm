<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>PolyCurve Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="PolyCurve class" /><meta name="System.Keywords" content="Rhino.Geometry.PolyCurve class" /><meta name="Microsoft.Help.F1" content="Rhino.Geometry.PolyCurve" /><meta name="Microsoft.Help.Id" content="T:Rhino.Geometry.PolyCurve" /><meta name="Description" content="Represents a curve that is the result of joining several (possibly different) types of curves." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Geometry" /><meta name="file" content="T_Rhino_Geometry_PolyCurve" /><meta name="guid" content="T_Rhino_Geometry_PolyCurve" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_Geometry.htm" title="Rhino.Geometry" tocid="N_Rhino_Geometry">Rhino.Geometry</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_Geometry_PolyCurve.htm" title="PolyCurve Class" tocid="T_Rhino_Geometry_PolyCurve">PolyCurve Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_PolyCurve__ctor.htm" title="PolyCurve Constructor " tocid="Overload_Rhino_Geometry_PolyCurve__ctor">PolyCurve Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Properties_T_Rhino_Geometry_PolyCurve.htm" title="PolyCurve Properties" tocid="Properties_T_Rhino_Geometry_PolyCurve">PolyCurve Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Rhino_Geometry_PolyCurve.htm" title="PolyCurve Methods" tocid="Methods_T_Rhino_Geometry_PolyCurve">PolyCurve Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>PolyCurve Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Represents a curve that is the result of joining several (possibly different)
            types of curves.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">System<span id="LST1210ABE9_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <a href="T_Rhino_Runtime_CommonObject.htm">Rhino.Runtime<span id="LST1210ABE9_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>CommonObject</a><br />    <a href="T_Rhino_Geometry_GeometryBase.htm">Rhino.Geometry<span id="LST1210ABE9_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>GeometryBase</a><br />      <a href="T_Rhino_Geometry_Curve.htm">Rhino.Geometry<span id="LST1210ABE9_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Curve</a><br />        <span class="selflink">Rhino.Geometry<span id="LST1210ABE9_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>PolyCurve</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino_Geometry.htm">Rhino.Geometry</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','cs','1','2');return false;">C#</a></div><div id="ID1EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[<span class="identifier">SerializableAttribute</span>]
<span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">PolyCurve</span> : <span class="identifier">Curve</span></pre></div><div id="ID1EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">&lt;<span class="identifier">SerializableAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">PolyCurve</span>
	<span class="keyword">Inherits</span> <span class="identifier">Curve</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBCA");</script></div><p>The <span class="selflink">PolyCurve</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_PolyCurve__ctor.htm">PolyCurve<span id="LST1210ABE9_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_5?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Initializes a new, empty polycurve.
            </div></td></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Rhino_Geometry_PolyCurve__ctor_1.htm">PolyCurve(SerializationInfo, StreamingContext)</a></td><td><div class="summary">
            Protected constructor for internal use.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_Curve_Degree.htm">Degree</a></td><td><div class="summary">
            Gets the maximum algebraic degree of any span
            or a good estimate if curve spans are not algebraic.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_Curve_Dimension.htm">Dimension</a></td><td><div class="summary">
            Gets the dimension of the object.
            <p>The dimension is typically three. For parameter space trimming
            curves the dimension is two. In rare cases the dimension can
            be one or greater than three.</p></div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Runtime_CommonObject_Disposed.htm">Disposed</a></td><td><div class="summary">
            Indicates if this object has been disposed or the
            document it originally belonged to has been disposed.
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_Curve_Domain.htm">Domain</a></td><td><div class="summary">
            Gets or sets the domain of the curve.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_GeometryBase_HasBrepForm.htm">HasBrepForm</a></td><td><div class="summary">
            Returns true if the Brep.TryConvertBrep function will be successful for this object
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_PolyCurve_HasGap.htm">HasGap</a></td><td><div class="summary">
            This is a quick way to see if the curve has gaps between the sub curve segments. 
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Runtime_CommonObject_HasUserData.htm">HasUserData</a></td><td><div class="summary">
            Gets true if this class has any custom information attached to it through UserData.
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_Curve_IsClosed.htm">IsClosed</a></td><td><div class="summary">
            Gets a value indicating whether or not this curve is a closed curve.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_GeometryBase_IsDeformable.htm">IsDeformable</a></td><td><div class="summary">
            true if object can be accurately modified with "squishy" transformations like
            projections, shears, and non-uniform scaling.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_GeometryBase_IsDocumentControlled.htm">IsDocumentControlled</a></td><td><div class="summary">
            If true this object may not be modified. Any properties or functions that attempt
            to modify this object when it is set to "IsReadOnly" will throw a NotSupportedException.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_PolyCurve_IsNested.htm">IsNested</a></td><td><div class="summary">
            Gets a value indicating whether or not a PolyCurve contains nested PolyCurves.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_Curve_IsPeriodic.htm">IsPeriodic</a></td><td><div class="summary">
            Gets a value indicating whether or not this curve is considered to be Periodic.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_Curve_IsSubDFriendly.htm">IsSubDFriendly</a></td><td><div class="summary">
            Returns true if the curve is a cubic, non-rational, uniform NURBS curve that is either periodic or has natural end conditions.
            Othewise, false is returned.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Runtime_CommonObject_IsValid.htm">IsValid</a></td><td><div class="summary">Tests an object to see if it is valid.</div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_GeometryBase_ObjectType.htm">ObjectType</a></td><td><div class="summary">
            Useful for switch statements that need to differentiate between
            basic object types like points, curves, surfaces, and so on.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_Curve_PointAtEnd.htm">PointAtEnd</a></td><td><div class="summary">
            Evaluates point at the end of the curve.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_Curve_PointAtStart.htm">PointAtStart</a></td><td><div class="summary">
            Evaluates point at the start of the curve.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_PolyCurve_SegmentCount.htm">SegmentCount</a></td><td><div class="summary">
            Gets the number of segments that make up this Polycurve.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_Curve_SpanCount.htm">SpanCount</a></td><td><div class="summary">
            Gets the number of non-empty smooth (c-infinity) spans in the curve.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_Curve_TangentAtEnd.htm">TangentAtEnd</a></td><td><div class="summary">Evaluate unit tangent vector at the end of the curve.</div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_Curve_TangentAtStart.htm">TangentAtStart</a></td><td><div class="summary">Evaluates the unit tangent vector at the start of the curve.</div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Runtime_CommonObject_UserData.htm">UserData</a></td><td><div class="summary">
            List of custom information that is attached to this class.
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Runtime_CommonObject_UserDictionary.htm">UserDictionary</a></td><td><div class="summary">
            Dictionary of custom information attached to this class. The dictionary is actually user
            data provided as an easy to use sharable set of information.
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Geometry_GeometryBase_UserStringCount.htm">UserStringCount</a></td><td><div class="summary">
            Gets the amount of user strings.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_PolyCurve_Append.htm">Append(Arc)</a></td><td><div class="summary">
            Appends and matches the start of the arc to the end of polycurve. 
            This function will fail if the polycurve is closed or if SegmentCount &gt; 0 and the arc is closed.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_PolyCurve_Append_1.htm">Append(Curve)</a></td><td><div class="summary">
            Appends and matches the start of the curve to the end of polycurve. 
            This function will fail if the PolyCurve is closed or if SegmentCount &gt; 0 and the new segment is closed.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_PolyCurve_Append_2.htm">Append(Line)</a></td><td><div class="summary">
            Appends and matches the start of the line to the end of polycurve. 
            This function will fail if the polycurve is closed.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_PolyCurve_AppendSegment.htm">AppendSegment</a></td><td><div class="summary">
            Appends the curve to the polycurve without changing the new segment's geometry. 
            This function will fail if the PolyCurve is closed or if SegmentCount &gt; 0 and the new segment is closed.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_ChangeClosedCurveSeam.htm">ChangeClosedCurveSeam</a></td><td><div class="summary">
            If this curve is closed, then modify it so that the start/end point is at curve parameter t.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_ChangeDimension.htm">ChangeDimension</a></td><td><div class="summary">
            Changes the dimension of a curve.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_PolyCurve_CleanUp.htm">CleanUp</a></td><td><div class="summary">
            Removes any nesting of polycurves. If this polycurve has just a single segment, the segment is returned.
            If, after nest removal, there are adjacent segments which are polylines, they are combined into a single polyline.
            The new curve may have a different domain from this polycurve. If the start and end segments of a closed input are polylines,
            the result may have a different seam location since the start and end segments will be combined.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_ClosedCurveOrientation.htm">ClosedCurveOrientation<span id="LST1210ABE9_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_6?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Determines the orientation (counterclockwise or clockwise) of a closed, planar curve in the world XY plane.
            Only works with simple (no self intersections) closed, planar curves.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_ClosedCurveOrientation_1.htm">ClosedCurveOrientation(Plane)</a></td><td><div class="summary">
            Determines the orientation (counterclockwise or clockwise) of a closed, planar curve in a given plane.
            Only works with simple (no self intersections) closed, planar curves.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_ClosedCurveOrientation_2.htm">ClosedCurveOrientation(Transform)</a></td><td><div class="summary">
            Determines the orientation (counterclockwise or clockwise) of a closed, planar curve.
            Only works with simple (no self intersections) closed, planar curves.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_ClosedCurveOrientation_3.htm">ClosedCurveOrientation(Vector3d)</a></td><td><div class="summary">
            Determines the orientation (counterclockwise or clockwise) of a closed, planar curve in a given plane.
            Only works with simple (no self intersections) closed, planar curves.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_ClosestPoint.htm">ClosestPoint(Point3d, Double<span id="LST1210ABE9_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_7?cpp=%");</script>)</a></td><td><div class="summary">
            Finds parameter of the point on a curve that is closest to testPoint.
            If the maximumDistance parameter is &gt; 0, then only points whose distance
            to the given point is &lt;= maximumDistance will be returned.  Using a 
            positive value of maximumDistance can substantially speed up the search.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_ClosestPoint_1.htm">ClosestPoint(Point3d, Double<span id="LST1210ABE9_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_8?cpp=%");</script>, Double)</a></td><td><div class="summary">
            Finds the parameter of the point on a curve that is closest to testPoint.
            If the maximumDistance parameter is &gt; 0, then only points whose distance
            to the given point is &lt;= maximumDistance will be returned.  Using a 
            positive value of maximumDistance can substantially speed up the search.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_ClosestPoints.htm">ClosestPoints(Curve, Point3d<span id="LST1210ABE9_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_9?cpp=%");</script>, Point3d<span id="LST1210ABE9_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_10?cpp=%");</script>)</a></td><td><div class="summary">
            Gets closest points between this and another curves.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_ClosestPoints_1.htm">ClosestPoints(IEnumerable<span id="LST1210ABE9_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_11?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>GeometryBase<span id="LST1210ABE9_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_12?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Point3d<span id="LST1210ABE9_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_13?cpp=%");</script>, Point3d<span id="LST1210ABE9_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_14?cpp=%");</script>, Int32<span id="LST1210ABE9_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_15?cpp=%");</script>)</a></td><td><div class="summary">
            Finds the object (and the closest point in that object) that is closest to
            this curve. <p><a href="T_Rhino_Geometry_Brep.htm">Breps</a>, <a href="T_Rhino_Geometry_Surface.htm">surfaces</a>,
            <a href="T_Rhino_Geometry_Curve.htm">curves</a> and <a href="T_Rhino_Geometry_PointCloud.htm">point clouds</a> are examples of
            objects that can be passed to this function.</p></div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_ClosestPoints_2.htm">ClosestPoints(IEnumerable<span id="LST1210ABE9_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_16?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>GeometryBase<span id="LST1210ABE9_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_17?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Point3d<span id="LST1210ABE9_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_18?cpp=%");</script>, Point3d<span id="LST1210ABE9_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_19?cpp=%");</script>, Int32<span id="LST1210ABE9_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_20?cpp=%");</script>, Double)</a></td><td><div class="summary">
            Finds the object (and the closest point in that object) that is closest to
            this curve. <p><a href="T_Rhino_Geometry_Brep.htm">Breps</a>, <a href="T_Rhino_Geometry_Surface.htm">surfaces</a>,
            <a href="T_Rhino_Geometry_Curve.htm">curves</a> and <a href="T_Rhino_Geometry_PointCloud.htm">point clouds</a> are examples of
            objects that can be passed to this function.</p></div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_CombineShortSegments.htm">CombineShortSegments</a></td><td><div class="summary">
            Looks for segments that are shorter than tolerance that can be combined.
            For NURBS of degree greater than 1, spans are combined by removing
            knots. Similarly for NURBS segments of polycurves. Otherwise,
            RemoveShortSegments() is called. Does not change the domain, but it will
            change the relative parameterization.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_ComponentIndex.htm">ComponentIndex</a></td><td><div class="summary">
            If this piece of geometry is a component in something larger, like a BrepEdge
            in a Brep, then this function returns the component index.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Rhino_Runtime_CommonObject_ConstructConstObject.htm">ConstructConstObject</a></td><td><div class="summary">
            Assigns a parent object and a sub-object index to this.
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_Contains.htm">Contains(Point3d)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Computes the relationship between a point and a closed curve region. 
            This curve must be closed or the return value will be Unset.
            Both curve and point are projected to the World XY plane.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_Contains_1.htm">Contains(Point3d, Plane)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Computes the relationship between a point and a closed curve region. 
            This curve must be closed or the return value will be Unset.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_Contains_2.htm">Contains(Point3d, Plane, Double)</a></td><td><div class="summary">
            Computes the relationship between a point and a closed curve region. 
            This curve must be closed or the return value will be Unset.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Curve_CurvatureAt.htm">CurvatureAt</a></td><td><div class="summary">Evaluate the curvature vector at a curve parameter.</div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_DerivativeAt.htm">DerivativeAt(Double, Int32)</a></td><td><div class="summary">
            Evaluate the derivatives at the specified curve parameter.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_DerivativeAt_1.htm">DerivativeAt(Double, Int32, CurveEvaluationSide)</a></td><td><div class="summary">
            Evaluate the derivatives at the specified curve parameter.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Runtime_CommonObject_Dispose.htm">Dispose<span id="LST1210ABE9_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_21?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Actively reclaims unmanaged resources that this instance uses.
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Rhino_Geometry_Curve_Dispose.htm">Dispose(Boolean)</a></td><td><div class="summary">
            For derived class implementers.
            <p>This method is called with argument true when class user calls Dispose(), while with argument false when
            the Garbage Collector invokes the finalizer, or Finalize() method.</p><p>You must reclaim all used unmanaged resources in both cases, and can use this chance to call Dispose on disposable fields if the argument is true.</p><p>Also, you must call the base virtual method within your overriding method.</p></div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_DivideAsContour.htm">DivideAsContour</a></td><td><div class="summary">
            Divides this curve at fixed steps along a defined contour line.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_DivideByCount.htm">DivideByCount(Int32, Boolean)</a></td><td><div class="summary">
            Divide the curve into a number of equal-length segments.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_DivideByCount_1.htm">DivideByCount(Int32, Boolean, <span id="LST1210ABE9_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_22?cpp=array&lt;");</script>Point3d<span id="LST1210ABE9_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_23?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST1210ABE9_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_24?cpp=%");</script>)</a></td><td><div class="summary">
            Divide the curve into a number of equal-length segments.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Curve_DivideByLength.htm">DivideByLength(Double, Boolean)</a></td><td><div class="summary">
            Divide the curve into specific length segments.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Curve_DivideByLength_1.htm">DivideByLength(Double, Boolean, <span id="LST1210ABE9_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_25?cpp=array&lt;");</script>Point3d<span id="LST1210ABE9_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_26?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST1210ABE9_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_27?cpp=%");</script>)</a></td><td><div class="summary">
            Divide the curve into specific length segments.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Curve_DivideByLength_2.htm">DivideByLength(Double, Boolean, Boolean)</a></td><td><div class="summary">
            Divide the curve into specific length segments.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Curve_DivideByLength_3.htm">DivideByLength(Double, Boolean, Boolean, <span id="LST1210ABE9_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_28?cpp=array&lt;");</script>Point3d<span id="LST1210ABE9_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_29?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST1210ABE9_30"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_30?cpp=%");</script>)</a></td><td><div class="summary">
            Divide the curve into specific length segments.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_DivideEquidistant.htm">DivideEquidistant</a></td><td><div class="summary">
            Calculates 3d points on a curve where the linear distance between the points is equal.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_PolyCurve_Duplicate.htm">Duplicate</a></td><td><div class="summary">
            Duplicates this polycurve.
            <p>When not overridden in a derived class, this calls <a href="M_Rhino_Geometry_PolyCurve_DuplicatePolyCurve.htm">DuplicatePolyCurve<span id="LST1210ABE9_31"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_31?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>.</p></div> (Overrides <a href="M_Rhino_Geometry_Curve_Duplicate.htm">Curve<span id="LST1210ABE9_32"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_32?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Duplicate<span id="LST1210ABE9_33"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_33?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Curve_DuplicateCurve.htm">DuplicateCurve</a></td><td><div class="summary">
            Constructs an exact duplicate of this curve.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_PolyCurve_DuplicatePolyCurve.htm">DuplicatePolyCurve</a></td><td><div class="summary">
            Duplicates this polycurve.
            <p>This is the same as <a href="M_Rhino_Geometry_PolyCurve_Duplicate.htm">Duplicate<span id="LST1210ABE9_34"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_34?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>.</p></div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_DuplicateSegments.htm">DuplicateSegments</a></td><td><div class="summary">
            Duplicates curve segments. 
            Explodes polylines, polycurves and G1 discontinuous NURBS curves.
            Single segment curves, such as lines, arcs, unkinked NURBS curves, are duplicated.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_DuplicateShallow.htm">DuplicateShallow</a></td><td><div class="summary">
            Constructs a light copy of this object. By "light", it is meant that the same
            underlying data is used until something is done to attempt to change it. For example,
            you could have a shallow copy of a very heavy mesh object and the same underlying
            data will be used when doing things like inspecting the number of faces on the mesh.
            If you modify the location of one of the mesh vertices, the shallow copy will create
            a full duplicate of the underlying mesh data and the shallow copy will become a
            deep copy.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Runtime_CommonObject_EnsurePrivateCopy.htm">EnsurePrivateCopy</a></td><td><div class="summary">
            If you want to keep a copy of this class around by holding onto it in a variable after a command
            completes, call EnsurePrivateCopy to make sure that this class is not tied to the document. You can
            call this function as many times as you want.
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.equals#System_Object_Equals_System_Object_" target="_blank">Equals</a></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_PolyCurve_Explode.htm">Explode</a></td><td><div class="summary">
            Explodes this PolyCurve into a list of Curve segments. This will <b>not explode</b> nested polycurves. 
            Call <a href="M_Rhino_Geometry_PolyCurve_RemoveNesting.htm">RemoveNesting<span id="LST1210ABE9_35"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_35?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> first if you need all individual segments.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_Extend_3.htm">Extend(Interval)</a></td><td><div class="summary">
            Where possible, analytically extends curve to include the given domain. 
            This will not work on closed curves. The original curve will be identical to the 
            restriction of the resulting curve to the original curve domain.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_Extend_4.htm">Extend(Double, Double)</a></td><td><div class="summary">
            Where possible, analytically extends curve to include the given domain. 
            This will not work on closed curves. The original curve will be identical to the 
            restriction of the resulting curve to the original curve domain.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_Extend.htm">Extend(CurveEnd, CurveExtensionStyle, Point3d)</a></td><td><div class="summary">
            Extends a curve to a point.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Curve_Extend_1.htm">Extend(CurveEnd, CurveExtensionStyle, IEnumerable<span id="LST1210ABE9_36"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_36?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>GeometryBase<span id="LST1210ABE9_37"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_37?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Extends a curve until it intersects a collection of objects.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_Extend_2.htm">Extend(CurveEnd, Double, CurveExtensionStyle)</a></td><td><div class="summary">
            Extends a curve by a specific length.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_ExtendByArc.htm">ExtendByArc</a></td><td><div class="summary">
            Extends a curve by an Arc until it intersects a collection of objects.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_ExtendByLine.htm">ExtendByLine</a></td><td><div class="summary">
            Extends a curve by a line until it intersects a collection of objects.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_ExtendOnSurface.htm">ExtendOnSurface(CurveEnd, BrepFace)</a></td><td><div class="summary">
            Extends a curve on a surface.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_ExtendOnSurface_1.htm">ExtendOnSurface(CurveEnd, Surface)</a></td><td><div class="summary">
            Extends a curve on a surface.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_ExtremeParameters.htm">ExtremeParameters</a></td><td><div class="summary">
            Returns the parameter values of all local extrema. 
            Parameter values are in increasing order so consecutive extrema 
            define an interval on which each component of the curve is monotone. 
            Note, non-periodic curves always return the end points.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_Fair.htm">Fair</a></td><td><div class="summary">
            Fairs a curve object. Fair works best on degree 3 (cubic) curves. Attempts to 
            remove large curvature variations while limiting the geometry changes to be no 
            more than the specified tolerance. 
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Rhino_Runtime_CommonObject_Finalize.htm">Finalize</a></td><td><div class="summary">
            Passively reclaims unmanaged resources when the class user did not explicitly call Dispose().
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_Fit.htm">Fit</a></td><td><div class="summary">
            Fits a new curve through an existing curve.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_FrameAt.htm">FrameAt</a></td><td><div class="summary">Returns a 3d frame at a parameter.</div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_GeometryBase_GetBoundingBox_3.htm">GetBoundingBox(Boolean)</a></td><td><div class="summary">
            Bounding box solver. Gets the world axis aligned bounding box for the geometry.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_GeometryBase_GetBoundingBox.htm">GetBoundingBox(Plane)</a></td><td><div class="summary">
            Aligned Bounding box solver. Gets the plane aligned bounding box.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_GetBoundingBox_2.htm">GetBoundingBox(Transform)</a></td><td><div class="summary">
            Aligned Bounding box solver. Gets the world axis aligned bounding box for the transformed geometry.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_GetBoundingBox_1.htm">GetBoundingBox(Plane, Box<span id="LST1210ABE9_38"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_38?cpp=%");</script>)</a></td><td><div class="summary">
            Aligned Bounding box solver. Gets the plane aligned bounding box.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_GetConicSectionType.htm">GetConicSectionType<span id="LST1210ABE9_39"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_39?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Returns the type of conic section based on the curve's shape.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_GetConicSectionType_1.htm">GetConicSectionType(Point3d<span id="LST1210ABE9_40"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_40?cpp=%");</script>, Point3d<span id="LST1210ABE9_41"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_41?cpp=%");</script>, Point3d<span id="LST1210ABE9_42"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_42?cpp=%");</script>)</a></td><td><div class="summary">
            Returns the type of conic section based on the curve's shape.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_GetCurveParameterFromNurbsFormParameter.htm">GetCurveParameterFromNurbsFormParameter</a></td><td><div class="summary">
            Convert a NURBS curve parameter to a curve parameter.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.gethashcode#System_Object_GetHashCode" target="_blank">GetHashCode</a></td><td><div class="summary">Serves as the default hash function.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Curve_GetLength.htm">GetLength<span id="LST1210ABE9_43"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_43?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Gets the length of the curve with a fractional tolerance of 1.0e-8.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_GetLength_2.htm">GetLength(Double)</a></td><td><div class="summary">Get the length of the curve.</div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_GetLength_1.htm">GetLength(Interval)</a></td><td><div class="summary">Get the length of a sub-section of the curve with a fractional tolerance of 1e-8.</div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_GetLength_3.htm">GetLength(Double, Interval)</a></td><td><div class="summary">Get the length of a sub-section of the curve.</div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_GetLocalPerpPoint_1.htm">GetLocalPerpPoint(Point3d, Double, Double<span id="LST1210ABE9_44"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_44?cpp=%");</script>)</a></td><td><div class="summary">
            Search for a location on the curve, near seedParmameter, that is perpendicular to a test point.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_GetLocalPerpPoint.htm">GetLocalPerpPoint(Point3d, Double, Interval, Double<span id="LST1210ABE9_45"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_45?cpp=%");</script>)</a></td><td><div class="summary">
            Search for a location on the curve, near seedParmameter, that is perpendicular to a test point.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_GetLocalTangentPoint_1.htm">GetLocalTangentPoint(Point3d, Double, Double<span id="LST1210ABE9_46"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_46?cpp=%");</script>)</a></td><td><div class="summary">
            Search for a location on the curve, near seedParmameter, that is tangent to a test point.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_GetLocalTangentPoint.htm">GetLocalTangentPoint(Point3d, Double, Interval, Double<span id="LST1210ABE9_47"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_47?cpp=%");</script>)</a></td><td><div class="summary">
            Search for a location on the curve, near seedParmameter, that is tangent to a test point.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_GetNextDiscontinuity_1.htm">GetNextDiscontinuity(Continuity, Double, Double, Double<span id="LST1210ABE9_48"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_48?cpp=%");</script>)</a></td><td><div class="summary">
            Searches for a derivative, tangent, or curvature discontinuity.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_GetNextDiscontinuity.htm">GetNextDiscontinuity(Continuity, Double, Double, Double, Double, Double<span id="LST1210ABE9_49"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_49?cpp=%");</script>)</a></td><td><div class="summary">
            Searches for a derivative, tangent, or curvature discontinuity.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_GetNurbsFormParameterFromCurveParameter.htm">GetNurbsFormParameterFromCurveParameter</a></td><td><div class="summary">Convert a curve parameter to a NURBS curve parameter.</div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Runtime_CommonObject_GetObjectData.htm">GetObjectData</a></td><td><div class="summary">
            Populates a System.Runtime.Serialization.SerializationInfo with the data needed to serialize the target object.
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_GetPerpendicularFrames.htm">GetPerpendicularFrames</a></td><td><div class="summary">
            Gets a collection of perpendicular frames along the curve. Perpendicular frames 
            are also known as 'Zero-twisting frames' and they minimize rotation from one frame to the next.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.gettype#System_Object_GetType" target="_blank">GetType</a></td><td><div class="summary">Gets the <a href="https://docs.microsoft.com/dotnet/api/system.type" target="_blank">Type</a> of the current instance.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_GetUserString.htm">GetUserString</a></td><td><div class="summary">
            Gets user string from this geometry.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_GetUserStrings.htm">GetUserStrings</a></td><td><div class="summary">
            Gets a copy of all (user key string, user value string) pairs attached to this geometry.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_HasNurbsForm.htm">HasNurbsForm</a></td><td><div class="summary">
            Does a NURBS curve representation of this curve exist?
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_InflectionPoints.htm">InflectionPoints</a></td><td><div class="summary">
            Returns a curve's inflection points. An inflection point is a location on
            a curve at which the sign of the curvature (i.e., the concavity) changes. 
            The curvature at these locations is always 0.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_IsArc.htm">IsArc<span id="LST1210ABE9_50"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_50?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Test a curve to see if it can be represented by an arc or circle within RhinoMath.ZeroTolerance.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_IsArc_1.htm">IsArc(Double)</a></td><td><div class="summary">
            Test a curve to see if it can be represented by an arc or circle within the given tolerance.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_IsCircle.htm">IsCircle<span id="LST1210ABE9_51"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_51?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Test a curve to see if it can be represented by a circle within RhinoMath.ZeroTolerance.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_IsCircle_1.htm">IsCircle(Double)</a></td><td><div class="summary">
            Test a curve to see if it can be represented by a circle within the given tolerance.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_IsClosable.htm">IsClosable(Double)</a></td><td><div class="summary">
            Decide if it makes sense to close off this curve by moving the endpoint 
            to the start based on start-end gap size and length of curve as 
            approximated by chord defined by 6 points.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_IsClosable_1.htm">IsClosable(Double, Double, Double)</a></td><td><div class="summary">
            Decide if it makes sense to close off this curve by moving the endpoint
            to the start based on start-end gap size and length of curve as
            approximated by chord defined by 6 points.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_IsContinuous.htm">IsContinuous</a></td><td><div class="summary">
            Test continuity at a curve parameter value.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_IsEllipse.htm">IsEllipse<span id="LST1210ABE9_52"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_52?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Test a curve to see if it can be represented by an ellipse within RhinoMath.ZeroTolerance.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_IsEllipse_1.htm">IsEllipse(Double)</a></td><td><div class="summary">
            Test a curve to see if it can be represented by an ellipse within a given tolerance.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_IsInPlane.htm">IsInPlane(Plane)</a></td><td><div class="summary">Test a curve to see if it lies in a specific plane.</div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_IsInPlane_1.htm">IsInPlane(Plane, Double)</a></td><td><div class="summary">Test a curve to see if it lies in a specific plane.</div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Curve_IsLinear.htm">IsLinear<span id="LST1210ABE9_53"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_53?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Test a curve to see if it is linear to within RhinoMath.ZeroTolerance units (1e-12).
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_IsLinear_1.htm">IsLinear(Double)</a></td><td><div class="summary">
            Test a curve to see if it is linear to within the custom tolerance.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Curve_IsPlanar.htm">IsPlanar<span id="LST1210ABE9_54"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_54?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">Test a curve for planarity.</div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_IsPlanar_1.htm">IsPlanar(Double)</a></td><td><div class="summary">Test a curve for planarity.</div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Curve_IsPolyline.htm">IsPolyline</a></td><td><div class="summary">
            Several types of Curve can have the form of a polyline
            including a degree 1 NurbsCurve, a PolylineCurve,
            and a PolyCurve all of whose segments are some form of
            polyline. IsPolyline tests a curve to see if it can be
            represented as a polyline.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Curve_IsShort.htm">IsShort(Double)</a></td><td><div class="summary">Used to quickly find short curves.</div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_IsShort_1.htm">IsShort(Double, Interval)</a></td><td><div class="summary">Used to quickly find short curves.</div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Runtime_CommonObject_IsValidWithLog.htm">IsValidWithLog</a></td><td><div class="summary">
            Determines if an object is valid. Also provides a report on errors if this
            object happens not to be valid.
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_LengthParameter.htm">LengthParameter(Double, Double<span id="LST1210ABE9_55"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_55?cpp=%");</script>)</a></td><td><div class="summary">
            Gets the parameter along the curve which coincides with a given length along the curve. 
            A fractional tolerance of 1e-8 is used in this version of the function.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_LengthParameter_1.htm">LengthParameter(Double, Double<span id="LST1210ABE9_56"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_56?cpp=%");</script>, Interval)</a></td><td><div class="summary">
            Gets the parameter along the curve which coincides with a given length along the curve. 
            A fractional tolerance of 1e-8 is used in this version of the function.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_LengthParameter_2.htm">LengthParameter(Double, Double<span id="LST1210ABE9_57"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_57?cpp=%");</script>, Double)</a></td><td><div class="summary">
            Gets the parameter along the curve which coincides with a given length along the curve.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_LengthParameter_3.htm">LengthParameter(Double, Double<span id="LST1210ABE9_58"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_58?cpp=%");</script>, Double, Interval)</a></td><td><div class="summary">
            Gets the parameter along the curve which coincides with a given length along the curve.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_LocalClosestPoint.htm">LocalClosestPoint</a></td><td><div class="summary">
            Find parameter of the point on a curve that is locally closest to 
            the testPoint.  The search for a local close point starts at
            a seed parameter.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_MakeClosed.htm">MakeClosed</a></td><td><div class="summary">
            If IsClosed, just return true. Otherwise, decide if curve can be closed as 
            follows: Linear curves polylinear curves with 2 segments, NURBS with 3 or less 
            control points cannot be made closed. Also, if tolerance &gt; 0 and the gap between 
            start and end is larger than tolerance, curve cannot be made closed. 
            Adjust the curve's endpoint to match its start point.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_MakeDeformable.htm">MakeDeformable</a></td><td><div class="summary">
            If possible, converts the object into a form that can be accurately modified
            with "squishy" transformations like projections, shears, an non-uniform scaling.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_MaxCurvaturePoints.htm">MaxCurvaturePoints</a></td><td><div class="summary">
            Returns a curve's maximum curvature points. The maximum curvature points identify
            where the curvature starts to decrease in both directions from the points.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.memberwiseclone#System_Object_MemberwiseClone" target="_blank">MemberwiseClone</a></td><td><div class="summary">Creates a shallow copy of the current <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_MemoryEstimate.htm">MemoryEstimate</a></td><td><div class="summary">
            Computes an estimate of the number of bytes that this object is using in memory.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Rhino_Geometry_Curve_NonConstOperation.htm">NonConstOperation</a></td><td><div class="summary">
            For derived classes implementers.
            <p>Defines the necessary implementation to free the instance from being constant.</p></div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_NormalizedLengthParameter.htm">NormalizedLengthParameter(Double, Double<span id="LST1210ABE9_59"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_59?cpp=%");</script>)</a></td><td><div class="summary">
            Input the parameter of the point on the curve that is a prescribed arc length from the start of the curve. 
            A fractional tolerance of 1e-8 is used in this version of the function.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_NormalizedLengthParameter_1.htm">NormalizedLengthParameter(Double, Double<span id="LST1210ABE9_60"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_60?cpp=%");</script>, Interval)</a></td><td><div class="summary">
            Input the parameter of the point on the curve that is a prescribed arc length from the start of the curve. 
            A fractional tolerance of 1e-8 is used in this version of the function.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_NormalizedLengthParameter_2.htm">NormalizedLengthParameter(Double, Double<span id="LST1210ABE9_61"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_61?cpp=%");</script>, Double)</a></td><td><div class="summary">
            Input the parameter of the point on the curve that is a prescribed arc length from the start of the curve.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_NormalizedLengthParameter_3.htm">NormalizedLengthParameter(Double, Double<span id="LST1210ABE9_62"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_62?cpp=%");</script>, Double, Interval)</a></td><td><div class="summary">
            Input the parameter of the point on the curve that is a prescribed arc length from the start of the curve.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_NormalizedLengthParameters.htm">NormalizedLengthParameters(<span id="LST1210ABE9_63"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_63?cpp=array&lt;");</script>Double<span id="LST1210ABE9_64"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_64?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Double)</a></td><td><div class="summary">
            Input the parameter of the point on the curve that is a prescribed arc length from the start of the curve. 
            A fractional tolerance of 1e-8 is used in this version of the function.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_NormalizedLengthParameters_1.htm">NormalizedLengthParameters(<span id="LST1210ABE9_65"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_65?cpp=array&lt;");</script>Double<span id="LST1210ABE9_66"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_66?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Double, Interval)</a></td><td><div class="summary">
            Input the parameter of the point on the curve that is a prescribed arc length from the start of the curve. 
            A fractional tolerance of 1e-8 is used in this version of the function.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_NormalizedLengthParameters_2.htm">NormalizedLengthParameters(<span id="LST1210ABE9_67"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_67?cpp=array&lt;");</script>Double<span id="LST1210ABE9_68"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_68?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Double, Double)</a></td><td><div class="summary">
            Input the parameter of the point on the curve that is a prescribed arc length from the start of the curve.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_NormalizedLengthParameters_3.htm">NormalizedLengthParameters(<span id="LST1210ABE9_69"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_69?cpp=array&lt;");</script>Double<span id="LST1210ABE9_70"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_70?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Double, Double, Interval)</a></td><td><div class="summary">
            Input the parameter of the point on the curve that is a prescribed arc length from the start of the curve.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_Offset.htm">Offset(Plane, Double, Double, CurveOffsetCornerStyle)</a></td><td><div class="summary">
            Offsets this curve. If you have a nice offset, then there will be one entry in 
            the array. If the original curve had kinks or the offset curve had self 
            intersections, you will get multiple segments in the output array.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_Offset_1.htm">Offset(Point3d, Vector3d, Double, Double, CurveOffsetCornerStyle)</a></td><td><div class="summary">
            Offsets this curve. If you have a nice offset, then there will be one entry in 
            the array. If the original curve had kinks or the offset curve had self 
            intersections, you will get multiple segments in the output array.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_Offset_2.htm">Offset(Point3d, Vector3d, Double, Double, Double, Boolean, CurveOffsetCornerStyle, CurveOffsetEndStyle)</a></td><td><div class="summary">
            Offsets this curve. If you have a nice offset, then there will be one entry in 
            the array. If the original curve had kinks or the offset curve had self 
            intersections, you will get multiple segments in the output array.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_OffsetNormalToSurface.htm">OffsetNormalToSurface</a></td><td><div class="summary">
            Finds a curve by offsetting an existing curve normal to a surface.
            The caller is responsible for ensuring that the curve lies on the input surface.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_OffsetOnSurface.htm">OffsetOnSurface(BrepFace, Point2d, Double)</a></td><td><div class="summary">
            Offset a curve on a brep face surface. This curve must lie on the surface.
            <p>This overload allows to specify a surface point at which the offset will pass.</p></div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_OffsetOnSurface_1.htm">OffsetOnSurface(BrepFace, Double, Double)</a></td><td><div class="summary">
            Offset this curve on a brep face surface. This curve must lie on the surface.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_OffsetOnSurface_3.htm">OffsetOnSurface(Surface, Point2d, Double)</a></td><td><div class="summary">
            Offset a curve on a surface. This curve must lie on the surface.
            <p>This overload allows to specify a surface point at which the offset will pass.</p></div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_OffsetOnSurface_4.htm">OffsetOnSurface(Surface, Double, Double)</a></td><td><div class="summary">
            Offset a curve on a surface. This curve must lie on the surface.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_OffsetOnSurface_2.htm">OffsetOnSurface(BrepFace, <span id="LST1210ABE9_71"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_71?cpp=array&lt;");</script>Double<span id="LST1210ABE9_72"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_72?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1210ABE9_73"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_73?cpp=array&lt;");</script>Double<span id="LST1210ABE9_74"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_74?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Double)</a></td><td><div class="summary">
            Offset a curve on a brep face surface. This curve must lie on the surface.
            <p>This overload allows to specify different offsets for different curve parameters.</p></div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_OffsetOnSurface_5.htm">OffsetOnSurface(Surface, <span id="LST1210ABE9_75"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_75?cpp=array&lt;");</script>Double<span id="LST1210ABE9_76"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_76?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST1210ABE9_77"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_77?cpp=array&lt;");</script>Double<span id="LST1210ABE9_78"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_78?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Double)</a></td><td><div class="summary">
            Offset this curve on a surface. This curve must lie on the surface.
            <p>This overload allows to specify different offsets for different curve parameters.</p></div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_OnSwitchToNonConst.htm">OnSwitchToNonConst</a></td><td><div class="summary">
            Is called when a non-constant operation occurs.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_PerpendicularFrameAt.htm">PerpendicularFrameAt</a></td><td><div class="summary">
            Return a 3d frame at a parameter. This is slightly different than FrameAt in
            that the frame is computed in a way so there is minimal rotation from one
            frame to the next.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Curve_PointAt.htm">PointAt</a></td><td><div class="summary">Evaluates point at a curve parameter.</div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Curve_PointAtLength.htm">PointAtLength</a></td><td><div class="summary">
            Gets a point at a certain length along the curve. The length must be 
            non-negative and less than or equal to the length of the curve. 
            Lengths will not be wrapped when the curve is closed or periodic.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_PointAtNormalizedLength.htm">PointAtNormalizedLength</a></td><td><div class="summary">
            Gets a point at a certain normalized length along the curve. The length must be 
            between or including 0.0 and 1.0, where 0.0 equals the start of the curve and 
            1.0 equals the end of the curve. 
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_PolyCurve_PolyCurveParameter.htm">PolyCurveParameter</a></td><td><div class="summary">
            Converts a segment curve parameter to a polycurve parameter.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_PullToBrepFace.htm">PullToBrepFace(BrepFace, Double)</a></td><td><div class="summary">
            Pulls this curve to a brep face and returns the result of that operation.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_PullToMesh.htm">PullToMesh</a></td><td><div class="summary">
            Makes a polyline approximation of the curve and gets the closest point on the mesh for each point on the curve. 
            Then it "connects the points" so that you have a polyline on the mesh.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_Rebuild.htm">Rebuild</a></td><td><div class="summary">
            Rebuild a curve with a specific point count.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_PolyCurve_RemoveNesting.htm">RemoveNesting</a></td><td><div class="summary">
            Explodes nested polycurve segments and reconstructs this curve from the shattered remains. 
            The result will have not have any PolyCurves as segments but it will have identical 
            locus and parameterization.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_RemoveShortSegments.htm">RemoveShortSegments</a></td><td><div class="summary">
            Looks for segments that are shorter than tolerance that can be removed. 
            Does not change the domain, but it will change the relative parameterization.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Curve_Reverse.htm">Reverse</a></td><td><div class="summary">
            Reverses the direction of the curve.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_RibbonOffset.htm">RibbonOffset(Double, Double, Point3d, Vector3d, Double)</a></td><td><div class="summary">
            Offsets a closed curve in the following way: pProject the curve to a plane with given normal.
            Then, loose Offset the projection by distance + blend_radius and trim off self-intersection.
            THen, Offset the remaining curve back in the opposite direction by blend_radius, filling gaps with blends.
            Finally, use the elevations of the input curve to get the correct elevations of the result.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_RibbonOffset_1.htm">RibbonOffset(Double, Double, Point3d, Vector3d, Double, <span id="LST1210ABE9_79"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_79?cpp=array&lt;");</script>Curve<span id="LST1210ABE9_80"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_80?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST1210ABE9_81"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_81?cpp=%");</script>, <span id="LST1210ABE9_82"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_82?cpp=array&lt;");</script>Surface<span id="LST1210ABE9_83"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_83?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST1210ABE9_84"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_84?cpp=%");</script>)</a></td><td><div class="summary">
            Offsets a closed curve in the following way: pProject the curve to a plane with given normal.
            Then, loose Offset the projection by distance + blend_radius and trim off self-intersection.
            THen, Offset the remaining curve back in the opposite direction by blend_radius, filling gaps with blends.
            Finally, use the elevations of the input curve to get the correct elevations of the result.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_RibbonOffset_2.htm">RibbonOffset(Double, Double, Point3d, Vector3d, Double, <span id="LST1210ABE9_85"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_85?cpp=array&lt;");</script>Double<span id="LST1210ABE9_86"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_86?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST1210ABE9_87"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_87?cpp=%");</script>, <span id="LST1210ABE9_88"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_88?cpp=array&lt;");</script>Double<span id="LST1210ABE9_89"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_89?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST1210ABE9_90"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_90?cpp=%");</script>)</a></td><td><div class="summary">
            Offsets a closed curve in the following way: pProject the curve to a plane with given normal.
            Then, loose Offset the projection by distance + blend_radius and trim off self-intersection.
            THen, Offset the remaining curve back in the opposite direction by blend_radius, filling gaps with blends.
            Finally, use the elevations of the input curve to get the correct elevations of the result.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_Rotate.htm">Rotate</a></td><td><div class="summary">
            Rotates the object about the specified axis. A positive rotation 
            angle results in a counter-clockwise rotation about the axis (right hand rule).
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_Scale.htm">Scale</a></td><td><div class="summary">
            Scales the object by the specified factor. The scale is centered at the origin.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_PolyCurve_SegmentCurve.htm">SegmentCurve</a></td><td><div class="summary">
            Gets the segment curve at the given index.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_PolyCurve_SegmentCurveParameter.htm">SegmentCurveParameter</a></td><td><div class="summary">
            Converts a polycurve parameter to a segment curve parameter.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_PolyCurve_SegmentDomain.htm">SegmentDomain</a></td><td><div class="summary">
            Returns the polycurve sub-domain assigned to a segment curve.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_PolyCurve_SegmentIndex.htm">SegmentIndex</a></td><td><div class="summary">
            Finds the segment used for evaluation at polycurve_parameter.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_PolyCurve_SegmentIndexes.htm">SegmentIndexes</a></td><td><div class="summary">Finds the segments that overlap the Polycurve sub domain.</div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_SetEndPoint.htm">SetEndPoint</a></td><td><div class="summary">Forces the curve to end at a specified point. 
            Not all curve types support this operation.</div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_SetStartPoint.htm">SetStartPoint</a></td><td><div class="summary">Forces the curve to start at a specified point. 
            Not all curve types support this operation.</div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_SetUserString.htm">SetUserString</a></td><td><div class="summary">
            Attach a user string (key,value combination) to this geometry.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_Simplify.htm">Simplify</a></td><td><div class="summary">
            Returns a geometrically equivalent PolyCurve.
            <p>The PolyCurve has the following properties</p><p>
            1. All the PolyCurve segments are LineCurve, PolylineCurve, ArcCurve, or NurbsCurve.
            </p><p>
            2. The NURBS Curves segments do not have fully multiple interior knots.
            </p><p>
            3. Rational NURBS curves do not have constant weights.
            </p><p>
            4. Any segment for which IsLinear() or IsArc() is true is a Line, 
               Polyline segment, or an Arc.
            </p><p>
            5. Adjacent co-linear or co-circular segments are combined.
            </p><p>
            6. Segments that meet with G1-continuity have there ends tuned up so
               that they meet with G1-continuity to within machine precision.
            </p></div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_SimplifyEnd.htm">SimplifyEnd</a></td><td><div class="summary">
            Same as SimplifyCurve, but simplifies only the last two segments at "side" end.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_Smooth.htm">Smooth(Double, Boolean, Boolean, Boolean, Boolean, SmoothingCoordinateSystem)</a></td><td><div class="summary">
            Smooths a curve by averaging the positions of control points in a specified region.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_Smooth_1.htm">Smooth(Double, Boolean, Boolean, Boolean, Boolean, SmoothingCoordinateSystem, Plane)</a></td><td><div class="summary">
            Smooths a curve by averaging the positions of control points in a specified region.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_SpanDomain.htm">SpanDomain</a></td><td><div class="summary">
            Get the domain of the curve span with the given index. 
            Use the SpanCount property to test how many spans there are.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_Split_4.htm">Split(IEnumerable<span id="LST1210ABE9_91"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_91?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LST1210ABE9_92"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_92?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Splits (divides) the curve at a series of specified parameters. 
            The parameter must be in the interior of the curve domain.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_Split_5.htm">Split(Double)</a></td><td><div class="summary">
            Splits (divides) the curve at the specified parameter. 
            The parameter must be in the interior of the curve's domain.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_Split.htm">Split(Brep, Double)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Splits a curve into pieces using a polysurface.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_Split_2.htm">Split(Surface, Double)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Splits a curve into pieces using a surface.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_Split_1.htm">Split(Brep, Double, Double)</a></td><td><div class="summary">
            Splits a curve into pieces using a polysurface.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_Split_3.htm">Split(Surface, Double, Double)</a></td><td><div class="summary">
            Splits a curve into pieces using a surface.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_TangentAt.htm">TangentAt</a></td><td><div class="summary">Evaluates the unit tangent vector at a curve parameter.</div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_ToArcsAndLines.htm">ToArcsAndLines</a></td><td><div class="summary">
            Converts a curve into polycurve consisting of arc segments. Sections of the input curves that are nearly straight are converted to straight-line segments.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Runtime_CommonObject_ToJSON.htm">ToJSON</a></td><td><div class="summary">
            Create a JSON string representation of this object
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_ToNurbsCurve.htm">ToNurbsCurve<span id="LST1210ABE9_93"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_93?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Constructs a NURBS curve representation of this curve.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_ToNurbsCurve_1.htm">ToNurbsCurve(Interval)</a></td><td><div class="summary">
            Constructs a NURBS curve representation of this curve.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_ToPolyline.htm">ToPolyline(Double, Double, Double, Double)</a></td><td><div class="summary">
            Gets a polyline approximation of a curve.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_ToPolyline_1.htm">ToPolyline(Int32, Int32, Double, Double, Double, Double, Double, Double, Boolean)</a></td><td><div class="summary">
            Gets a polyline approximation of a curve.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_ToPolyline_2.htm">ToPolyline(Int32, Int32, Double, Double, Double, Double, Double, Double, Boolean, Interval)</a></td><td><div class="summary">
            Gets a polyline approximation of a curve.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_TorsionAt.htm">TorsionAt</a></td><td><div class="summary">
            Evaluate the torsion of a curve at a parmeter. Sometimes also called the "second curvature", 
            torsion is the rate of change of a curve's osculating plane.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.tostring#System_Object_ToString" target="_blank">ToString</a></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_Transform.htm">Transform</a></td><td><div class="summary">
            Transforms the geometry. If the input Transform has a SimilarityType of
            OrientationReversing, you may want to consider flipping the transformed
            geometry after calling this function when it makes sense. For example,
            you may want to call Flip() on a Brep after transforming it.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_Translate.htm">Translate(Vector3d)</a></td><td><div class="summary">Translates the object along the specified vector.</div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_Translate_1.htm">Translate(Double, Double, Double)</a></td><td><div class="summary">Translates the object along the specified vector.</div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_Trim_1.htm">Trim(Interval)</a></td><td><div class="summary">
            Removes portions of the curve outside the specified interval.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_Trim_2.htm">Trim(Double, Double)</a></td><td><div class="summary">
            Removes portions of the curve outside the specified interval.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_Trim.htm">Trim(CurveEnd, Double)</a></td><td><div class="summary">
            Shortens a curve by a given length
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_TryGetArc.htm">TryGetArc(Arc<span id="LST1210ABE9_94"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_94?cpp=%");</script>)</a></td><td><div class="summary">
            Try to convert this curve into an Arc using RhinoMath.ZeroTolerance.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_TryGetArc_1.htm">TryGetArc(Arc<span id="LST1210ABE9_95"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_95?cpp=%");</script>, Double)</a></td><td><div class="summary">
            Try to convert this curve into an Arc using a custom tolerance.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_TryGetArc_2.htm">TryGetArc(Plane, Arc<span id="LST1210ABE9_96"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_96?cpp=%");</script>)</a></td><td><div class="summary">
            Try to convert this curve into an Arc using RhinoMath.ZeroTolerance.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_TryGetArc_3.htm">TryGetArc(Plane, Arc<span id="LST1210ABE9_97"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_97?cpp=%");</script>, Double)</a></td><td><div class="summary">
            Try to convert this curve into an Arc using a custom tolerance.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Curve_TryGetCircle.htm">TryGetCircle(Circle<span id="LST1210ABE9_98"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_98?cpp=%");</script>)</a></td><td><div class="summary">
            Try to convert this curve into a circle using RhinoMath.ZeroTolerance.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Curve_TryGetCircle_1.htm">TryGetCircle(Circle<span id="LST1210ABE9_99"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_99?cpp=%");</script>, Double)</a></td><td><div class="summary">
            Try to convert this curve into a Circle using a custom tolerance.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_TryGetEllipse.htm">TryGetEllipse(Ellipse<span id="LST1210ABE9_100"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_100?cpp=%");</script>)</a></td><td><div class="summary">
            Try to convert this curve into an Ellipse within RhinoMath.ZeroTolerance.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_TryGetEllipse_1.htm">TryGetEllipse(Ellipse<span id="LST1210ABE9_101"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_101?cpp=%");</script>, Double)</a></td><td><div class="summary">
            Try to convert this curve into an Ellipse using a custom tolerance.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_TryGetEllipse_2.htm">TryGetEllipse(Plane, Ellipse<span id="LST1210ABE9_102"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_102?cpp=%");</script>)</a></td><td><div class="summary">
            Try to convert this curve into an Ellipse within RhinoMath.ZeroTolerance.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_TryGetEllipse_3.htm">TryGetEllipse(Plane, Ellipse<span id="LST1210ABE9_103"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_103?cpp=%");</script>, Double)</a></td><td><div class="summary">
            Try to convert this curve into an Ellipse using a custom tolerance.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Curve_TryGetPlane.htm">TryGetPlane(Plane<span id="LST1210ABE9_104"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_104?cpp=%");</script>)</a></td><td><div class="summary">Test a curve for planarity and return the plane.</div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_TryGetPlane_1.htm">TryGetPlane(Plane<span id="LST1210ABE9_105"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_105?cpp=%");</script>, Double)</a></td><td><div class="summary">Test a curve for planarity and return the plane.</div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_TryGetPolyline.htm">TryGetPolyline(Polyline<span id="LST1210ABE9_106"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_106?cpp=%");</script>)</a></td><td><div class="summary">
            Several types of Curve can have the form of a polyline 
            including a degree 1 NurbsCurve, a PolylineCurve, 
            and a PolyCurve all of whose segments are some form of 
            polyline. IsPolyline tests a curve to see if it can be 
            represented as a polyline.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Curve_TryGetPolyline_1.htm">TryGetPolyline(Polyline<span id="LST1210ABE9_107"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_107?cpp=%");</script>, <span id="LST1210ABE9_108"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_108?cpp=array&lt;");</script>Double<span id="LST1210ABE9_109"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_109?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST1210ABE9_110"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST1210ABE9_110?cpp=%");</script>)</a></td><td><div class="summary">
            Several types of Curve can have the form of a polyline 
            including a degree 1 NurbsCurve, a PolylineCurve, 
            and a PolyCurve all of whose segments are some form of 
            polyline. IsPolyline tests a curve to see if it can be 
            represented as a polyline.
            </div> (Inherited from <a href="T_Rhino_Geometry_Curve.htm">Curve</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID6RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Rhino_Geometry.htm">Rhino.Geometry Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.16.22067.13000 (Last updated: 3/10/2022)<br />Copyright © 2009-2022 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>