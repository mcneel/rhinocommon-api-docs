<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Brep Methods</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Brep class, methods" /><meta name="Microsoft.Help.Id" content="Methods.T:Rhino.Geometry.Brep" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Geometry" /><meta name="file" content="Methods_T_Rhino_Geometry_Brep" /><meta name="guid" content="Methods_T_Rhino_Geometry_Brep" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_Geometry.htm" title="Rhino.Geometry" tocid="N_Rhino_Geometry">Rhino.Geometry</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_Geometry_Brep.htm" title="Brep Class" tocid="T_Rhino_Geometry_Brep">Brep Class</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Rhino_Geometry_Brep.htm" title="Brep Methods" tocid="Methods_T_Rhino_Geometry_Brep">Brep Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_AddEdgeCurve.htm" title="AddEdgeCurve Method " tocid="M_Rhino_Geometry_Brep_AddEdgeCurve">AddEdgeCurve Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_AddSurface.htm" title="AddSurface Method " tocid="M_Rhino_Geometry_Brep_AddSurface">AddSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_AddTrimCurve.htm" title="AddTrimCurve Method " tocid="M_Rhino_Geometry_Brep_AddTrimCurve">AddTrimCurve Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_Append.htm" title="Append Method " tocid="M_Rhino_Geometry_Brep_Append">Append Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CapPlanarHoles.htm" title="CapPlanarHoles Method " tocid="M_Rhino_Geometry_Brep_CapPlanarHoles">CapPlanarHoles Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_ChangeSeam.htm" title="ChangeSeam Method " tocid="M_Rhino_Geometry_Brep_ChangeSeam">ChangeSeam Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_ClosestPoint.htm" title="ClosestPoint Method " tocid="Overload_Rhino_Geometry_Brep_ClosestPoint">ClosestPoint Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_Compact.htm" title="Compact Method " tocid="M_Rhino_Geometry_Brep_Compact">Compact Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CopyTrimCurves.htm" title="CopyTrimCurves Method " tocid="M_Rhino_Geometry_Brep_CopyTrimCurves">CopyTrimCurves Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CreateBaseballSphere.htm" title="CreateBaseballSphere Method " tocid="M_Rhino_Geometry_Brep_CreateBaseballSphere">CreateBaseballSphere Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CreateBlendShape.htm" title="CreateBlendShape Method " tocid="M_Rhino_Geometry_Brep_CreateBlendShape">CreateBlendShape Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CreateBlendSurface.htm" title="CreateBlendSurface Method " tocid="M_Rhino_Geometry_Brep_CreateBlendSurface">CreateBlendSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_CreateBooleanDifference.htm" title="CreateBooleanDifference Method " tocid="Overload_Rhino_Geometry_Brep_CreateBooleanDifference">CreateBooleanDifference Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_CreateBooleanIntersection.htm" title="CreateBooleanIntersection Method " tocid="Overload_Rhino_Geometry_Brep_CreateBooleanIntersection">CreateBooleanIntersection Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_CreateBooleanSplit.htm" title="CreateBooleanSplit Method " tocid="Overload_Rhino_Geometry_Brep_CreateBooleanSplit">CreateBooleanSplit Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_CreateBooleanUnion.htm" title="CreateBooleanUnion Method " tocid="Overload_Rhino_Geometry_Brep_CreateBooleanUnion">CreateBooleanUnion Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_CreateChamferSurface.htm" title="CreateChamferSurface Method " tocid="Overload_Rhino_Geometry_Brep_CreateChamferSurface">CreateChamferSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_CreateContourCurves.htm" title="CreateContourCurves Method " tocid="Overload_Rhino_Geometry_Brep_CreateContourCurves">CreateContourCurves Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CreateCurvatureAnalysisMesh.htm" title="CreateCurvatureAnalysisMesh Method " tocid="M_Rhino_Geometry_Brep_CreateCurvatureAnalysisMesh">CreateCurvatureAnalysisMesh Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_CreateDevelopableLoft.htm" title="CreateDevelopableLoft Method " tocid="Overload_Rhino_Geometry_Brep_CreateDevelopableLoft">CreateDevelopableLoft Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CreateEdgeSurface.htm" title="CreateEdgeSurface Method " tocid="M_Rhino_Geometry_Brep_CreateEdgeSurface">CreateEdgeSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CreateFilletEdges.htm" title="CreateFilletEdges Method " tocid="M_Rhino_Geometry_Brep_CreateFilletEdges">CreateFilletEdges Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_CreateFilletSurface.htm" title="CreateFilletSurface Method " tocid="Overload_Rhino_Geometry_Brep_CreateFilletSurface">CreateFilletSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_CreateFromBox.htm" title="CreateFromBox Method " tocid="Overload_Rhino_Geometry_Brep_CreateFromBox">CreateFromBox Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CreateFromCone.htm" title="CreateFromCone Method " tocid="M_Rhino_Geometry_Brep_CreateFromCone">CreateFromCone Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_CreateFromCornerPoints.htm" title="CreateFromCornerPoints Method " tocid="Overload_Rhino_Geometry_Brep_CreateFromCornerPoints">CreateFromCornerPoints Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CreateFromCylinder.htm" title="CreateFromCylinder Method " tocid="M_Rhino_Geometry_Brep_CreateFromCylinder">CreateFromCylinder Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CreateFromJoinedEdges.htm" title="CreateFromJoinedEdges Method " tocid="M_Rhino_Geometry_Brep_CreateFromJoinedEdges">CreateFromJoinedEdges Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_CreateFromLoft.htm" title="CreateFromLoft Method " tocid="Overload_Rhino_Geometry_Brep_CreateFromLoft">CreateFromLoft Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CreateFromLoftRebuild.htm" title="CreateFromLoftRebuild Method " tocid="M_Rhino_Geometry_Brep_CreateFromLoftRebuild">CreateFromLoftRebuild Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CreateFromLoftRefit.htm" title="CreateFromLoftRefit Method " tocid="M_Rhino_Geometry_Brep_CreateFromLoftRefit">CreateFromLoftRefit Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CreateFromMesh.htm" title="CreateFromMesh Method " tocid="M_Rhino_Geometry_Brep_CreateFromMesh">CreateFromMesh Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CreateFromOffsetFace.htm" title="CreateFromOffsetFace Method " tocid="M_Rhino_Geometry_Brep_CreateFromOffsetFace">CreateFromOffsetFace Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CreateFromRevSurface.htm" title="CreateFromRevSurface Method " tocid="M_Rhino_Geometry_Brep_CreateFromRevSurface">CreateFromRevSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CreateFromSphere.htm" title="CreateFromSphere Method " tocid="M_Rhino_Geometry_Brep_CreateFromSphere">CreateFromSphere Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CreateFromSurface.htm" title="CreateFromSurface Method " tocid="M_Rhino_Geometry_Brep_CreateFromSurface">CreateFromSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_CreateFromSweep.htm" title="CreateFromSweep Method " tocid="Overload_Rhino_Geometry_Brep_CreateFromSweep">CreateFromSweep Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CreateFromSweepInParts.htm" title="CreateFromSweepInParts Method " tocid="M_Rhino_Geometry_Brep_CreateFromSweepInParts">CreateFromSweepInParts Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_CreateFromSweepSegmented.htm" title="CreateFromSweepSegmented Method " tocid="Overload_Rhino_Geometry_Brep_CreateFromSweepSegmented">CreateFromSweepSegmented Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_CreateFromTaperedExtrude.htm" title="CreateFromTaperedExtrude Method " tocid="Overload_Rhino_Geometry_Brep_CreateFromTaperedExtrude">CreateFromTaperedExtrude Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CreateFromTaperedExtrudeWithRef.htm" title="CreateFromTaperedExtrudeWithRef Method " tocid="M_Rhino_Geometry_Brep_CreateFromTaperedExtrudeWithRef">CreateFromTaperedExtrudeWithRef Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_CreateOffsetBrep.htm" title="CreateOffsetBrep Method " tocid="Overload_Rhino_Geometry_Brep_CreateOffsetBrep">CreateOffsetBrep Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_CreatePatch.htm" title="CreatePatch Method " tocid="Overload_Rhino_Geometry_Brep_CreatePatch">CreatePatch Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_CreatePipe.htm" title="CreatePipe Method " tocid="Overload_Rhino_Geometry_Brep_CreatePipe">CreatePipe Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_CreatePlanarBreps.htm" title="CreatePlanarBreps Method " tocid="Overload_Rhino_Geometry_Brep_CreatePlanarBreps">CreatePlanarBreps Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CreatePlanarDifference.htm" title="CreatePlanarDifference Method " tocid="M_Rhino_Geometry_Brep_CreatePlanarDifference">CreatePlanarDifference Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CreatePlanarIntersection.htm" title="CreatePlanarIntersection Method " tocid="M_Rhino_Geometry_Brep_CreatePlanarIntersection">CreatePlanarIntersection Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_CreatePlanarUnion.htm" title="CreatePlanarUnion Method " tocid="Overload_Rhino_Geometry_Brep_CreatePlanarUnion">CreatePlanarUnion Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CreateQuadSphere.htm" title="CreateQuadSphere Method " tocid="M_Rhino_Geometry_Brep_CreateQuadSphere">CreateQuadSphere Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CreateShell.htm" title="CreateShell Method " tocid="M_Rhino_Geometry_Brep_CreateShell">CreateShell Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CreateSolid.htm" title="CreateSolid Method " tocid="M_Rhino_Geometry_Brep_CreateSolid">CreateSolid Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_CreateThickPipe.htm" title="CreateThickPipe Method " tocid="Overload_Rhino_Geometry_Brep_CreateThickPipe">CreateThickPipe Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_CreateTrimmedPlane.htm" title="CreateTrimmedPlane Method " tocid="Overload_Rhino_Geometry_Brep_CreateTrimmedPlane">CreateTrimmedPlane Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_CreateTrimmedSurface.htm" title="CreateTrimmedSurface Method " tocid="Overload_Rhino_Geometry_Brep_CreateTrimmedSurface">CreateTrimmedSurface Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CullUnused2dCurves.htm" title="CullUnused2dCurves Method " tocid="M_Rhino_Geometry_Brep_CullUnused2dCurves">CullUnused2dCurves Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CullUnused3dCurves.htm" title="CullUnused3dCurves Method " tocid="M_Rhino_Geometry_Brep_CullUnused3dCurves">CullUnused3dCurves Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CullUnusedEdges.htm" title="CullUnusedEdges Method " tocid="M_Rhino_Geometry_Brep_CullUnusedEdges">CullUnusedEdges Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CullUnusedFaces.htm" title="CullUnusedFaces Method " tocid="M_Rhino_Geometry_Brep_CullUnusedFaces">CullUnusedFaces Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CullUnusedLoops.htm" title="CullUnusedLoops Method " tocid="M_Rhino_Geometry_Brep_CullUnusedLoops">CullUnusedLoops Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CullUnusedSurfaces.htm" title="CullUnusedSurfaces Method " tocid="M_Rhino_Geometry_Brep_CullUnusedSurfaces">CullUnusedSurfaces Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CullUnusedTrims.htm" title="CullUnusedTrims Method " tocid="M_Rhino_Geometry_Brep_CullUnusedTrims">CullUnusedTrims Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CullUnusedVertices.htm" title="CullUnusedVertices Method " tocid="M_Rhino_Geometry_Brep_CullUnusedVertices">CullUnusedVertices Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_DestroyRegionTopology.htm" title="DestroyRegionTopology Method " tocid="M_Rhino_Geometry_Brep_DestroyRegionTopology">DestroyRegionTopology Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_Duplicate.htm" title="Duplicate Method " tocid="M_Rhino_Geometry_Brep_Duplicate">Duplicate Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_DuplicateBrep.htm" title="DuplicateBrep Method " tocid="M_Rhino_Geometry_Brep_DuplicateBrep">DuplicateBrep Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_DuplicateEdgeCurves.htm" title="DuplicateEdgeCurves Method " tocid="Overload_Rhino_Geometry_Brep_DuplicateEdgeCurves">DuplicateEdgeCurves Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_DuplicateNakedEdgeCurves.htm" title="DuplicateNakedEdgeCurves Method " tocid="M_Rhino_Geometry_Brep_DuplicateNakedEdgeCurves">DuplicateNakedEdgeCurves Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_DuplicateSubBrep.htm" title="DuplicateSubBrep Method " tocid="M_Rhino_Geometry_Brep_DuplicateSubBrep">DuplicateSubBrep Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_DuplicateVertices.htm" title="DuplicateVertices Method " tocid="M_Rhino_Geometry_Brep_DuplicateVertices">DuplicateVertices Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_FindCoincidentBrepComponents.htm" title="FindCoincidentBrepComponents Method " tocid="M_Rhino_Geometry_Brep_FindCoincidentBrepComponents">FindCoincidentBrepComponents Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_Flip.htm" title="Flip Method " tocid="M_Rhino_Geometry_Brep_Flip">Flip Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_GetArea.htm" title="GetArea Method " tocid="Overload_Rhino_Geometry_Brep_GetArea">GetArea Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_GetPointInside.htm" title="GetPointInside Method " tocid="M_Rhino_Geometry_Brep_GetPointInside">GetPointInside Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_GetRegions.htm" title="GetRegions Method " tocid="M_Rhino_Geometry_Brep_GetRegions">GetRegions Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_GetVolume.htm" title="GetVolume Method " tocid="Overload_Rhino_Geometry_Brep_GetVolume">GetVolume Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_GetWireframe.htm" title="GetWireframe Method " tocid="M_Rhino_Geometry_Brep_GetWireframe">GetWireframe Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_IsBox.htm" title="IsBox Method " tocid="Overload_Rhino_Geometry_Brep_IsBox">IsBox Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_IsDuplicate.htm" title="IsDuplicate Method " tocid="M_Rhino_Geometry_Brep_IsDuplicate">IsDuplicate Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_IsPointInside.htm" title="IsPointInside Method " tocid="M_Rhino_Geometry_Brep_IsPointInside">IsPointInside Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_IsValidGeometry.htm" title="IsValidGeometry Method " tocid="M_Rhino_Geometry_Brep_IsValidGeometry">IsValidGeometry Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_IsValidTolerancesAndFlags.htm" title="IsValidTolerancesAndFlags Method " tocid="M_Rhino_Geometry_Brep_IsValidTolerancesAndFlags">IsValidTolerancesAndFlags Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_IsValidTopology.htm" title="IsValidTopology Method " tocid="M_Rhino_Geometry_Brep_IsValidTopology">IsValidTopology Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_Join.htm" title="Join Method " tocid="M_Rhino_Geometry_Brep_Join">Join Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_JoinBreps.htm" title="JoinBreps Method " tocid="M_Rhino_Geometry_Brep_JoinBreps">JoinBreps Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_JoinEdges.htm" title="JoinEdges Method " tocid="M_Rhino_Geometry_Brep_JoinEdges">JoinEdges Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_JoinNakedEdges.htm" title="JoinNakedEdges Method " tocid="M_Rhino_Geometry_Brep_JoinNakedEdges">JoinNakedEdges Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_MakeValidForV2.htm" title="MakeValidForV2 Method " tocid="M_Rhino_Geometry_Brep_MakeValidForV2">MakeValidForV2 Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_MergeBreps.htm" title="MergeBreps Method " tocid="M_Rhino_Geometry_Brep_MergeBreps">MergeBreps Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_MergeCoplanarFaces.htm" title="MergeCoplanarFaces Method " tocid="Overload_Rhino_Geometry_Brep_MergeCoplanarFaces">MergeCoplanarFaces Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_MergeSurfaces.htm" title="MergeSurfaces Method " tocid="Overload_Rhino_Geometry_Brep_MergeSurfaces">MergeSurfaces Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_RebuildTrimsForV2.htm" title="RebuildTrimsForV2 Method " tocid="M_Rhino_Geometry_Brep_RebuildTrimsForV2">RebuildTrimsForV2 Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_RemoveFins.htm" title="RemoveFins Method " tocid="M_Rhino_Geometry_Brep_RemoveFins">RemoveFins Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_RemoveHoles.htm" title="RemoveHoles Method " tocid="Overload_Rhino_Geometry_Brep_RemoveHoles">RemoveHoles Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_Repair.htm" title="Repair Method " tocid="M_Rhino_Geometry_Brep_Repair">Repair Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_SetTolerancesBoxesAndFlags.htm" title="SetTolerancesBoxesAndFlags Method " tocid="Overload_Rhino_Geometry_Brep_SetTolerancesBoxesAndFlags">SetTolerancesBoxesAndFlags Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_SetTrimIsoFlags.htm" title="SetTrimIsoFlags Method " tocid="M_Rhino_Geometry_Brep_SetTrimIsoFlags">SetTrimIsoFlags Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_SetVertices.htm" title="SetVertices Method " tocid="M_Rhino_Geometry_Brep_SetVertices">SetVertices Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_Split.htm" title="Split Method " tocid="Overload_Rhino_Geometry_Brep_Split">Split Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_Standardize.htm" title="Standardize Method " tocid="M_Rhino_Geometry_Brep_Standardize">Standardize Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_TransformComponent.htm" title="TransformComponent Method " tocid="M_Rhino_Geometry_Brep_TransformComponent">TransformComponent Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_Trim.htm" title="Trim Method " tocid="Overload_Rhino_Geometry_Brep_Trim">Trim Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_TryConvertBrep.htm" title="TryConvertBrep Method " tocid="M_Rhino_Geometry_Brep_TryConvertBrep">TryConvertBrep Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_UnjoinEdges.htm" title="UnjoinEdges Method " tocid="M_Rhino_Geometry_Brep_UnjoinEdges">UnjoinEdges Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Brep Methods</h1></td></tr></table><span class="introStyle"></span> <p>The <a href="T_Rhino_Geometry_Brep.htm">Brep</a> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID0RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_AddEdgeCurve.htm">AddEdgeCurve</a></td><td><div class="summary">
            Add a 3d curve used by the brep edges
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_AddSurface.htm">AddSurface</a></td><td><div class="summary">
            Adds a 3D surface used by BrepFace.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_AddTrimCurve.htm">AddTrimCurve</a></td><td><div class="summary">
            Add a 2d curve used by the brep trims
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_Append.htm">Append</a></td><td><div class="summary">
            Appends a copy of another brep to this and updates indices of appended
            brep parts.  Duplicates are not removed
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_CapPlanarHoles.htm">CapPlanarHoles</a></td><td><div class="summary">
            Returns a new Brep that is equivalent to this Brep with all planar holes capped.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_ChangeSeam.htm">ChangeSeam</a></td><td><div class="summary">
            Change the seam of a closed trimmed surface.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_ClosestPoint.htm">ClosestPoint(Point3d)</a></td><td><div class="summary">
            Finds a point on the brep that is closest to testPoint.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_ClosestPoint_1.htm">ClosestPoint(Point3d, Point3d<span id="LSTF75208A5_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_0?cpp=%");</script>, ComponentIndex<span id="LSTF75208A5_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_1?cpp=%");</script>, Double<span id="LSTF75208A5_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_2?cpp=%");</script>, Double<span id="LSTF75208A5_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_3?cpp=%");</script>, Double, Vector3d<span id="LSTF75208A5_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_4?cpp=%");</script>)</a></td><td><div class="summary">
            Finds a point on the Brep that is closest to testPoint.
            The method searches all Brep faces looking for the one closest to testPoint.
            When found, if the closest point falls on the inactive region of the face, then 
            the method finds the face's edge that is closest to testPoint.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_Compact.htm">Compact</a></td><td><div class="summary">
            Deletes any unreferenced objects from arrays, re-indexes as needed, and
            shrinks arrays to minimum required size. Uses CUllUnused* members to
            delete any unreferenced objects from arrays.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_ComponentIndex.htm">ComponentIndex</a></td><td><div class="summary">
            If this piece of geometry is a component in something larger, like a BrepEdge
            in a Brep, then this function returns the component index.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Rhino_Runtime_CommonObject_ConstructConstObject.htm">ConstructConstObject</a></td><td><div class="summary">
            Assigns a parent object and a sub-object index to this.
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CopyTrimCurves.htm">CopyTrimCurves</a></td><td><div class="summary">
            Copy all trims from a Brep face onto a surface.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateBaseballSphere.htm">CreateBaseballSphere</a></td><td><div class="summary">
            Creates a brep representation of the sphere with two similar trimmed NURBS surfaces, and no singularities.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateBlendShape.htm">CreateBlendShape</a></td><td><div class="summary">
            Makes a curve blend between points on two surface edges. The blend will be tangent to the surfaces and perpendicular to the edges.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateBlendSurface.htm">CreateBlendSurface</a></td><td><div class="summary">
            Makes a surface blend between two surface edges.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateBooleanDifference.htm">CreateBooleanDifference(Brep, Brep, Double)</a></td><td><div class="summary">
            Compute the Solid Difference of two Breps.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Brep_CreateBooleanDifference_2.htm">CreateBooleanDifference(IEnumerable<span id="LSTF75208A5_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_5?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Brep<span id="LSTF75208A5_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_6?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IEnumerable<span id="LSTF75208A5_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_7?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Brep<span id="LSTF75208A5_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_8?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double)</a></td><td><div class="summary">
            Compute the Solid Difference of two sets of Breps.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateBooleanDifference_1.htm">CreateBooleanDifference(Brep, Brep, Double, Boolean)</a></td><td><div class="summary">
            Compute the Solid Difference of two Breps.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Brep_CreateBooleanDifference_3.htm">CreateBooleanDifference(IEnumerable<span id="LSTF75208A5_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_9?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Brep<span id="LSTF75208A5_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_10?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IEnumerable<span id="LSTF75208A5_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_11?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Brep<span id="LSTF75208A5_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_12?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double, Boolean)</a></td><td><div class="summary">
            Compute the Solid Difference of two sets of Breps.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateBooleanIntersection.htm">CreateBooleanIntersection(Brep, Brep, Double)</a></td><td><div class="summary">
            Compute the Solid Intersection of two Breps.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateBooleanIntersection_2.htm">CreateBooleanIntersection(IEnumerable<span id="LSTF75208A5_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_13?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Brep<span id="LSTF75208A5_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_14?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IEnumerable<span id="LSTF75208A5_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_15?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Brep<span id="LSTF75208A5_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_16?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double)</a></td><td><div class="summary">
            Compute the Solid Intersection of two sets of Breps.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateBooleanIntersection_1.htm">CreateBooleanIntersection(Brep, Brep, Double, Boolean)</a></td><td><div class="summary">
            Compute the Solid Intersection of two Breps.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateBooleanIntersection_3.htm">CreateBooleanIntersection(IEnumerable<span id="LSTF75208A5_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_17?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Brep<span id="LSTF75208A5_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_18?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IEnumerable<span id="LSTF75208A5_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_19?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Brep<span id="LSTF75208A5_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_20?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double, Boolean)</a></td><td><div class="summary">
            Compute the Solid Intersection of two sets of Breps.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateBooleanSplit.htm">CreateBooleanSplit(Brep, Brep, Double)</a></td><td><div class="summary">
            Splits shared areas of Breps and creates separate Breps from the shared and unshared parts.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateBooleanSplit_1.htm">CreateBooleanSplit(IEnumerable<span id="LSTF75208A5_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_21?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Brep<span id="LSTF75208A5_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_22?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IEnumerable<span id="LSTF75208A5_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_23?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Brep<span id="LSTF75208A5_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_24?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double)</a></td><td><div class="summary">
            Splits shared areas of Breps and creates separate Breps from the shared and unshared parts.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateBooleanUnion.htm">CreateBooleanUnion(IEnumerable<span id="LSTF75208A5_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_25?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Brep<span id="LSTF75208A5_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_26?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double)</a></td><td><div class="summary">
            Compute the Boolean Union of a set of Breps.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateBooleanUnion_1.htm">CreateBooleanUnion(IEnumerable<span id="LSTF75208A5_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_27?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Brep<span id="LSTF75208A5_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_28?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double, Boolean)</a></td><td><div class="summary">
            Compute the Boolean Union of a set of Breps.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateChamferSurface_1.htm">CreateChamferSurface(BrepFace, Point2d, Double, BrepFace, Point2d, Double, Boolean, Double)</a></td><td><div class="summary">
            Creates a ruled surface as a bevel between two input surface edges.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateChamferSurface.htm">CreateChamferSurface(BrepFace, Point2d, Double, BrepFace, Point2d, Double, Boolean, Boolean, Double, <span id="LSTF75208A5_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_29?cpp=array&lt;");</script>Brep<span id="LSTF75208A5_30"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_30?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTF75208A5_31"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_31?cpp=%");</script>, <span id="LSTF75208A5_32"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_32?cpp=array&lt;");</script>Brep<span id="LSTF75208A5_33"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_33?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTF75208A5_34"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_34?cpp=%");</script>)</a></td><td><div class="summary">
            Creates a ruled surface as a bevel between two input surface edges.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateContourCurves.htm">CreateContourCurves(Brep, Plane)</a></td><td><div class="summary">
            Constructs the contour curves for a brep, using a slicing plane.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Brep_CreateContourCurves_1.htm">CreateContourCurves(Brep, Point3d, Point3d, Double)</a></td><td><div class="summary">
            Constructs the contour curves for a brep at a specified interval.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateCurvatureAnalysisMesh.htm">CreateCurvatureAnalysisMesh</a></td><td><div class="summary">
            Create an array of analysis meshes for the brep using the specified settings.
            Meshes aren't set on the brep.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateDevelopableLoft_1.htm">CreateDevelopableLoft(NurbsCurve, NurbsCurve, IEnumerable<span id="LSTF75208A5_35"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_35?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Point2d<span id="LSTF75208A5_36"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_36?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Creates a single developable surface between two curves.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateDevelopableLoft.htm">CreateDevelopableLoft(Curve, Curve, Boolean, Boolean, Int32)</a></td><td><div class="summary">
            Creates a single developable surface between two curves.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Brep_CreateEdgeSurface.htm">CreateEdgeSurface</a></td><td><div class="summary">
            Constructs a coons patch from 2, 3, or 4 curves.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFilletEdges.htm">CreateFilletEdges</a></td><td><div class="summary">
            Fillets, chamfers, or blends the edges of a brep.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFilletSurface_1.htm">CreateFilletSurface(BrepFace, Point2d, BrepFace, Point2d, Double, Boolean, Double)</a></td><td><div class="summary">
            Creates a constant-radius round surface between two surfaces.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFilletSurface.htm">CreateFilletSurface(BrepFace, Point2d, BrepFace, Point2d, Double, Boolean, Boolean, Double, <span id="LSTF75208A5_37"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_37?cpp=array&lt;");</script>Brep<span id="LSTF75208A5_38"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_38?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTF75208A5_39"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_39?cpp=%");</script>, <span id="LSTF75208A5_40"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_40?cpp=array&lt;");</script>Brep<span id="LSTF75208A5_41"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_41?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTF75208A5_42"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_42?cpp=%");</script>)</a></td><td><div class="summary">
             Creates a constant-radius round surface between two surfaces.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromBox.htm">CreateFromBox(BoundingBox)</a></td><td><div class="summary">
            Constructs new brep that matches a bounding box.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromBox_1.htm">CreateFromBox(Box)</a></td><td><div class="summary">
            Constructs new brep that matches an aligned box.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromBox_2.htm">CreateFromBox(IEnumerable<span id="LSTF75208A5_43"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_43?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Point3d<span id="LSTF75208A5_44"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_44?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Constructs new brep from 8 corner points.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromCone.htm">CreateFromCone</a></td><td><div class="summary">
            Constructs a Brep representation of the cone with a single
            face for the cone, an edge along the cone seam, 
            and vertices at the base and apex ends of this seam edge.
            The optional cap is a single face with one circular edge 
            starting and ending at the base vertex.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromCornerPoints_1.htm">CreateFromCornerPoints(Point3d, Point3d, Point3d, Double)</a></td><td><div class="summary">
            Makes a Brep with one face from three corner points.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromCornerPoints.htm">CreateFromCornerPoints(Point3d, Point3d, Point3d, Point3d, Double)</a></td><td><div class="summary">
            Makes a Brep with one face from four corner points.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromCylinder.htm">CreateFromCylinder</a></td><td><div class="summary">
            Constructs a Brep definition of a cylinder.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromJoinedEdges.htm">CreateFromJoinedEdges</a></td><td><div class="summary">
            Joins two naked edges, or edges that are coincident or close together, from two Breps.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromLoft.htm">CreateFromLoft(IEnumerable<span id="LSTF75208A5_45"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_45?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Curve<span id="LSTF75208A5_46"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_46?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Point3d, Point3d, LoftType, Boolean)</a></td><td><div class="summary">
            Constructs one or more Breps by lofting through a set of curves.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromLoft_1.htm">CreateFromLoft(IEnumerable<span id="LSTF75208A5_47"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_47?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Curve<span id="LSTF75208A5_48"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_48?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Point3d, Point3d, Boolean, Boolean, BrepTrim, BrepTrim, LoftType, Boolean)</a></td><td><div class="summary">
            Constructs one or more Breps by lofting through a set of curves, optionally matching start and
            end tangents of surfaces when first and/or last loft curves are surface edges
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromLoftRebuild.htm">CreateFromLoftRebuild</a></td><td><div class="summary">
            Constructs one or more Breps by lofting through a set of curves. Input for the loft is simplified by
            rebuilding to a specified number of control points.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromLoftRefit.htm">CreateFromLoftRefit</a></td><td><div class="summary">
            Constructs one or more Breps by lofting through a set of curves. Input for the loft is simplified by
            refitting to a specified tolerance.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromMesh.htm">CreateFromMesh</a></td><td><div class="summary">
            Create a brep representation of a mesh
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromOffsetFace.htm">CreateFromOffsetFace</a></td><td><div class="summary">
            Offsets a face including trim information to create a new brep.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromRevSurface.htm">CreateFromRevSurface</a></td><td><div class="summary">
            Constructs a brep form of a surface of revolution.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromSphere.htm">CreateFromSphere</a></td><td><div class="summary">
            Constructs a Brep definition of a sphere.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromSurface.htm">CreateFromSurface</a></td><td><div class="summary">
            Constructs a Brep from a surface. The resulting Brep has an outer boundary made
            from four trims. The trims are ordered so that they run along the south, east,
            north, and then west side of the surface's parameter space.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromSweep_1.htm">CreateFromSweep(Curve, Curve, Boolean, Double)</a></td><td><div class="summary">
            Sweep1 function that fits a surface through a profile curve that define the surface cross-sections
            and one curve that defines a surface edge. 
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromSweep_5.htm">CreateFromSweep(Curve, IEnumerable<span id="LSTF75208A5_49"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_49?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Curve<span id="LSTF75208A5_50"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_50?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Boolean, Double)</a></td><td><div class="summary">
            Sweep1 function that fits a surface through profile curves that define the surface cross-sections
            and one curve that defines a surface edge.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromSweep.htm">CreateFromSweep(Curve, Curve, Curve, Boolean, Double)</a></td><td><div class="summary">
            General 2 rail sweep. If you are not producing the sweep results that you are after, then
            use the SweepTwoRail class with options to generate the swept geometry.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromSweep_3.htm">CreateFromSweep(Curve, Curve, IEnumerable<span id="LSTF75208A5_51"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_51?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Curve<span id="LSTF75208A5_52"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_52?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Boolean, Double)</a></td><td><div class="summary">
            General 2 rail sweep. If you are not producing the sweep results that you are after, then
            use the SweepTwoRail class with options to generate the swept geometry.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromSweep_2.htm">CreateFromSweep(Curve, Curve, IEnumerable<span id="LSTF75208A5_53"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_53?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Curve<span id="LSTF75208A5_54"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_54?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Point3d, Point3d, Boolean, Double, SweepRebuild, Int32, Double, Boolean)</a></td><td><div class="summary">
            Sweep2 function that fits a surface through profile curves that define the surface cross-sections
            and two curves that defines the surface edges.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromSweep_4.htm">CreateFromSweep(Curve, IEnumerable<span id="LSTF75208A5_55"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_55?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Curve<span id="LSTF75208A5_56"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_56?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Point3d, Point3d, SweepFrame, Vector3d, Boolean, SweepBlend, SweepMiter, Double, SweepRebuild, Int32, Double)</a></td><td><div class="summary">
            Sweep1 function that fits a surface through a series of profile curves that define the surface cross-sections
            and one curve that defines a surface edge.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromSweepInParts.htm">CreateFromSweepInParts</a></td><td><div class="summary">
            Makes a 2 rail sweep. Like CreateFromSweep but the result is split where parameterization along a rail changes abruptly.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromSweepSegmented.htm">CreateFromSweepSegmented(Curve, Curve, Boolean, Double)</a></td><td><div class="summary">
            Sweep1 function that fits a surface through a profile curve that define the surface cross-sections
            and one curve that defines a surface edge. The Segmented version breaks the rail at curvature kinks
            and sweeps each piece separately, then put the results together into a Brep.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromSweepSegmented_2.htm">CreateFromSweepSegmented(Curve, IEnumerable<span id="LSTF75208A5_57"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_57?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Curve<span id="LSTF75208A5_58"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_58?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Boolean, Double)</a></td><td><div class="summary">
            Sweep1 function that fits a surface through a series of profile curves that define the surface cross-sections
            and one curve that defines a surface edge. The Segmented version breaks the rail at curvature kinks
            and sweeps each piece separately, then put the results together into a Brep.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromSweepSegmented_1.htm">CreateFromSweepSegmented(Curve, IEnumerable<span id="LSTF75208A5_59"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_59?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Curve<span id="LSTF75208A5_60"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_60?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Point3d, Point3d, SweepFrame, Vector3d, Boolean, SweepBlend, SweepMiter, Double, SweepRebuild, Int32, Double)</a></td><td><div class="summary">
            Sweep1 function that fits a surface through a series of profile curves that define the surface cross-sections
            and one curve that defines a surface edge. The Segmented version breaks the rail at curvature kinks
            and sweeps each piece separately, then put the results together into a Brep.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromTaperedExtrude.htm">CreateFromTaperedExtrude(Curve, Double, Vector3d, Point3d, Double, ExtrudeCornerType)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Extrude a curve to a taper making a brep (potentially more than 1)
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromTaperedExtrude_1.htm">CreateFromTaperedExtrude(Curve, Double, Vector3d, Point3d, Double, ExtrudeCornerType, Double, Double)</a></td><td><div class="summary">
            Extrude a curve to a taper making a brep (potentially more than 1)
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateFromTaperedExtrudeWithRef.htm">CreateFromTaperedExtrudeWithRef</a></td><td><div class="summary">
            Creates one or more Breps by extruding a curve a distance along an axis with draft angle.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateOffsetBrep_1.htm">CreateOffsetBrep(Brep, Double, Boolean, Boolean, Double, <span id="LSTF75208A5_61"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_61?cpp=array&lt;");</script>Brep<span id="LSTF75208A5_62"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_62?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTF75208A5_63"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_63?cpp=%");</script>, <span id="LSTF75208A5_64"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_64?cpp=array&lt;");</script>Brep<span id="LSTF75208A5_65"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_65?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTF75208A5_66"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_66?cpp=%");</script>)</a></td><td><div class="summary">
            Offsets a Brep.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateOffsetBrep.htm">CreateOffsetBrep(Brep, Double, Boolean, Boolean, Boolean, Double, <span id="LSTF75208A5_67"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_67?cpp=array&lt;");</script>Brep<span id="LSTF75208A5_68"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_68?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTF75208A5_69"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_69?cpp=%");</script>, <span id="LSTF75208A5_70"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_70?cpp=array&lt;");</script>Brep<span id="LSTF75208A5_71"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_71?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTF75208A5_72"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_72?cpp=%");</script>)</a></td><td><div class="summary">
            Offsets a Brep.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreatePatch.htm">CreatePatch(IEnumerable<span id="LSTF75208A5_73"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_73?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>GeometryBase<span id="LSTF75208A5_74"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_74?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Surface, Double)</a></td><td><div class="summary">
            Constructs a brep patch.
            <p>This is the simple version of fit that uses a specified starting surface.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreatePatch_2.htm">CreatePatch(IEnumerable<span id="LSTF75208A5_75"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_75?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>GeometryBase<span id="LSTF75208A5_76"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_76?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Int32, Int32, Double)</a></td><td><div class="summary">
            Constructs a brep patch.
            <p>This is the simple version of fit that uses a plane with u x v spans.
            It makes a plane by fitting to the points from the input geometry to use as the starting surface.
            The surface has the specified u and v span count.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreatePatch_1.htm">CreatePatch(IEnumerable<span id="LSTF75208A5_77"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_77?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>GeometryBase<span id="LSTF75208A5_78"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_78?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Surface, Int32, Int32, Boolean, Boolean, Double, Double, Double, <span id="LSTF75208A5_79"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_79?cpp=array&lt;");</script>Boolean<span id="LSTF75208A5_80"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_80?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Double)</a></td><td><div class="summary">
             Constructs a brep patch using all controls
             </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreatePipe_1.htm">CreatePipe(Curve, Double, Boolean, PipeCapMode, Boolean, Double, Double)</a></td><td><div class="summary">
            Creates a single walled pipe.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreatePipe.htm">CreatePipe(Curve, IEnumerable<span id="LSTF75208A5_81"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_81?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LSTF75208A5_82"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_82?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IEnumerable<span id="LSTF75208A5_83"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_83?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LSTF75208A5_84"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_84?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Boolean, PipeCapMode, Boolean, Double, Double)</a></td><td><div class="summary">
            Creates a single walled pipe.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreatePlanarBreps_2.htm">CreatePlanarBreps(Curve)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Constructs a set of planar breps as outlines by the loops.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreatePlanarBreps_4.htm">CreatePlanarBreps(IEnumerable<span id="LSTF75208A5_85"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_85?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Curve<span id="LSTF75208A5_86"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_86?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Constructs a set of planar breps as outlines by the loops.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreatePlanarBreps.htm">CreatePlanarBreps(CurveList)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Constructs a set of planar Breps as outlines by the loops.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreatePlanarBreps_3.htm">CreatePlanarBreps(Curve, Double)</a></td><td><div class="summary">
            Constructs a set of planar breps as outlines by the loops.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreatePlanarBreps_5.htm">CreatePlanarBreps(IEnumerable<span id="LSTF75208A5_87"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_87?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Curve<span id="LSTF75208A5_88"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_88?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double)</a></td><td><div class="summary">
            Constructs a set of planar breps as outlines by the loops.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreatePlanarBreps_1.htm">CreatePlanarBreps(CurveList, Double)</a></td><td><div class="summary">
            Constructs a set of planar Breps as outlines by the loops.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreatePlanarDifference.htm">CreatePlanarDifference</a></td><td><div class="summary">
            CreatePlanarDifference
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreatePlanarIntersection.htm">CreatePlanarIntersection</a></td><td><div class="summary">
            CreatePlanarIntersection
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreatePlanarUnion_1.htm">CreatePlanarUnion(IEnumerable<span id="LSTF75208A5_89"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_89?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Brep<span id="LSTF75208A5_90"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_90?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Plane, Double)</a></td><td><div class="summary">
            CreatePlanarUnion
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreatePlanarUnion.htm">CreatePlanarUnion(Brep, Brep, Plane, Double)</a></td><td><div class="summary">
            CreatePlanarUnion
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateQuadSphere.htm">CreateQuadSphere</a></td><td><div class="summary">
            Constructs a Brep definition of a quad sphere.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateShell.htm">CreateShell</a></td><td><div class="summary">
            Creates a hollowed out shell from a solid Brep. Function only operates on simple, solid, manifold Breps.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateSolid.htm">CreateSolid</a></td><td><div class="summary">
            Constructs closed polysurfaces from surfaces and polysurfaces that bound a region in space.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateThickPipe_1.htm">CreateThickPipe(Curve, Double, Double, Boolean, PipeCapMode, Boolean, Double, Double)</a></td><td><div class="summary">
            Creates a double-walled pipe.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateThickPipe.htm">CreateThickPipe(Curve, IEnumerable<span id="LSTF75208A5_91"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_91?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LSTF75208A5_92"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_92?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IEnumerable<span id="LSTF75208A5_93"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_93?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LSTF75208A5_94"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_94?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, IEnumerable<span id="LSTF75208A5_95"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_95?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LSTF75208A5_96"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_96?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Boolean, PipeCapMode, Boolean, Double, Double)</a></td><td><div class="summary">
            Creates a double-walled pipe.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateTrimmedPlane.htm">CreateTrimmedPlane(Plane, Curve)</a></td><td><div class="summary">
            Create a Brep trimmed plane.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateTrimmedPlane_1.htm">CreateTrimmedPlane(Plane, IEnumerable<span id="LSTF75208A5_97"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_97?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Curve<span id="LSTF75208A5_98"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_98?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
            Create a Brep trimmed plane.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateTrimmedSurface.htm">CreateTrimmedSurface(BrepFace, Surface)</a></td><td> <strong>Obsolete. </strong><div class="summary">
            Constructs a Brep using the trimming information of a brep face and a surface. 
            Surface must be roughly the same shape and in the same location as the trimming brep face.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_CreateTrimmedSurface_1.htm">CreateTrimmedSurface(BrepFace, Surface, Double)</a></td><td><div class="summary">
            Constructs a Brep using the trimming information of a brep face and a surface. 
            Surface must be roughly the same shape and in the same location as the trimming brep face.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_CullUnused2dCurves.htm">CullUnused2dCurves</a></td><td><div class="summary">Culls 3d curves not referenced by an edge.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_CullUnused3dCurves.htm">CullUnused3dCurves</a></td><td><div class="summary">Culls 2d curves not referenced by a trim.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_CullUnusedEdges.htm">CullUnusedEdges</a></td><td><div class="summary">Culls edges with m_edge_index == -1.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_CullUnusedFaces.htm">CullUnusedFaces</a></td><td><div class="summary">Culls faces with m_face_index == -1.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_CullUnusedLoops.htm">CullUnusedLoops</a></td><td><div class="summary">Culls loops with m_loop_index == -1.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_CullUnusedSurfaces.htm">CullUnusedSurfaces</a></td><td><div class="summary">Culls surfaces not referenced by a face.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_CullUnusedTrims.htm">CullUnusedTrims</a></td><td><div class="summary">Culls trims with m_trim_index == -1.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_CullUnusedVertices.htm">CullUnusedVertices</a></td><td><div class="summary">Culls vertices with m_vertex_index == -1.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_DestroyRegionTopology.htm">DestroyRegionTopology</a></td><td><div class="summary">
            Destroys a Brep's region topology information.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Runtime_CommonObject_Dispose.htm">Dispose<span id="LSTF75208A5_99"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_99?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Actively reclaims unmanaged resources that this instance uses.
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_Dispose.htm">Dispose(Boolean)</a></td><td><div class="summary">
            Overridden in order to destroy local display cache information
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_Duplicate.htm">Duplicate</a></td><td><div class="summary">
            Copies this brep.
            </div> (Overrides <a href="M_Rhino_Geometry_GeometryBase_Duplicate.htm">GeometryBase<span id="LSTF75208A5_100"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_100?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Duplicate<span id="LSTF75208A5_101"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_101?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_DuplicateBrep.htm">DuplicateBrep</a></td><td><div class="summary">
            Same as <a href="M_Rhino_Geometry_Brep_Duplicate.htm">Duplicate<span id="LSTF75208A5_102"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_102?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>, but already performs a cast to a brep.
            <p>This cast always succeeds.</p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_DuplicateEdgeCurves.htm">DuplicateEdgeCurves<span id="LSTF75208A5_103"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_103?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Duplicate all the edges of this Brep.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_Brep_DuplicateEdgeCurves_1.htm">DuplicateEdgeCurves(Boolean)</a></td><td><div class="summary">
            Duplicate edges of this Brep.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_DuplicateNakedEdgeCurves.htm">DuplicateNakedEdgeCurves</a></td><td><div class="summary">
            Duplicate naked edges of this Brep.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_DuplicateShallow.htm">DuplicateShallow</a></td><td><div class="summary">
            Constructs a light copy of this object. By "light", it is meant that the same
            underlying data is used until something is done to attempt to change it. For example,
            you could have a shallow copy of a very heavy mesh object and the same underlying
            data will be used when doing things like inspecting the number of faces on the mesh.
            If you modify the location of one of the mesh vertices, the shallow copy will create
            a full duplicate of the underlying mesh data and the shallow copy will become a
            deep copy.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_DuplicateSubBrep.htm">DuplicateSubBrep</a></td><td><div class="summary">
            Copy a subset of this Brep into another Brep.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_DuplicateVertices.htm">DuplicateVertices</a></td><td><div class="summary">
            Duplicate all the corner vertices of this Brep.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Runtime_CommonObject_EnsurePrivateCopy.htm">EnsurePrivateCopy</a></td><td><div class="summary">
            If you want to keep a copy of this class around by holding onto it in a variable after a command
            completes, call EnsurePrivateCopy to make sure that this class is not tied to the document. You can
            call this function as many times as you want.
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.equals#System_Object_Equals_System_Object_" target="_blank">Equals</a></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Rhino_Runtime_CommonObject_Finalize.htm">Finalize</a></td><td><div class="summary">
            Passively reclaims unmanaged resources when the class user did not explicitly call Dispose().
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_FindCoincidentBrepComponents.htm">FindCoincidentBrepComponents</a></td><td><div class="summary">
            Find the indices of all brep faces, edges and vertices that are within tolerance of a test-point.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_Flip.htm">Flip</a></td><td><div class="summary">
            Reverses entire brep orientation of all faces.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_GetArea.htm">GetArea<span id="LSTF75208A5_104"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_104?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Compute the Area of the Brep. If you want proper Area data with moments 
            and error information, use the AreaMassProperties class.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_GetArea_1.htm">GetArea(Double, Double)</a></td><td><div class="summary">
            Compute the Area of the Brep. If you want proper Area data with moments 
            and error information, use the AreaMassProperties class.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_GeometryBase_GetBoundingBox_3.htm">GetBoundingBox(Boolean)</a></td><td><div class="summary">
            Bounding box solver. Gets the world axis aligned bounding box for the geometry.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_Rhino_Geometry_GeometryBase_GetBoundingBox.htm">GetBoundingBox(Plane)</a></td><td><div class="summary">
            Aligned Bounding box solver. Gets the plane aligned bounding box.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_GetBoundingBox_2.htm">GetBoundingBox(Transform)</a></td><td><div class="summary">
            Aligned Bounding box solver. Gets the world axis aligned bounding box for the transformed geometry.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_GetBoundingBox_1.htm">GetBoundingBox(Plane, Box<span id="LSTF75208A5_105"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_105?cpp=%");</script>)</a></td><td><div class="summary">
            Aligned Bounding box solver. Gets the plane aligned bounding box.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.gethashcode#System_Object_GetHashCode" target="_blank">GetHashCode</a></td><td><div class="summary">Serves as the default hash function.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Runtime_CommonObject_GetObjectData.htm">GetObjectData</a></td><td><div class="summary">
            Populates a System.Runtime.Serialization.SerializationInfo with the data needed to serialize the target object.
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_GetPointInside.htm">GetPointInside</a></td><td><div class="summary">
            Finds a point inside of a solid Brep.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_GetRegions.htm">GetRegions</a></td><td><div class="summary">
            Gets an array containing all regions in this brep.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.gettype#System_Object_GetType" target="_blank">GetType</a></td><td><div class="summary">Gets the <a href="https://docs.microsoft.com/dotnet/api/system.type" target="_blank">Type</a> of the current instance.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_GetUserString.htm">GetUserString</a></td><td><div class="summary">
            Gets user string from this geometry.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_GetUserStrings.htm">GetUserStrings</a></td><td><div class="summary">
            Gets a copy of all (user key string, user value string) pairs attached to this geometry.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_GetVolume.htm">GetVolume<span id="LSTF75208A5_106"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_106?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Compute the Volume of the Brep. If you want proper Volume data with moments 
            and error information, use the VolumeMassProperties class.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_GetVolume_1.htm">GetVolume(Double, Double)</a></td><td><div class="summary">
            Compute the Volume of the Brep. If you want proper Volume data with moments 
            and error information, use the VolumeMassProperties class.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_GetWireframe.htm">GetWireframe</a></td><td><div class="summary">
            Constructs all the Wireframe curves for this Brep.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_IsBox.htm">IsBox<span id="LSTF75208A5_107"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_107?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Verifies a Brep is in the form of a solid box.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_IsBox_1.htm">IsBox(Double)</a></td><td><div class="summary">
            Verifies a Brep is in the form of a solid box.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_IsDuplicate.htm">IsDuplicate</a></td><td><div class="summary">See if this and other are same brep geometry.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_IsPointInside.htm">IsPointInside</a></td><td><div class="summary">
            Determines if point is inside a Brep.  This question only makes sense when
            the brep is a closed and manifold.  This function does not check for
            closed or manifold, so result is not valid in those cases.  Intersects
            a line through point with brep, finds the intersection point Q closest
            to point, and looks at face normal at Q.  If the point Q is on an edge
            or the intersection is not transverse at Q, then another line is used.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_IsValidGeometry.htm">IsValidGeometry</a></td><td><div class="summary">
            Expert user function that tests the brep to see if its geometry information is valid.
            The value of brep.IsValidTopology() must be true before brep.IsValidGeometry() can be
            safely called.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_IsValidTolerancesAndFlags.htm">IsValidTolerancesAndFlags</a></td><td><div class="summary">
            Expert user function that tests the brep to see if its tolerances and
            flags are valid.  The values of brep.IsValidTopology() and
            brep.IsValidGeometry() must be true before brep.IsValidTolerancesAndFlags()
            can be safely called.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_IsValidTopology.htm">IsValidTopology</a></td><td><div class="summary">
            Tests the brep to see if its topology information is valid.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Runtime_CommonObject_IsValidWithLog.htm">IsValidWithLog</a></td><td><div class="summary">
            Determines if an object is valid. Also provides a report on errors if this
            object happens not to be valid.
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_Join.htm">Join</a></td><td><div class="summary">
            If any edges of this brep overlap edges of otherBrep, merge a copy of otherBrep into this
            brep joining all edges that overlap within tolerance.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_JoinBreps.htm">JoinBreps</a></td><td><div class="summary">
            Joins the breps in the input array at any overlapping edges to form
            as few as possible resulting breps. There may be more than one brep in the result array.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_JoinEdges.htm">JoinEdges</a></td><td><div class="summary">
            Joins two naked edges, or edges that are coincident or close together.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_JoinNakedEdges.htm">JoinNakedEdges</a></td><td><div class="summary">
            Joins naked edge pairs within the same brep that overlap within tolerance.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_MakeDeformable.htm">MakeDeformable</a></td><td><div class="summary">
            If possible, converts the object into a form that can be accurately modified
            with "squishy" transformations like projections, shears, an non-uniform scaling.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_MakeValidForV2.htm">MakeValidForV2</a></td><td><div class="summary">
            No support is available for this function.
            <p>Expert user function that converts all geometry in Brep to NURB form.</p></div></td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.memberwiseclone#System_Object_MemberwiseClone" target="_blank">MemberwiseClone</a></td><td><div class="summary">Creates a shallow copy of the current <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_MemoryEstimate.htm">MemoryEstimate</a></td><td><div class="summary">
            Computes an estimate of the number of bytes that this object is using in memory.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_MergeBreps.htm">MergeBreps</a></td><td><div class="summary">
            Combines two or more breps into one. A merge is like a boolean union that keeps the inside pieces. This
            function creates non-manifold Breps which in general are unusual in Rhino. You may want to consider using
            JoinBreps or CreateBooleanUnion functions instead.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_MergeCoplanarFaces.htm">MergeCoplanarFaces(Double)</a></td><td><div class="summary">
            Merges adjacent coplanar faces into single faces.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_MergeCoplanarFaces_1.htm">MergeCoplanarFaces(Double, Double)</a></td><td><div class="summary">
            Merges adjacent coplanar faces into single faces.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_MergeSurfaces.htm">MergeSurfaces(Brep, Brep, Double, Double)</a></td><td><div class="summary">
            Merges two surfaces into one surface at untrimmed edges. Both surfaces must be untrimmed and share an edge.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_MergeSurfaces_2.htm">MergeSurfaces(Surface, Surface, Double, Double)</a></td><td><div class="summary">
            Merges two surfaces into one surface at untrimmed edges.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_MergeSurfaces_1.htm">MergeSurfaces(Brep, Brep, Double, Double, Point2d, Point2d, Double, Boolean)</a></td><td><div class="summary">
            Merges two surfaces into one surface at untrimmed edges. Both surfaces must be untrimmed and share an edge.
            </div></td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_NonConstOperation.htm">NonConstOperation</a></td><td><div class="summary">
            Destroy cache handle
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_OnSwitchToNonConst.htm">OnSwitchToNonConst</a></td><td><div class="summary">
            Is called when a non-constant operation occurs.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_RebuildTrimsForV2.htm">RebuildTrimsForV2</a></td><td><div class="summary">
            No support is available for this function.
            <p>Expert user function used by MakeValidForV2 to convert trim
            curves from one surface to its NURBS form. After calling this function,
            you need to change the surface of the face to a NurbsSurface.</p></div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_RemoveFins.htm">RemoveFins</a></td><td><div class="summary">
            Recursively removes any Brep face with a naked edge. This function is only useful for non-manifold Breps.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_RemoveHoles_1.htm">RemoveHoles(Double)</a></td><td><div class="summary">
            Remove all inner loops, or holes, in a Brep.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_RemoveHoles.htm">RemoveHoles(IEnumerable<span id="LSTF75208A5_108"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_108?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>ComponentIndex<span id="LSTF75208A5_109"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_109?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double)</a></td><td><div class="summary">
            Removes inner loops, or holes, in a Brep.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_Repair.htm">Repair</a></td><td><div class="summary">
            Fills in missing or fixes incorrect component information from a Brep. 
            Useful when reading Brep information from other file formats that do not 
            provide as complete of a Brep definition as required by Rhino.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_Rotate.htm">Rotate</a></td><td><div class="summary">
            Rotates the object about the specified axis. A positive rotation 
            angle results in a counter-clockwise rotation about the axis (right hand rule).
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_Scale.htm">Scale</a></td><td><div class="summary">
            Scales the object by the specified factor. The scale is centered at the origin.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_SetTolerancesBoxesAndFlags.htm">SetTolerancesBoxesAndFlags<span id="LSTF75208A5_110"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_110?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Set tolerances and flags in a Brep.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_SetTolerancesBoxesAndFlags_1.htm">SetTolerancesBoxesAndFlags(Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean)</a></td><td><div class="summary">
            Set tolerances and flags in a Brep.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_SetTrimIsoFlags.htm">SetTrimIsoFlags</a></td><td><div class="summary">
            This function can be used to set the BrepTrim::m_iso
            flag. It is intended to be used when creating a Brep from
            a definition that does not include compatible parameter space
            type information.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_SetUserString.htm">SetUserString</a></td><td><div class="summary">
            Attach a user string (key,value combination) to this geometry.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_SetVertices.htm">SetVertices</a></td><td><div class="summary">
            This function can be used to compute vertex information for a
            b-rep when everything but the Vertices array is properly filled in.
            It is intended to be used when creating a Brep from a 
            definition that does not include explicit vertex information.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_Split.htm">Split(Brep, Double)</a></td><td><div class="summary">
            Splits a Brep into pieces using a Brep as a cutter.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_Split_2.htm">Split(IEnumerable<span id="LSTF75208A5_111"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_111?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Brep<span id="LSTF75208A5_112"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_112?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double)</a></td><td><div class="summary">
            Splits a Brep into pieces using Breps as cutters.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_Split_3.htm">Split(IEnumerable<span id="LSTF75208A5_113"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_113?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Curve<span id="LSTF75208A5_114"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_114?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Double)</a></td><td><div class="summary">
            Splits a Brep into pieces using curves, at least partially on the Brep, as cutters.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_Split_1.htm">Split(Brep, Double, Boolean<span id="LSTF75208A5_115"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_115?cpp=%");</script>)</a></td><td><div class="summary">
            Splits a Brep into pieces using a Brep as a cutter.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_Split_4.htm">Split(IEnumerable<span id="LSTF75208A5_116"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_116?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>GeometryBase<span id="LSTF75208A5_117"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF75208A5_117?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Vector3d, Boolean, Double)</a></td><td><div class="summary">
            Splits a Brep into pieces using a combination of curves, to be extruded, and Breps as cutters.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_Standardize.htm">Standardize</a></td><td><div class="summary">
            Standardizes all trims, edges, and faces in the brep.
            After standardizing, there may be unused curves and surfaces in the
            brep.  Call Brep.Compact to remove these unused curves and surfaces.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Runtime_CommonObject_ToJSON.htm">ToJSON</a></td><td><div class="summary">
            Create a JSON string representation of this object
            </div> (Inherited from <a href="T_Rhino_Runtime_CommonObject.htm">CommonObject</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.tostring#System_Object_ToString" target="_blank">ToString</a></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_Transform.htm">Transform</a></td><td><div class="summary">
            Transforms the geometry. If the input Transform has a SimilarityType of
            OrientationReversing, you may want to consider flipping the transformed
            geometry after calling this function when it makes sense. For example,
            you may want to call Flip() on a Brep after transforming it.
            </div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_TransformComponent.htm">TransformComponent</a></td><td><div class="summary">
            Transform an array of Brep components, bend neighbors to match, and leave the rest fixed.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_Translate.htm">Translate(Vector3d)</a></td><td><div class="summary">Translates the object along the specified vector.</div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_GeometryBase_Translate_1.htm">Translate(Double, Double, Double)</a></td><td><div class="summary">Translates the object along the specified vector.</div> (Inherited from <a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase</a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_Trim.htm">Trim(Brep, Double)</a></td><td><div class="summary">
            Trims a brep with an oriented cutter. The parts of the brep that lie inside
            (opposite the normal) of the cutter are retained while the parts to the
            outside (in the direction of the normal) are discarded.  If the Cutter is
            closed, then a connected component of the Brep that does not intersect the
            cutter is kept if and only if it is contained in the inside of cutter.
            That is the region bounded by cutter opposite from the normal of cutter,
            If cutter is not closed all these components are kept.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_Trim_1.htm">Trim(Plane, Double)</a></td><td><div class="summary">
            Trims a Brep with an oriented cutter.  The parts of Brep that lie inside
            (opposite the normal) of the cutter are retained while the parts to the
            outside ( in the direction of the normal ) are discarded. A connected
            component of Brep that does not intersect the cutter is kept if and only
            if it is contained in the inside of Cutter.  That is the region bounded by
            cutter opposite from the normal of cutter, or in the case of a Plane cutter
            the half space opposite from the plane normal.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Rhino_Geometry_Brep_TryConvertBrep.htm">TryConvertBrep</a></td><td><div class="summary">
            Attempts to convert a generic Geometry object into a Brep.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Geometry_Brep_UnjoinEdges.htm">UnjoinEdges</a></td><td><div class="summary">
            Un-joins, or separates, edges within the Brep. Note, seams in closed surfaces will not separate.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID1RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_Geometry_Brep.htm">Brep Class</a></div><div class="seeAlsoStyle"><a href="N_Rhino_Geometry.htm">Rhino.Geometry Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.17.22102.05000 (Last updated: 4/21/2022)<br />Copyright © 2009-2022 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>