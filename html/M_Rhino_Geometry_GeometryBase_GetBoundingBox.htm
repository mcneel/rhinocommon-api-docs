<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>GeometryBase.GetBoundingBox Method (Plane)</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Rhino.Geometry.GeometryBase.GetBoundingBox(Rhino.Geometry.Plane)" /><meta name="Description" content="Aligned Bounding box solver. Gets the plane aligned bounding box." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Geometry" /><meta name="file" content="M_Rhino_Geometry_GeometryBase_GetBoundingBox" /><meta name="guid" content="M_Rhino_Geometry_GeometryBase_GetBoundingBox" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_Geometry.htm" title="Rhino.Geometry" tocid="N_Rhino_Geometry">Rhino.Geometry</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_Geometry_GeometryBase.htm" title="GeometryBase Class" tocid="T_Rhino_Geometry_GeometryBase">GeometryBase Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Rhino_Geometry_GeometryBase.htm" title="GeometryBase Methods" tocid="Methods_T_Rhino_Geometry_GeometryBase">GeometryBase Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_GeometryBase_GetBoundingBox.htm" title="GetBoundingBox Method " tocid="Overload_Rhino_Geometry_GeometryBase_GetBoundingBox">GetBoundingBox Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_GeometryBase_GetBoundingBox_3.htm" title="GetBoundingBox Method (Boolean)" tocid="M_Rhino_Geometry_GeometryBase_GetBoundingBox_3">GetBoundingBox Method (Boolean)</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_GeometryBase_GetBoundingBox.htm" title="GetBoundingBox Method (Plane)" tocid="M_Rhino_Geometry_GeometryBase_GetBoundingBox">GetBoundingBox Method (Plane)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_GeometryBase_GetBoundingBox_2.htm" title="GetBoundingBox Method (Transform)" tocid="M_Rhino_Geometry_GeometryBase_GetBoundingBox_2">GetBoundingBox Method (Transform)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_GeometryBase_GetBoundingBox_1.htm" title="GetBoundingBox Method (Plane, Box)" tocid="M_Rhino_Geometry_GeometryBase_GetBoundingBox_1">GetBoundingBox Method (Plane, Box)</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>GeometryBase<span id="LSTB0805B5E_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0805B5E_0?cpp=::|nu=.");</script>GetBoundingBox Method (Plane)</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Aligned Bounding box solver. Gets the plane aligned bounding box.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino_Geometry.htm">Rhino.Geometry</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="since"><strong>Since:</strong> 5.0</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">BoundingBox</span> <span class="identifier">GetBoundingBox</span>(
	<span class="identifier">Plane</span> <span class="parameter">plane</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">GetBoundingBox</span> ( 
	<span class="parameter">plane</span> <span class="keyword">As</span> <span class="identifier">Plane</span>
) <span class="keyword">As</span> <span class="identifier">BoundingBox</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">plane</span></dt><dd>Type: <a href="T_Rhino_Geometry_Plane.htm">Rhino.Geometry<span id="LSTB0805B5E_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0805B5E_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Plane</a><br />Orientation plane for BoundingBox.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="T_Rhino_Geometry_BoundingBox.htm">BoundingBox</a><br />A BoundingBox in plane coordinates.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBBBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','cs','1','2');return false;">C#</a></div><div id="ID0EBBBBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBBBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">partial</span> <span class="highlight-keyword">class</span> Examples
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> Rhino.Commands.Result CurveBoundingBox(Rhino.RhinoDoc doc)
  {
    <span class="highlight-comment">// Select a curve object</span>
    Rhino.DocObjects.ObjRef rhObject;
    <span class="highlight-keyword">var</span> rc = Rhino.Input.RhinoGet.GetOneObject(<span class="highlight-literal">"Select curve"</span>, <span class="highlight-keyword">false</span>, Rhino.DocObjects.ObjectType.Curve, <span class="highlight-keyword">out</span> rhObject);
    <span class="highlight-keyword">if</span> (rc != Rhino.Commands.Result.Success)
      <span class="highlight-keyword">return</span> rc;

    <span class="highlight-comment">// Validate selection</span>
    <span class="highlight-keyword">var</span> curve = rhObject.Curve();
    <span class="highlight-keyword">if</span> (curve == <span class="highlight-keyword">null</span>)
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure;

    <span class="highlight-comment">// Get the active view's construction plane</span>
    <span class="highlight-keyword">var</span> view = doc.Views.ActiveView;
    <span class="highlight-keyword">if</span> (view == <span class="highlight-keyword">null</span>)
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure;
    <span class="highlight-keyword">var</span> plane = view.ActiveViewport.ConstructionPlane();

    <span class="highlight-comment">// Compute the tight bounding box of the curve in world coordinates</span>
    <span class="highlight-keyword">var</span> bbox = curve.GetBoundingBox(<span class="highlight-keyword">true</span>);
    <span class="highlight-keyword">if</span> (!bbox.IsValid)
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure;

    <span class="highlight-comment">// Print the min and max box coordinates in world coordinates</span>
    Rhino.RhinoApp.WriteLine(<span class="highlight-literal">"World min: {0}"</span>, bbox.Min);
    Rhino.RhinoApp.WriteLine(<span class="highlight-literal">"World max: {0}"</span>, bbox.Max);

    <span class="highlight-comment">// Compute the tight bounding box of the curve based on the </span>
    <span class="highlight-comment">// active view's construction plane</span>
    bbox = curve.GetBoundingBox(plane);

    <span class="highlight-comment">// Print the min and max box coordinates in cplane coordinates</span>
    Rhino.RhinoApp.WriteLine(<span class="highlight-literal">"CPlane min: {0}"</span>, bbox.Min);
    Rhino.RhinoApp.WriteLine(<span class="highlight-literal">"CPlane max: {0}"</span>, bbox.Max);
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success;
  }
}</pre></div><div id="ID0EBBBBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Partial</span> <span class="highlight-keyword">Class</span> Examples
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Function</span> CurveBoundingBox(doc <span class="highlight-keyword">As</span> Rhino.RhinoDoc) <span class="highlight-keyword">As</span> Rhino.Commands.Result
    <span class="highlight-comment">' Select a curve object</span>
    <span class="highlight-keyword">Dim</span> rhObject <span class="highlight-keyword">As</span> Rhino.DocObjects.ObjRef = <span class="highlight-keyword">Nothing</span>
    <span class="highlight-keyword">Dim</span> rc = Rhino.Input.RhinoGet.GetOneObject(<span class="highlight-literal">"Select curve"</span>, <span class="highlight-keyword">False</span>, Rhino.DocObjects.ObjectType.Curve, rhObject)
    <span class="highlight-keyword">If</span> rc &lt;&gt; Rhino.Commands.Result.Success <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> rc
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Validate selection</span>
    <span class="highlight-keyword">Dim</span> curve = rhObject.Curve()
    <span class="highlight-keyword">If</span> curve <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Failure
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Get the active view's construction plane</span>
    <span class="highlight-keyword">Dim</span> view = doc.Views.ActiveView
    <span class="highlight-keyword">If</span> view <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Failure
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Dim</span> plane = view.ActiveViewport.ConstructionPlane()

    <span class="highlight-comment">' Compute the tight bounding box of the curve in world coordinates</span>
    <span class="highlight-keyword">Dim</span> bbox = curve.GetBoundingBox(<span class="highlight-keyword">True</span>)
    <span class="highlight-keyword">If</span> <span class="highlight-keyword">Not</span> bbox.IsValid <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Failure
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Print the min and max box coordinates in world coordinates</span>
    Rhino.RhinoApp.WriteLine(<span class="highlight-literal">"World min: {0}"</span>, bbox.Min)
    Rhino.RhinoApp.WriteLine(<span class="highlight-literal">"World max: {0}"</span>, bbox.Max)

    <span class="highlight-comment">' Compute the tight bounding box of the curve based on the </span>
    <span class="highlight-comment">' active view's construction plane</span>
    bbox = curve.GetBoundingBox(plane)

    <span class="highlight-comment">' Print the min and max box coordinates in cplane coordinates</span>
    Rhino.RhinoApp.WriteLine(<span class="highlight-literal">"CPlane min: {0}"</span>, bbox.Min)
    Rhino.RhinoApp.WriteLine(<span class="highlight-literal">"CPlane max: {0}"</span>, bbox.Max)
    <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Success
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBBBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAABBA_tab1" class="codeSnippetContainerTabSingle">Python</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">import</span> Rhino
<span class="highlight-keyword">import</span> scriptcontext

<span class="highlight-keyword">def</span> CurveBoundingBox():
    <span class="highlight-comment"># Select a curve object</span>
    rc, rhobject = Rhino.Input.RhinoGet.GetOneObject(<span class="highlight-literal">"Select curve"</span>, False, Rhino.DocObjects.ObjectType.Curve)
    <span class="highlight-keyword">if</span> rc!=Rhino.Commands.Result.Success: <span class="highlight-keyword">return</span>

    <span class="highlight-comment"># Validate selection</span>
    curve = rhobject.Curve()
    <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> curve: <span class="highlight-keyword">return</span>

    <span class="highlight-comment">## Get the active view's construction plane</span>
    view = scriptcontext.doc.Views.ActiveView
    <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> view: <span class="highlight-keyword">return</span>
    plane = view.ActiveViewport.ConstructionPlane()

    <span class="highlight-comment"># Compute the tight bounding box of the curve in world coordinates</span>
    bbox = curve.GetBoundingBox(True)
    <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> bbox.IsValid: <span class="highlight-keyword">return</span>

    <span class="highlight-comment"># Print the min and max box coordinates in world coordinates</span>
    <span class="highlight-keyword">print</span> <span class="highlight-literal">"World min:"</span>, bbox.Min
    <span class="highlight-keyword">print</span> <span class="highlight-literal">"World max:"</span>, bbox.Max

    <span class="highlight-comment"># Compute the tight bounding box of the curve based on the </span>
    <span class="highlight-comment"># active view's construction plane</span>
    bbox = curve.GetBoundingBox(plane)

    <span class="highlight-comment"># Print the min and max box coordinates in cplane coordinates</span>
    <span class="highlight-keyword">print</span> <span class="highlight-literal">"CPlane min:"</span>, bbox.Min
    <span class="highlight-keyword">print</span> <span class="highlight-literal">"CPlane max:"</span>, bbox.Max

<span class="highlight-keyword">if</span> __name__==<span class="highlight-literal">"__main__"</span>:
    CurveBoundingBox()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_Geometry_GeometryBase.htm">GeometryBase Class</a></div><div class="seeAlsoStyle"><a href="Overload_Rhino_Geometry_GeometryBase_GetBoundingBox.htm">GetBoundingBox Overload</a></div><div class="seeAlsoStyle"><a href="N_Rhino_Geometry.htm">Rhino.Geometry Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.16.22067.13000 (Last updated: 3/10/2022)<br />Copyright © 2009-2022 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>