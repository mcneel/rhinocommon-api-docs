<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>HatchObject.HatchGeometry Property </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="HatchGeometry property" /><meta name="System.Keywords" content="HatchObject.HatchGeometry property" /><meta name="Microsoft.Help.F1" content="Rhino.DocObjects.HatchObject.HatchGeometry" /><meta name="Microsoft.Help.F1" content="Rhino.DocObjects.HatchObject.get_HatchGeometry" /><meta name="Microsoft.Help.Id" content="P:Rhino.DocObjects.HatchObject.HatchGeometry" /><meta name="Description" content="summaryP:Rhino.DocObjects.HatchObject.HatchGeometry" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.DocObjects" /><meta name="file" content="P_Rhino_DocObjects_HatchObject_HatchGeometry" /><meta name="guid" content="P_Rhino_DocObjects_HatchObject_HatchGeometry" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_DocObjects.htm" title="Rhino.DocObjects" tocid="N_Rhino_DocObjects">Rhino.DocObjects</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_DocObjects_HatchObject.htm" title="HatchObject Class" tocid="T_Rhino_DocObjects_HatchObject">HatchObject Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Properties_T_Rhino_DocObjects_HatchObject.htm" title="HatchObject Properties" tocid="Properties_T_Rhino_DocObjects_HatchObject">HatchObject Properties</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/P_Rhino_DocObjects_HatchObject_HatchGeometry.htm" title="HatchGeometry Property " tocid="P_Rhino_DocObjects_HatchObject_HatchGeometry">HatchGeometry Property </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>HatchObject<span id="LST3E55D7D3_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST3E55D7D3_0?cpp=::|nu=.");</script>HatchGeometry Property </h1></td></tr></table><span class="introStyle"></span> <div class="summary"><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "P:Rhino.DocObjects.HatchObject.HatchGeometry"]</p></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino_DocObjects.htm">Rhino.DocObjects</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="since"><strong>Since:</strong> 5.0</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">Hatch</span> <span class="identifier">HatchGeometry</span> { <span class="keyword">get</span>; }</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">ReadOnly</span> <span class="keyword">Property</span> <span class="identifier">HatchGeometry</span> <span class="keyword">As</span> <span class="identifier">Hatch</span>
	<span class="keyword">Get</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Property Value</h4>Type: <a href="T_Rhino_Geometry_Hatch.htm">Hatch</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBCBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBCBA','cs','1','2');return false;">C#</a></div><div id="ID0EBBCBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBCBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBCBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBCBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBCBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Rhino;
<span class="highlight-keyword">using</span> Rhino.DocObjects;
<span class="highlight-keyword">using</span> Rhino.Commands;
<span class="highlight-keyword">using</span> Rhino.Input;
<span class="highlight-keyword">using</span> Rhino.Input.Custom;

<span class="highlight-keyword">namespace</span> examples_cs
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> ReplaceHatchPatternCommand : Rhino.Commands.Command
  {
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">string</span> EnglishName
    {
      <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-literal">"csReplaceHatchPattern"</span>; }
    }

    <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> Result RunCommand(RhinoDoc doc, RunMode mode)
    {
      ObjRef[] obj_refs;
      <span class="highlight-keyword">var</span> rc = RhinoGet.GetMultipleObjects(<span class="highlight-literal">"Select hatches to replace"</span>, <span class="highlight-keyword">false</span>, ObjectType.Hatch, <span class="highlight-keyword">out</span> obj_refs);
      <span class="highlight-keyword">if</span> (rc != Result.Success || obj_refs == <span class="highlight-keyword">null</span>)
        <span class="highlight-keyword">return</span> rc;

      <span class="highlight-keyword">var</span> gs = <span class="highlight-keyword">new</span> GetString();
      gs.SetCommandPrompt(<span class="highlight-literal">"Name of replacement hatch pattern"</span>);
      gs.AcceptNothing(<span class="highlight-keyword">false</span>);
      gs.Get();
      <span class="highlight-keyword">if</span> (gs.CommandResult() != Result.Success)
        <span class="highlight-keyword">return</span> gs.CommandResult();
      <span class="highlight-keyword">var</span> hatch_name = gs.StringResult();

      <span class="highlight-keyword">var</span> pattern_index = doc.HatchPatterns.Find(hatch_name, <span class="highlight-keyword">true</span>);

      <span class="highlight-keyword">if</span> (pattern_index &lt; <span class="highlight-number">0</span>)
      {
        RhinoApp.WriteLine(<span class="highlight-literal">"The hatch pattern '{0}' not found  in the document."</span>, hatch_name);
        <span class="highlight-keyword">return</span> Result.Nothing;
      }

      <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> obj_ref <span class="highlight-keyword">in</span> obj_refs)
      {
        <span class="highlight-keyword">var</span> hatch_object = obj_ref.Object() <span class="highlight-keyword">as</span> HatchObject;
        <span class="highlight-keyword">if</span> (hatch_object.HatchGeometry.PatternIndex != pattern_index)
        {
          hatch_object.HatchGeometry.PatternIndex = pattern_index;
          hatch_object.CommitChanges();
        }
      }
      doc.Views.Redraw();
      <span class="highlight-keyword">return</span> Result.Success;
    }
  }
}</pre></div><div id="ID0EBBCBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Imports</span> Rhino
<span class="highlight-keyword">Imports</span> Rhino.DocObjects
<span class="highlight-keyword">Imports</span> Rhino.Commands
<span class="highlight-keyword">Imports</span> Rhino.Input
<span class="highlight-keyword">Imports</span> Rhino.Input.Custom

<span class="highlight-keyword">Namespace</span> examples_vb
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> ReplaceHatchPatternCommand
    <span class="highlight-keyword">Inherits</span> Rhino.Commands.Command
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">ReadOnly</span> <span class="highlight-keyword">Property</span> EnglishName() <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span>
      <span class="highlight-keyword">Get</span>
        <span class="highlight-keyword">Return</span> <span class="highlight-literal">"vbReplaceHatchPattern"</span>
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">Get</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Property</span>

    <span class="highlight-keyword">Protected</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">Function</span> RunCommand(doc <span class="highlight-keyword">As</span> RhinoDoc, mode <span class="highlight-keyword">As</span> RunMode) <span class="highlight-keyword">As</span> Result
      <span class="highlight-keyword">Dim</span> obj_refs <span class="highlight-keyword">As</span> ObjRef() = <span class="highlight-keyword">Nothing</span>
      <span class="highlight-keyword">Dim</span> rc = RhinoGet.GetMultipleObjects(<span class="highlight-literal">"Select hatches to replace"</span>, <span class="highlight-keyword">False</span>, ObjectType.Hatch, obj_refs)
      <span class="highlight-keyword">If</span> rc &lt;&gt; Result.Success <span class="highlight-keyword">OrElse</span> obj_refs <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> rc
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-keyword">Dim</span> gs = <span class="highlight-keyword">New</span> GetString()
      gs.SetCommandPrompt(<span class="highlight-literal">"Name of replacement hatch pattern"</span>)
      gs.AcceptNothing(<span class="highlight-keyword">False</span>)
      gs.[<span class="highlight-keyword">Get</span>]()
      <span class="highlight-keyword">If</span> gs.CommandResult() &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> gs.CommandResult()
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">Dim</span> hatch_name = gs.StringResult()

      <span class="highlight-keyword">Dim</span> pattern_index = doc.HatchPatterns.Find(hatch_name, <span class="highlight-keyword">True</span>)

      <span class="highlight-keyword">If</span> pattern_index &lt; <span class="highlight-number">0</span> <span class="highlight-keyword">Then</span>
        RhinoApp.WriteLine(<span class="highlight-literal">"The hatch pattern "</span><span class="highlight-literal">"{0}"</span><span class="highlight-literal">" not found  in the document."</span>, hatch_name)
        <span class="highlight-keyword">Return</span> Result.[<span class="highlight-keyword">Nothing</span>]
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> obj_ref <span class="highlight-keyword">As</span> ObjRef <span class="highlight-keyword">In</span> obj_refs
        <span class="highlight-keyword">Dim</span> hatch_object = <span class="highlight-keyword">TryCast</span>(obj_ref.[<span class="highlight-keyword">Object</span>](), HatchObject)
        <span class="highlight-keyword">If</span> hatch_object.HatchGeometry.PatternIndex &lt;&gt; pattern_index <span class="highlight-keyword">Then</span>
          hatch_object.HatchGeometry.PatternIndex = pattern_index
          hatch_object.CommitChanges()
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">Next</span>
      doc.Views.Redraw()
      <span class="highlight-keyword">Return</span> Result.Success
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Namespace</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBCBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAACBA_tab1" class="codeSnippetContainerTabSingle">Python</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAACBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAACBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAACBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">from</span> Rhino <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> Rhino.DocObjects <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> Rhino.Commands <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> Rhino.Input <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> Rhino.Input.Custom <span class="highlight-keyword">import</span> *
<span class="highlight-keyword">from</span> scriptcontext <span class="highlight-keyword">import</span> doc

<span class="highlight-keyword">def</span> RunCommand():
  rc, obj_refs = RhinoGet.GetMultipleObjects(<span class="highlight-literal">"Select hatches to replace"</span>, False, ObjectType.Hatch)
  <span class="highlight-keyword">if</span> rc &lt;&gt; Result.Success <span class="highlight-keyword">or</span> obj_refs == None:
    <span class="highlight-keyword">return</span> rc

  gs = GetString()
  gs.SetCommandPrompt(<span class="highlight-literal">"Name of replacement hatch pattern"</span>)
  gs.AcceptNothing(False)
  gs.Get()
  <span class="highlight-keyword">if</span> gs.CommandResult() &lt;&gt; Result.Success:
    <span class="highlight-keyword">return</span> gs.CommandResult()
  hatch_name = gs.StringResult()

  pattern_index = doc.HatchPatterns.Find(hatch_name, True)

  <span class="highlight-keyword">if</span> pattern_index &lt; <span class="highlight-number">0</span>:
    RhinoApp.WriteLine(<span class="highlight-literal">"The hatch pattern \"{0}\" not found  in the document."</span>, hatch_name)
    <span class="highlight-keyword">return</span> Result.Nothing

  <span class="highlight-keyword">for</span> obj_ref <span class="highlight-keyword">in</span> obj_refs:
    hatch_object = obj_ref.Object()
    <span class="highlight-keyword">if</span> hatch_object.HatchGeometry.PatternIndex &lt;&gt; pattern_index:
      hatch_object.HatchGeometry.PatternIndex = pattern_index
      hatch_object.CommitChanges()

  doc.Views.Redraw()
  <span class="highlight-keyword">return</span> Result.Success

<span class="highlight-keyword">if</span> __name__ == <span class="highlight-literal">"__main__"</span>:
  RunCommand()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAACBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_DocObjects_HatchObject.htm">HatchObject Class</a></div><div class="seeAlsoStyle"><a href="N_Rhino_DocObjects.htm">Rhino.DocObjects Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.16.22067.13000 (Last updated: 3/10/2022)<br />Copyright © 2009-2022 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>