<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>SweepOneRail.PerformSweep Method (Curve, IEnumerable(Curve))</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Rhino.Geometry.SweepOneRail.PerformSweep(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})" /><meta name="Description" content="summaryM:Rhino.Geometry.SweepOneRail.PerformSweep(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Geometry" /><meta name="file" content="M_Rhino_Geometry_SweepOneRail_PerformSweep_2" /><meta name="guid" content="M_Rhino_Geometry_SweepOneRail_PerformSweep_2" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_Geometry.htm" title="Rhino.Geometry" tocid="N_Rhino_Geometry">Rhino.Geometry</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_Geometry_SweepOneRail.htm" title="SweepOneRail Class" tocid="T_Rhino_Geometry_SweepOneRail">SweepOneRail Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Rhino_Geometry_SweepOneRail.htm" title="SweepOneRail Methods" tocid="Methods_T_Rhino_Geometry_SweepOneRail">SweepOneRail Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_SweepOneRail_PerformSweep.htm" title="PerformSweep Method " tocid="Overload_Rhino_Geometry_SweepOneRail_PerformSweep">PerformSweep Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_SweepOneRail_PerformSweep.htm" title="PerformSweep Method (Curve, Curve)" tocid="M_Rhino_Geometry_SweepOneRail_PerformSweep">PerformSweep Method (Curve, Curve)</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_SweepOneRail_PerformSweep_2.htm" title="PerformSweep Method (Curve, IEnumerable(Curve))" tocid="M_Rhino_Geometry_SweepOneRail_PerformSweep_2">PerformSweep Method (Curve, IEnumerable(Curve))</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_SweepOneRail_PerformSweep_1.htm" title="PerformSweep Method (Curve, Curve, Double)" tocid="M_Rhino_Geometry_SweepOneRail_PerformSweep_1">PerformSweep Method (Curve, Curve, Double)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_SweepOneRail_PerformSweep_3.htm" title="PerformSweep Method (Curve, IEnumerable(Curve), IEnumerable(Double))" tocid="M_Rhino_Geometry_SweepOneRail_PerformSweep_3">PerformSweep Method (Curve, IEnumerable(Curve), IEnumerable(Double))</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>SweepOneRail<span id="LSTDDE256D4_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDE256D4_0?cpp=::|nu=.");</script>PerformSweep Method (Curve, IEnumerable<span id="LSTDDE256D4_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDE256D4_1?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Curve<span id="LSTDDE256D4_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDE256D4_2?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</h1></td></tr></table><span class="introStyle"></span> <div class="summary"><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;summary&gt; documentation for "M:Rhino.Geometry.SweepOneRail.PerformSweep(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})"]</p></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino_Geometry.htm">Rhino.Geometry</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="since"><strong>Since:</strong> 5.0</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">Brep</span>[] <span class="identifier">PerformSweep</span>(
	<span class="identifier">Curve</span> <span class="parameter">rail</span>,
	<span class="identifier">IEnumerable</span>&lt;<span class="identifier">Curve</span>&gt; <span class="parameter">crossSections</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">PerformSweep</span> ( 
	<span class="parameter">rail</span> <span class="keyword">As</span> <span class="identifier">Curve</span>,
	<span class="parameter">crossSections</span> <span class="keyword">As</span> <span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> <span class="identifier">Curve</span>)
) <span class="keyword">As</span> <span class="identifier">Brep</span>()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">rail</span></dt><dd>Type: <a href="T_Rhino_Geometry_Curve.htm">Rhino.Geometry<span id="LSTDDE256D4_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDE256D4_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Curve</a><br /><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="rail"/&gt; documentation for "M:Rhino.Geometry.SweepOneRail.PerformSweep(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})"]</p></dd><dt><span class="parameter">crossSections</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank">System.Collections.Generic<span id="LSTDDE256D4_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDE256D4_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IEnumerable</a><span id="LSTDDE256D4_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDE256D4_5?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="T_Rhino_Geometry_Curve.htm">Curve</a><span id="LSTDDE256D4_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDE256D4_6?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br /><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="crossSections"/&gt; documentation for "M:Rhino.Geometry.SweepOneRail.PerformSweep(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})"]</p></dd></dl><h4 class="subHeading">Return Value</h4>Type: <span id="LSTDDE256D4_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDE256D4_7?cpp=array&lt;");</script><a href="T_Rhino_Geometry_Brep.htm">Brep</a><span id="LSTDDE256D4_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDE256D4_8?cpp=&gt;|vb=()|nu=[]");</script><br /><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:Rhino.Geometry.SweepOneRail.PerformSweep(Rhino.Geometry.Curve,System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve})"]</p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBFBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBFBA','cs','1','2');return false;">C#</a></div><div id="ID0EBBFBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBFBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBFBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBFBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBFBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Rhino.Input;
<span class="highlight-keyword">using</span> System.Collections.Generic;

<span class="highlight-keyword">partial</span> <span class="highlight-keyword">class</span> Examples
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> Rhino.Commands.Result Sweep1(Rhino.RhinoDoc doc)
  {
    Rhino.DocObjects.ObjRef rail_ref;
    <span class="highlight-keyword">var</span> rc = RhinoGet.GetOneObject(<span class="highlight-literal">"Select rail curve"</span>, <span class="highlight-keyword">false</span>, Rhino.DocObjects.ObjectType.Curve, <span class="highlight-keyword">out</span> rail_ref);
    <span class="highlight-keyword">if</span>(rc!=Rhino.Commands.Result.Success)
      <span class="highlight-keyword">return</span> rc;

    <span class="highlight-keyword">var</span> rail_crv = rail_ref.Curve();
    <span class="highlight-keyword">if</span>( rail_crv==<span class="highlight-keyword">null</span> )
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure;

    <span class="highlight-keyword">var</span> gx = <span class="highlight-keyword">new</span> Rhino.Input.Custom.GetObject();
    gx.SetCommandPrompt(<span class="highlight-literal">"Select cross section curves"</span>);
    gx.GeometryFilter = Rhino.DocObjects.ObjectType.Curve;
    gx.EnablePreSelect(<span class="highlight-keyword">false</span>, <span class="highlight-keyword">true</span>);
    gx.GetMultiple(<span class="highlight-number">1</span>,<span class="highlight-number">0</span>);
    <span class="highlight-keyword">if</span>( gx.CommandResult() != Rhino.Commands.Result.Success )
      <span class="highlight-keyword">return</span> gx.CommandResult();

    <span class="highlight-keyword">var</span> cross_sections = <span class="highlight-keyword">new</span> List&lt;Rhino.Geometry.Curve&gt;();
    <span class="highlight-keyword">for</span>( <span class="highlight-keyword">int</span> i=<span class="highlight-number">0</span>; i&lt;gx.ObjectCount; i++ )
    {
      <span class="highlight-keyword">var</span> crv = gx.Object(i).Curve();
      <span class="highlight-keyword">if</span>( crv!= <span class="highlight-keyword">null</span>)
        cross_sections.Add(crv);
    }
    <span class="highlight-keyword">if</span>( cross_sections.Count&lt;<span class="highlight-number">1</span> )
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure;

    <span class="highlight-keyword">var</span> sweep = <span class="highlight-keyword">new</span> Rhino.Geometry.SweepOneRail();
    sweep.AngleToleranceRadians = doc.ModelAngleToleranceRadians;
    sweep.ClosedSweep = <span class="highlight-keyword">false</span>;
    sweep.SweepTolerance = doc.ModelAbsoluteTolerance;
    sweep.SetToRoadlikeTop();
    <span class="highlight-keyword">var</span> breps = sweep.PerformSweep(rail_crv, cross_sections);
    <span class="highlight-keyword">for</span>( <span class="highlight-keyword">int</span> i=<span class="highlight-number">0</span>; i&lt;breps.Length; i++ )
      doc.Objects.AddBrep(breps[i]);
    doc.Views.Redraw();
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success;
  }
}</pre></div><div id="ID0EBBFBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Imports</span> Rhino.Input
<span class="highlight-keyword">Imports</span> System.Collections.Generic

<span class="highlight-keyword">Partial</span> <span class="highlight-keyword">Class</span> Examples
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Function</span> Sweep1(doc <span class="highlight-keyword">As</span> Rhino.RhinoDoc) <span class="highlight-keyword">As</span> Rhino.Commands.Result
    <span class="highlight-keyword">Dim</span> rail_ref <span class="highlight-keyword">As</span> Rhino.DocObjects.ObjRef = <span class="highlight-keyword">Nothing</span>
    <span class="highlight-keyword">Dim</span> rc = RhinoGet.GetOneObject(<span class="highlight-literal">"Select rail curve"</span>, <span class="highlight-keyword">False</span>, Rhino.DocObjects.ObjectType.Curve, rail_ref)
    <span class="highlight-keyword">If</span> rc &lt;&gt; Rhino.Commands.Result.Success <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> rc
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Dim</span> rail_crv = rail_ref.Curve()
    <span class="highlight-keyword">If</span> rail_crv <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Failure
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Dim</span> gx = <span class="highlight-keyword">New</span> Rhino.Input.Custom.GetObject()
    gx.SetCommandPrompt(<span class="highlight-literal">"Select cross section curves"</span>)
    gx.GeometryFilter = Rhino.DocObjects.ObjectType.Curve
    gx.EnablePreSelect(<span class="highlight-keyword">False</span>, <span class="highlight-keyword">True</span>)
    gx.GetMultiple(<span class="highlight-number">1</span>, <span class="highlight-number">0</span>)
    <span class="highlight-keyword">If</span> gx.CommandResult() &lt;&gt; Rhino.Commands.Result.Success <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> gx.CommandResult()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Dim</span> cross_sections = <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> Rhino.Geometry.Curve)()
    <span class="highlight-keyword">For</span> i <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> gx.ObjectCount - <span class="highlight-number">1</span>
      <span class="highlight-keyword">Dim</span> crv = gx.<span class="highlight-keyword">Object</span>(i).Curve()
      <span class="highlight-keyword">If</span> crv <span class="highlight-keyword">IsNot</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">Then</span>
        cross_sections.Add(crv)
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Next</span>
    <span class="highlight-keyword">If</span> cross_sections.Count &lt; <span class="highlight-number">1</span> <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Failure
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Dim</span> sweep = <span class="highlight-keyword">New</span> Rhino.Geometry.SweepOneRail()
    sweep.AngleToleranceRadians = doc.ModelAngleToleranceRadians
    sweep.ClosedSweep = <span class="highlight-keyword">False</span>
    sweep.SweepTolerance = doc.ModelAbsoluteTolerance
    sweep.SetToRoadlikeTop()
    <span class="highlight-keyword">Dim</span> breps = sweep.PerformSweep(rail_crv, cross_sections)
    <span class="highlight-keyword">For</span> i <span class="highlight-keyword">As</span> <span class="highlight-keyword">Integer</span> = <span class="highlight-number">0</span> <span class="highlight-keyword">To</span> breps.Length - <span class="highlight-number">1</span>
      doc.Objects.AddBrep(breps(i))
    <span class="highlight-keyword">Next</span>
    doc.Views.Redraw()
    <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Success
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBFBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAFBA_tab1" class="codeSnippetContainerTabSingle">Python</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAFBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAFBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAFBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">import</span> rhinoscriptsyntax <span class="highlight-keyword">as</span> rs
<span class="highlight-keyword">import</span> Rhino
<span class="highlight-keyword">import</span> scriptcontext

<span class="highlight-keyword">def</span> Sweep1():
    rail = rs.GetObject(<span class="highlight-literal">"Select rail curve"</span>, rs.filter.curve)
    rail_crv = rs.coercecurve(rail)
    <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> rail_crv: <span class="highlight-keyword">return</span>

    cross_sections = rs.GetObjects(<span class="highlight-literal">"Select cross section curves"</span>, rs.filter.curve)
    <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> cross_sections: <span class="highlight-keyword">return</span>
    cross_sections = [rs.coercecurve(crv) <span class="highlight-keyword">for</span> crv <span class="highlight-keyword">in</span> cross_sections]

    sweep = Rhino.Geometry.SweepOneRail()
    sweep.AngleToleranceRadians = scriptcontext.doc.ModelAngleToleranceRadians
    sweep.ClosedSweep = False
    sweep.SweepTolerance = scriptcontext.doc.ModelAbsoluteTolerance
    sweep.SetToRoadlikeTop()
    breps = sweep.PerformSweep(rail_crv, cross_sections)
    <span class="highlight-keyword">for</span> brep <span class="highlight-keyword">in</span> breps: scriptcontext.doc.Objects.AddBrep(brep)
    scriptcontext.doc.Views.Redraw()

<span class="highlight-keyword">if</span> __name__ == <span class="highlight-literal">"__main__"</span>:
    Sweep1()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAFBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_Geometry_SweepOneRail.htm">SweepOneRail Class</a></div><div class="seeAlsoStyle"><a href="Overload_Rhino_Geometry_SweepOneRail_PerformSweep.htm">PerformSweep Overload</a></div><div class="seeAlsoStyle"><a href="N_Rhino_Geometry.htm">Rhino.Geometry Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.17.22102.05000 (Last updated: 4/21/2022)<br />Copyright © 2009-2022 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>