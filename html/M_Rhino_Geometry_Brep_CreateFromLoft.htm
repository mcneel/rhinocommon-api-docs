<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Brep.CreateFromLoft Method (IEnumerable(Curve), Point3d, Point3d, LoftType, Boolean)</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Rhino.Geometry.Brep.CreateFromLoft(System.Collections.Generic.IEnumerable{Rhino.Geometry.Curve},Rhino.Geometry.Point3d,Rhino.Geometry.Point3d,Rhino.Geometry.LoftType,System.Boolean)" /><meta name="Description" content="Constructs one or more Breps by lofting through a set of curves." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Geometry" /><meta name="file" content="M_Rhino_Geometry_Brep_CreateFromLoft" /><meta name="guid" content="M_Rhino_Geometry_Brep_CreateFromLoft" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_Geometry.htm" title="Rhino.Geometry" tocid="N_Rhino_Geometry">Rhino.Geometry</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_Geometry_Brep.htm" title="Brep Class" tocid="T_Rhino_Geometry_Brep">Brep Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Rhino_Geometry_Brep.htm" title="Brep Methods" tocid="Methods_T_Rhino_Geometry_Brep">Brep Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_Brep_CreateFromLoft.htm" title="CreateFromLoft Method " tocid="Overload_Rhino_Geometry_Brep_CreateFromLoft">CreateFromLoft Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CreateFromLoft.htm" title="CreateFromLoft Method (IEnumerable(Curve), Point3d, Point3d, LoftType, Boolean)" tocid="M_Rhino_Geometry_Brep_CreateFromLoft">CreateFromLoft Method (IEnumerable(Curve), Point3d, Point3d, LoftType, Boolean)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_Brep_CreateFromLoft_1.htm" title="CreateFromLoft Method (IEnumerable(Curve), Point3d, Point3d, Boolean, Boolean, BrepTrim, BrepTrim, LoftType, Boolean)" tocid="M_Rhino_Geometry_Brep_CreateFromLoft_1">CreateFromLoft Method (IEnumerable(Curve), Point3d, Point3d, Boolean, Boolean, BrepTrim, BrepTrim, LoftType, Boolean)</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Brep<span id="LSTA742B6BF_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA742B6BF_0?cpp=::|nu=.");</script>CreateFromLoft Method (IEnumerable<span id="LSTA742B6BF_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA742B6BF_1?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Curve<span id="LSTA742B6BF_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA742B6BF_2?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Point3d, Point3d, LoftType, Boolean)</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Constructs one or more Breps by lofting through a set of curves.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino_Geometry.htm">Rhino.Geometry</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="since"><strong>Since:</strong> 5.0</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">Brep</span>[] <span class="identifier">CreateFromLoft</span>(
	<span class="identifier">IEnumerable</span>&lt;<span class="identifier">Curve</span>&gt; <span class="parameter">curves</span>,
	<span class="identifier">Point3d</span> <span class="parameter">start</span>,
	<span class="identifier">Point3d</span> <span class="parameter">end</span>,
	<span class="identifier">LoftType</span> <span class="parameter">loftType</span>,
	<span class="identifier">bool</span> <span class="parameter">closed</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> <span class="identifier">CreateFromLoft</span> ( 
	<span class="parameter">curves</span> <span class="keyword">As</span> <span class="identifier">IEnumerable</span>(<span class="keyword">Of</span> <span class="identifier">Curve</span>),
	<span class="parameter">start</span> <span class="keyword">As</span> <span class="identifier">Point3d</span>,
	<span class="parameter">end</span> <span class="keyword">As</span> <span class="identifier">Point3d</span>,
	<span class="parameter">loftType</span> <span class="keyword">As</span> <span class="identifier">LoftType</span>,
	<span class="parameter">closed</span> <span class="keyword">As</span> <span class="identifier">Boolean</span>
) <span class="keyword">As</span> <span class="identifier">Brep</span>()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">curves</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank">System.Collections.Generic<span id="LSTA742B6BF_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA742B6BF_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IEnumerable</a><span id="LSTA742B6BF_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA742B6BF_4?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="T_Rhino_Geometry_Curve.htm">Curve</a><span id="LSTA742B6BF_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA742B6BF_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />
            The curves to loft through. This function will not perform any curve sorting. You must pass in
            curves in the order you want them lofted. This function will not adjust the directions of open
            curves. Use Curve.DoDirectionsMatch and Curve.Reverse to adjust the directions of open curves.
            This function will not adjust the seams of closed curves. Use Curve.ChangeClosedCurveSeam to
            adjust the seam of closed curves.
            </dd><dt><span class="parameter">start</span></dt><dd>Type: <a href="T_Rhino_Geometry_Point3d.htm">Rhino.Geometry<span id="LSTA742B6BF_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA742B6BF_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Point3d</a><br />
            Optional starting point of loft. Use Point3d.Unset if you do not want to include a start point.
            </dd><dt><span class="parameter">end</span></dt><dd>Type: <a href="T_Rhino_Geometry_Point3d.htm">Rhino.Geometry<span id="LSTA742B6BF_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA742B6BF_7?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Point3d</a><br />
            Optional ending point of loft. Use Point3d.Unset if you do not want to include an end point.
            </dd><dt><span class="parameter">loftType</span></dt><dd>Type: <a href="T_Rhino_Geometry_LoftType.htm">Rhino.Geometry<span id="LSTA742B6BF_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA742B6BF_8?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>LoftType</a><br />type of loft to perform.</dd><dt><span class="parameter">closed</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.boolean" target="_blank">System<span id="LSTA742B6BF_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA742B6BF_9?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Boolean</a><br />true if the last curve in this loft should be connected back to the first one.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <span id="LSTA742B6BF_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA742B6BF_10?cpp=array&lt;");</script><a href="T_Rhino_Geometry_Brep.htm">Brep</a><span id="LSTA742B6BF_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTA742B6BF_11?cpp=&gt;|vb=()|nu=[]");</script><br />
            Constructs a closed surface, continuing the surface past the last curve around to the
            first curve. Available when you have selected three shape curves.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBBBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','cs','1','2');return false;">C#</a></div><div id="ID0EBBBBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBBBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System.Linq;
<span class="highlight-keyword">using</span> Rhino;
<span class="highlight-keyword">using</span> Rhino.Input.Custom;
<span class="highlight-keyword">using</span> Rhino.DocObjects;
<span class="highlight-keyword">using</span> Rhino.Commands;
<span class="highlight-keyword">using</span> Rhino.Geometry;

<span class="highlight-keyword">namespace</span> examples_cs
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> LoftCommand : Command
  {
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">string</span> EnglishName { <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-literal">"csLoft"</span>; } }

    <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> Result RunCommand(RhinoDoc doc, RunMode mode)
    {
      <span class="highlight-comment">// select curves to loft</span>
      <span class="highlight-keyword">var</span> gs = <span class="highlight-keyword">new</span> GetObject();
      gs.SetCommandPrompt(<span class="highlight-literal">"select curves to loft"</span>);
      gs.GeometryFilter = ObjectType.Curve;
      gs.DisablePreSelect();
      gs.SubObjectSelect = <span class="highlight-keyword">false</span>;
      gs.GetMultiple(<span class="highlight-number">2</span>, <span class="highlight-number">0</span>);
      <span class="highlight-keyword">if</span> (gs.CommandResult() != Result.Success)
        <span class="highlight-keyword">return</span> gs.CommandResult();

      <span class="highlight-keyword">var</span> curves = gs.Objects().Select(obj =&gt; obj.Curve()).ToList();

      <span class="highlight-keyword">var</span> breps = Brep.CreateFromLoft(curves, Point3d.Unset, Point3d.Unset, LoftType.Tight, <span class="highlight-keyword">false</span>);
      <span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> brep <span class="highlight-keyword">in</span> breps)
        doc.Objects.AddBrep(brep);

      doc.Views.Redraw();
      <span class="highlight-keyword">return</span> Result.Success;
    }
  }
}</pre></div><div id="ID0EBBBBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Imports</span> Rhino
<span class="highlight-keyword">Imports</span> Rhino.Input.Custom
<span class="highlight-keyword">Imports</span> Rhino.DocObjects
<span class="highlight-keyword">Imports</span> Rhino.Commands
<span class="highlight-keyword">Imports</span> System.Collections.Generic
<span class="highlight-keyword">Imports</span> Rhino.Geometry

<span class="highlight-keyword">Namespace</span> examples_vb
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> LoftCommand
    <span class="highlight-keyword">Inherits</span> Command
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">ReadOnly</span> <span class="highlight-keyword">Property</span> EnglishName() <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span>
      <span class="highlight-keyword">Get</span>
        <span class="highlight-keyword">Return</span> <span class="highlight-literal">"vbLoft"</span>
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">Get</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Property</span>

    <span class="highlight-keyword">Protected</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">Function</span> RunCommand(doc <span class="highlight-keyword">As</span> RhinoDoc, mode <span class="highlight-keyword">As</span> Rhino.Commands.RunMode) <span class="highlight-keyword">As</span> Result
      <span class="highlight-comment">' select curves to loft</span>
      <span class="highlight-keyword">Dim</span> gs = <span class="highlight-keyword">New</span> GetObject()
      gs.SetCommandPrompt(<span class="highlight-literal">"select curves to loft"</span>)
      gs.GeometryFilter = ObjectType.Curve
      gs.DisablePreSelect()
      gs.SubObjectSelect = <span class="highlight-keyword">False</span>
      gs.GetMultiple(<span class="highlight-number">2</span>, <span class="highlight-number">0</span>)
      <span class="highlight-keyword">If</span> gs.CommandResult() &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> gs.CommandResult()
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-keyword">Dim</span> curves = <span class="highlight-keyword">New</span> List(<span class="highlight-keyword">Of</span> Curve)()
      <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> obj <span class="highlight-keyword">As</span> ObjRef <span class="highlight-keyword">In</span> gs.Objects()
        curves.Add(obj.Curve())
      <span class="highlight-keyword">Next</span>

      <span class="highlight-keyword">Dim</span> breps = Rhino.Geometry.Brep.CreateFromLoft(curves, Point3d.Unset, Point3d.Unset, LoftType.Tight, <span class="highlight-keyword">False</span>)
      <span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> brep <span class="highlight-keyword">As</span> Brep <span class="highlight-keyword">In</span> breps
        doc.Objects.AddBrep(brep)
      <span class="highlight-keyword">Next</span>

      doc.Views.Redraw()
      <span class="highlight-keyword">Return</span> Result.Success
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Namespace</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBBBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAABBA_tab1" class="codeSnippetContainerTabSingle">Python</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">import</span> rhinoscriptsyntax <span class="highlight-keyword">as</span> rs

<span class="highlight-keyword">def</span> RunCommand():
  crvids = rs.GetObjects(message=<span class="highlight-literal">"select curves to loft"</span>, filter=rs.filter.curve, minimum_count=<span class="highlight-number">2</span>)
  <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> crvids: <span class="highlight-keyword">return</span>

  rs.AddLoftSrf(object_ids=crvids, loft_type = <span class="highlight-number">3</span>) <span class="highlight-comment">#3 = tight</span>

<span class="highlight-keyword">if</span> __name__ == <span class="highlight-literal">"__main__"</span>:
  RunCommand()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_Geometry_Brep.htm">Brep Class</a></div><div class="seeAlsoStyle"><a href="Overload_Rhino_Geometry_Brep_CreateFromLoft.htm">CreateFromLoft Overload</a></div><div class="seeAlsoStyle"><a href="N_Rhino_Geometry.htm">Rhino.Geometry Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.16.22067.13000 (Last updated: 3/10/2022)<br />Copyright © 2009-2022 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>