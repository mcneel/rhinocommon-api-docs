<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>LinearDimension Constructor (Plane, Point2d, Point2d, Point2d)</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Rhino.Geometry.LinearDimension.#ctor(Rhino.Geometry.Plane,Rhino.Geometry.Point2d,Rhino.Geometry.Point2d,Rhino.Geometry.Point2d)" /><meta name="Description" content="Rhino.Geometry.LinearDimension" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Geometry" /><meta name="file" content="M_Rhino_Geometry_LinearDimension__ctor_1" /><meta name="guid" content="M_Rhino_Geometry_LinearDimension__ctor_1" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_Geometry.htm" title="Rhino.Geometry" tocid="N_Rhino_Geometry">Rhino.Geometry</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_Geometry_LinearDimension.htm" title="LinearDimension Class" tocid="T_Rhino_Geometry_LinearDimension">LinearDimension Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Geometry_LinearDimension__ctor.htm" title="LinearDimension Constructor " tocid="Overload_Rhino_Geometry_LinearDimension__ctor">LinearDimension Constructor </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_LinearDimension__ctor.htm" title="LinearDimension Constructor " tocid="M_Rhino_Geometry_LinearDimension__ctor">LinearDimension Constructor </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_LinearDimension__ctor_2.htm" title="LinearDimension Constructor (SerializationInfo, StreamingContext)" tocid="M_Rhino_Geometry_LinearDimension__ctor_2">LinearDimension Constructor (SerializationInfo, StreamingContext)</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Geometry_LinearDimension__ctor_1.htm" title="LinearDimension Constructor (Plane, Point2d, Point2d, Point2d)" tocid="M_Rhino_Geometry_LinearDimension__ctor_1">LinearDimension Constructor (Plane, Point2d, Point2d, Point2d)</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>LinearDimension Constructor (Plane, Point2d, Point2d, Point2d)</h1></td></tr></table><span class="introStyle"></span> <div class="summary">Initializes a new instance of the <a href="T_Rhino_Geometry_LinearDimension.htm">LinearDimension</a> class</div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino_Geometry.htm">Rhino.Geometry</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="since"><strong>Since:</strong> 5.0</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">LinearDimension</span>(
	<span class="identifier">Plane</span> <span class="parameter">dimensionPlane</span>,
	<span class="identifier">Point2d</span> <span class="parameter">extensionLine1End</span>,
	<span class="identifier">Point2d</span> <span class="parameter">extensionLine2End</span>,
	<span class="identifier">Point2d</span> <span class="parameter">pointOnDimensionLine</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Sub</span> <span class="identifier">New</span> ( 
	<span class="parameter">dimensionPlane</span> <span class="keyword">As</span> <span class="identifier">Plane</span>,
	<span class="parameter">extensionLine1End</span> <span class="keyword">As</span> <span class="identifier">Point2d</span>,
	<span class="parameter">extensionLine2End</span> <span class="keyword">As</span> <span class="identifier">Point2d</span>,
	<span class="parameter">pointOnDimensionLine</span> <span class="keyword">As</span> <span class="identifier">Point2d</span>
)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">dimensionPlane</span></dt><dd>Type: <a href="T_Rhino_Geometry_Plane.htm">Rhino.Geometry<span id="LST4DF8D8A7_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4DF8D8A7_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Plane</a><br /><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="dimensionPlane"/&gt; documentation for "M:Rhino.Geometry.LinearDimension.#ctor(Rhino.Geometry.Plane,Rhino.Geometry.Point2d,Rhino.Geometry.Point2d,Rhino.Geometry.Point2d)"]</p></dd><dt><span class="parameter">extensionLine1End</span></dt><dd>Type: <a href="T_Rhino_Geometry_Point2d.htm">Rhino.Geometry<span id="LST4DF8D8A7_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4DF8D8A7_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Point2d</a><br /><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="extensionLine1End"/&gt; documentation for "M:Rhino.Geometry.LinearDimension.#ctor(Rhino.Geometry.Plane,Rhino.Geometry.Point2d,Rhino.Geometry.Point2d,Rhino.Geometry.Point2d)"]</p></dd><dt><span class="parameter">extensionLine2End</span></dt><dd>Type: <a href="T_Rhino_Geometry_Point2d.htm">Rhino.Geometry<span id="LST4DF8D8A7_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4DF8D8A7_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Point2d</a><br /><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="extensionLine2End"/&gt; documentation for "M:Rhino.Geometry.LinearDimension.#ctor(Rhino.Geometry.Plane,Rhino.Geometry.Point2d,Rhino.Geometry.Point2d,Rhino.Geometry.Point2d)"]</p></dd><dt><span class="parameter">pointOnDimensionLine</span></dt><dd>Type: <a href="T_Rhino_Geometry_Point2d.htm">Rhino.Geometry<span id="LST4DF8D8A7_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST4DF8D8A7_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Point2d</a><br /><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;param name="pointOnDimensionLine"/&gt; documentation for "M:Rhino.Geometry.LinearDimension.#ctor(Rhino.Geometry.Plane,Rhino.Geometry.Point2d,Rhino.Geometry.Point2d,Rhino.Geometry.Point2d)"]</p></dd></dl></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBGBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBGBA','cs','1','2');return false;">C#</a></div><div id="ID0EBBGBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBGBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBGBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBGBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBGBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;
<span class="highlight-keyword">using</span> Rhino.Geometry;

<span class="highlight-keyword">partial</span> <span class="highlight-keyword">class</span> Examples
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> Rhino.Commands.Result AddLinearDimension2(Rhino.RhinoDoc doc)
  {
    Point3d origin = <span class="highlight-keyword">new</span> Point3d(<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">0</span>);
    Point3d offset = <span class="highlight-keyword">new</span> Point3d(<span class="highlight-number">11</span>,<span class="highlight-number">1</span>,<span class="highlight-number">0</span>);
    Point3d pt = <span class="highlight-keyword">new</span> Point3d((offset.X-origin.X)/<span class="highlight-number">2</span>,<span class="highlight-number">3</span>,<span class="highlight-number">0</span>);

    Plane plane = Plane.WorldXY;
    plane.Origin = origin;

    <span class="highlight-keyword">double</span> u,v;
    plane.ClosestParameter(origin, <span class="highlight-keyword">out</span> u, <span class="highlight-keyword">out</span> v);
    Point2d ext1 = <span class="highlight-keyword">new</span> Point2d(u, v);

    plane.ClosestParameter(offset, <span class="highlight-keyword">out</span> u, <span class="highlight-keyword">out</span> v);
    Point2d ext2 = <span class="highlight-keyword">new</span> Point2d(u, v);

    plane.ClosestParameter(pt, <span class="highlight-keyword">out</span> u, <span class="highlight-keyword">out</span> v);
    Point2d linePt = <span class="highlight-keyword">new</span> Point2d(u, v);

    LinearDimension dimension = <span class="highlight-keyword">new</span> LinearDimension(plane, ext1, ext2, linePt);
    <span class="highlight-keyword">if</span> (doc.Objects.AddLinearDimension(dimension) != Guid.Empty)
    {
      doc.Views.Redraw();
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success;
    }
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure;
  }
}</pre></div><div id="ID0EBBGBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Imports</span> Rhino.Geometry

<span class="highlight-keyword">Partial</span> <span class="highlight-keyword">Class</span> Examples
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Function</span> AddLinearDimension2(<span class="highlight-keyword">ByVal</span> doc <span class="highlight-keyword">As</span> Rhino.RhinoDoc) <span class="highlight-keyword">As</span> Rhino.Commands.Result
    <span class="highlight-keyword">Dim</span> origin <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Point3d(<span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>)
    <span class="highlight-keyword">Dim</span> offset <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Point3d(<span class="highlight-number">11</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>)
    <span class="highlight-keyword">Dim</span> pt <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Point3d((offset.X - origin.X) / <span class="highlight-number">2</span>, <span class="highlight-number">3</span>, <span class="highlight-number">0</span>)

    <span class="highlight-keyword">Dim</span> plane__1 <span class="highlight-keyword">As</span> Plane = Plane.WorldXY
    plane__1.Origin = origin

    <span class="highlight-keyword">Dim</span> u <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>, v <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>
    plane__1.ClosestParameter(origin, u, v)
    <span class="highlight-keyword">Dim</span> ext1 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Point2d(u, v)

    plane__1.ClosestParameter(offset, u, v)
    <span class="highlight-keyword">Dim</span> ext2 <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Point2d(u, v)

    plane__1.ClosestParameter(pt, u, v)
    <span class="highlight-keyword">Dim</span> linePt <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> Point2d(u, v)

    <span class="highlight-keyword">Dim</span> dimension <span class="highlight-keyword">As</span> <span class="highlight-keyword">New</span> LinearDimension(plane__1, ext1, ext2, linePt)
    <span class="highlight-keyword">If</span> doc.Objects.AddLinearDimension(dimension) &lt;&gt; Guid.Empty <span class="highlight-keyword">Then</span>
      doc.Views.Redraw()
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Success
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Failure
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBGBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAGBA_tab1" class="codeSnippetContainerTabSingle">Python</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAGBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAGBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAGBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">import</span> Rhino
<span class="highlight-keyword">import</span> scriptcontext
<span class="highlight-keyword">import</span> System.Guid

<span class="highlight-keyword">def</span> AddLinearDimension2():
    origin = Rhino.Geometry.Point3d(<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">0</span>)
    offset = Rhino.Geometry.Point3d(<span class="highlight-number">11</span>,<span class="highlight-number">1</span>,<span class="highlight-number">0</span>)
    pt = Rhino.Geometry.Point3d((offset.X-origin.X)/<span class="highlight-number">2.0</span>,<span class="highlight-number">3</span>,<span class="highlight-number">0</span>)
    plane = Rhino.Geometry.Plane.WorldXY
    plane.Origin = origin

    rc, u, v = plane.ClosestParameter(origin)
    ext1 = Rhino.Geometry.Point2d(u,v)
    rc, u, v = plane.ClosestParameter(offset)
    ext2 = Rhino.Geometry.Point2d(u,v)
    rc, u, v = plane.ClosestParameter(pt)
    linePt = Rhino.Geometry.Point2d(u,v)

    dimension = Rhino.Geometry.LinearDimension(plane, ext1, ext2, linePt)
    <span class="highlight-keyword">if</span> scriptcontext.doc.Objects.AddLinearDimension(dimension)!=System.Guid.Empty:
        scriptcontext.doc.Views.Redraw()
        <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Failure

<span class="highlight-keyword">if</span> __name__==<span class="highlight-literal">"__main__"</span>:
    AddLinearDimension2()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAGBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_Geometry_LinearDimension.htm">LinearDimension Class</a></div><div class="seeAlsoStyle"><a href="Overload_Rhino_Geometry_LinearDimension__ctor.htm">LinearDimension Overload</a></div><div class="seeAlsoStyle"><a href="N_Rhino_Geometry.htm">Rhino.Geometry Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.16.22067.13000 (Last updated: 3/10/2022)<br />Copyright © 2009-2022 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>