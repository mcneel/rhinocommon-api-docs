<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>GetPoint.Constrain Method (Line)</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:Rhino.Input.Custom.GetPoint.Constrain(Rhino.Geometry.Line)" /><meta name="Description" content="Constrains the picked point to lie on a line." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Input.Custom" /><meta name="file" content="M_Rhino_Input_Custom_GetPoint_Constrain_5" /><meta name="guid" content="M_Rhino_Input_Custom_GetPoint_Constrain_5" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_Input_Custom.htm" title="Rhino.Input.Custom" tocid="N_Rhino_Input_Custom">Rhino.Input.Custom</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_Input_Custom_GetPoint.htm" title="GetPoint Class" tocid="T_Rhino_Input_Custom_GetPoint">GetPoint Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Rhino_Input_Custom_GetPoint.htm" title="GetPoint Methods" tocid="Methods_T_Rhino_Input_Custom_GetPoint">GetPoint Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_Rhino_Input_Custom_GetPoint_Constrain.htm" title="Constrain Method " tocid="Overload_Rhino_Input_Custom_GetPoint_Constrain">Constrain Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Input_Custom_GetPoint_Constrain.htm" title="Constrain Method (Arc)" tocid="M_Rhino_Input_Custom_GetPoint_Constrain">Constrain Method (Arc)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Input_Custom_GetPoint_Constrain_2.htm" title="Constrain Method (Circle)" tocid="M_Rhino_Input_Custom_GetPoint_Constrain_2">Constrain Method (Circle)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Input_Custom_GetPoint_Constrain_4.htm" title="Constrain Method (Cylinder)" tocid="M_Rhino_Input_Custom_GetPoint_Constrain_4">Constrain Method (Cylinder)</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Input_Custom_GetPoint_Constrain_5.htm" title="Constrain Method (Line)" tocid="M_Rhino_Input_Custom_GetPoint_Constrain_5">Constrain Method (Line)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Input_Custom_GetPoint_Constrain_9.htm" title="Constrain Method (Sphere)" tocid="M_Rhino_Input_Custom_GetPoint_Constrain_9">Constrain Method (Sphere)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Input_Custom_GetPoint_Constrain_3.htm" title="Constrain Method (Curve, Boolean)" tocid="M_Rhino_Input_Custom_GetPoint_Constrain_3">Constrain Method (Curve, Boolean)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Input_Custom_GetPoint_Constrain_6.htm" title="Constrain Method (Mesh, Boolean)" tocid="M_Rhino_Input_Custom_GetPoint_Constrain_6">Constrain Method (Mesh, Boolean)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Input_Custom_GetPoint_Constrain_7.htm" title="Constrain Method (Plane, Boolean)" tocid="M_Rhino_Input_Custom_GetPoint_Constrain_7">Constrain Method (Plane, Boolean)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Input_Custom_GetPoint_Constrain_8.htm" title="Constrain Method (Point3d, Point3d)" tocid="M_Rhino_Input_Custom_GetPoint_Constrain_8">Constrain Method (Point3d, Point3d)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Input_Custom_GetPoint_Constrain_10.htm" title="Constrain Method (Surface, Boolean)" tocid="M_Rhino_Input_Custom_GetPoint_Constrain_10">Constrain Method (Surface, Boolean)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Input_Custom_GetPoint_Constrain_1.htm" title="Constrain Method (Brep, Int32, Int32, Boolean)" tocid="M_Rhino_Input_Custom_GetPoint_Constrain_1">Constrain Method (Brep, Int32, Int32, Boolean)</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>GetPoint<span id="LST60AFC18_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST60AFC18_0?cpp=::|nu=.");</script>Constrain Method (Line)</h1></td></tr></table><span class="introStyle"></span> <div class="summary">Constrains the picked point to lie on a line.</div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino_Input_Custom.htm">Rhino.Input.Custom</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="since"><strong>Since:</strong> 5.0</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">bool</span> <span class="identifier">Constrain</span>(
	<span class="identifier">Line</span> <span class="parameter">line</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">Constrain</span> ( 
	<span class="parameter">line</span> <span class="keyword">As</span> <span class="identifier">Line</span>
) <span class="keyword">As</span> <span class="identifier">Boolean</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">line</span></dt><dd>Type: <a href="T_Rhino_Geometry_Line.htm">Rhino.Geometry<span id="LST60AFC18_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST60AFC18_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Line</a><br />A line to use as constraint.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="https://docs.microsoft.com/dotnet/api/system.boolean" target="_blank">Boolean</a><br />true if constraint could be applied.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBBBBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','cs','1','2');return false;">C#</a></div><div id="ID0EBBBBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBBBBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBBBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBBBBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBBBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> System;

<span class="highlight-keyword">partial</span> <span class="highlight-keyword">class</span> Examples
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> Rhino.Commands.Result ConstrainedCopy(Rhino.RhinoDoc doc)
  {
    <span class="highlight-comment">// Get a single planar closed curve</span>
    <span class="highlight-keyword">var</span> go = <span class="highlight-keyword">new</span> Rhino.Input.Custom.GetObject();
    go.SetCommandPrompt(<span class="highlight-literal">"Select curve"</span>);
    go.GeometryFilter = Rhino.DocObjects.ObjectType.Curve;
    go.GeometryAttributeFilter = Rhino.Input.Custom.GeometryAttributeFilter.ClosedCurve;
    go.Get();
    <span class="highlight-keyword">if</span>( go.CommandResult() != Rhino.Commands.Result.Success )
      <span class="highlight-keyword">return</span> go.CommandResult();
    <span class="highlight-keyword">var</span> objref = go.Object(<span class="highlight-number">0</span>);
    <span class="highlight-keyword">var</span> base_curve = objref.Curve();
    <span class="highlight-keyword">var</span> first_point = objref.SelectionPoint();
    <span class="highlight-keyword">if</span>( base_curve==<span class="highlight-keyword">null</span> || !first_point.IsValid )
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Cancel;

    Rhino.Geometry.Plane plane;
    <span class="highlight-keyword">if</span>( !base_curve.TryGetPlane(<span class="highlight-keyword">out</span> plane) )
      <span class="highlight-keyword">return</span> Rhino.Commands.Result.Cancel;

    <span class="highlight-comment">// Get a point constrained to a line passing through the initial selection</span>
    <span class="highlight-comment">// point and parallel to the plane's normal</span>
    <span class="highlight-keyword">var</span> gp = <span class="highlight-keyword">new</span> Rhino.Input.Custom.GetPoint();
    gp.SetCommandPrompt(<span class="highlight-literal">"Offset point"</span>);
    gp.DrawLineFromPoint(first_point, <span class="highlight-keyword">true</span>);
    <span class="highlight-keyword">var</span> line = <span class="highlight-keyword">new</span> Rhino.Geometry.Line(first_point, first_point+plane.Normal);
    gp.Constrain(line);
    gp.Get();
    <span class="highlight-keyword">if</span>( gp.CommandResult() != Rhino.Commands.Result.Success )
      <span class="highlight-keyword">return</span> gp.CommandResult();
    <span class="highlight-keyword">var</span> second_point = gp.Point();
    Rhino.Geometry.Vector3d vec = second_point - first_point;
    <span class="highlight-keyword">if</span>( vec.Length &gt; <span class="highlight-number">0.001</span> )
    {
      <span class="highlight-keyword">var</span> xf = Rhino.Geometry.Transform.Translation(vec);
      Guid id = doc.Objects.Transform(objref, xf, <span class="highlight-keyword">false</span>);
      <span class="highlight-keyword">if</span>( id!=Guid.Empty )
      {
        doc.Views.Redraw();
        <span class="highlight-keyword">return</span> Rhino.Commands.Result.Success;
      }
    }
    <span class="highlight-keyword">return</span> Rhino.Commands.Result.Cancel;
  }
}</pre></div><div id="ID0EBBBBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Partial</span> <span class="highlight-keyword">Class</span> Examples
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Shared</span> <span class="highlight-keyword">Function</span> ConstrainedCopy(doc <span class="highlight-keyword">As</span> Rhino.RhinoDoc) <span class="highlight-keyword">As</span> Rhino.Commands.Result
    <span class="highlight-comment">' Get a single planar closed curve</span>
    <span class="highlight-keyword">Dim</span> go = <span class="highlight-keyword">New</span> Rhino.Input.Custom.GetObject()
    go.SetCommandPrompt(<span class="highlight-literal">"Select curve"</span>)
    go.GeometryFilter = Rhino.DocObjects.ObjectType.Curve
    go.GeometryAttributeFilter = Rhino.Input.Custom.GeometryAttributeFilter.ClosedCurve
    go.<span class="highlight-keyword">Get</span>()
    <span class="highlight-keyword">If</span> go.CommandResult() &lt;&gt; Rhino.Commands.Result.Success <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> go.CommandResult()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Dim</span> objref = go.<span class="highlight-keyword">Object</span>(<span class="highlight-number">0</span>)
    <span class="highlight-keyword">Dim</span> base_curve = objref.Curve()
    <span class="highlight-keyword">Dim</span> first_point = objref.SelectionPoint()
    <span class="highlight-keyword">If</span> base_curve <span class="highlight-keyword">Is</span> <span class="highlight-keyword">Nothing</span> <span class="highlight-keyword">OrElse</span> <span class="highlight-keyword">Not</span> first_point.IsValid <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Cancel
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-keyword">Dim</span> plane <span class="highlight-keyword">As</span> Rhino.Geometry.Plane
    <span class="highlight-keyword">If</span> <span class="highlight-keyword">Not</span> base_curve.TryGetPlane(plane) <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Cancel
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

    <span class="highlight-comment">' Get a point constrained to a line passing through the initial selection</span>
    <span class="highlight-comment">' point and parallel to the plane's normal</span>
    <span class="highlight-keyword">Dim</span> gp = <span class="highlight-keyword">New</span> Rhino.Input.Custom.GetPoint()
    gp.SetCommandPrompt(<span class="highlight-literal">"Offset point"</span>)
    gp.DrawLineFromPoint(first_point, <span class="highlight-keyword">True</span>)
    <span class="highlight-keyword">Dim</span> line = <span class="highlight-keyword">New</span> Rhino.Geometry.Line(first_point, first_point + plane.Normal)
    gp.Constrain(line)
    gp.<span class="highlight-keyword">Get</span>()
    <span class="highlight-keyword">If</span> gp.CommandResult() &lt;&gt; Rhino.Commands.Result.Success <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Return</span> gp.CommandResult()
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Dim</span> second_point = gp.Point()
    <span class="highlight-keyword">Dim</span> vec <span class="highlight-keyword">As</span> Rhino.Geometry.Vector3d = second_point - first_point
    <span class="highlight-keyword">If</span> vec.Length &gt; <span class="highlight-number">0.001</span> <span class="highlight-keyword">Then</span>
      <span class="highlight-keyword">Dim</span> xf = Rhino.Geometry.Transform.Translation(vec)
      <span class="highlight-keyword">Dim</span> id <span class="highlight-keyword">As</span> Guid = doc.Objects.Transform(objref, xf, <span class="highlight-keyword">False</span>)
      <span class="highlight-keyword">If</span> id &lt;&gt; Guid.Empty <span class="highlight-keyword">Then</span>
        doc.Views.Redraw()
        <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Success
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
    <span class="highlight-keyword">Return</span> Rhino.Commands.Result.Cancel
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBBBBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAABBA_tab1" class="codeSnippetContainerTabSingle">Python</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">import</span> Rhino
<span class="highlight-keyword">import</span> scriptcontext

<span class="highlight-keyword">def</span> constrainedcopy():
    <span class="highlight-comment">#get a single closed curve</span>
    go = Rhino.Input.Custom.GetObject()
    go.SetCommandPrompt(<span class="highlight-literal">"Select curve"</span>)
    go.GeometryFilter = Rhino.DocObjects.ObjectType.Curve
    go.GeometryAttributeFilter = Rhino.Input.Custom.GeometryAttributeFilter.ClosedCurve
    go.Get()
    <span class="highlight-keyword">if</span> go.CommandResult() != Rhino.Commands.Result.Success: <span class="highlight-keyword">return</span>
    objref = go.Object(<span class="highlight-number">0</span>)
    base_curve = objref.Curve()
    first_point = objref.SelectionPoint()
    <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> base_curve <span class="highlight-keyword">or</span> <span class="highlight-keyword">not</span> first_point.IsValid:
        <span class="highlight-keyword">return</span>
    isplanar, plane = base_curve.TryGetPlane()
    <span class="highlight-keyword">if</span> <span class="highlight-keyword">not</span> isplanar: <span class="highlight-keyword">return</span>

    gp = Rhino.Input.Custom.GetPoint()
    gp.SetCommandPrompt(<span class="highlight-literal">"Offset point"</span>)
    gp.DrawLineFromPoint(first_point, True)
    line = Rhino.Geometry.Line(first_point, first_point + plane.Normal)
    gp.Constrain(line)
    gp.Get()
    <span class="highlight-keyword">if</span> gp.CommandResult() != Rhino.Commands.Result.Success:
        <span class="highlight-keyword">return</span>
    second_point = gp.Point()
    vec = second_point - first_point
    <span class="highlight-keyword">if</span> vec.Length &gt; <span class="highlight-number">0.001</span>:
        xf = Rhino.Geometry.Transform.Translation(vec)
        id = scriptcontext.doc.Objects.Transform(objref, xf, False)
        scriptcontext.doc.Views.Redraw()
        <span class="highlight-keyword">return</span> id

<span class="highlight-keyword">if</span> __name__==<span class="highlight-literal">"__main__"</span>:
    constrainedcopy()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_Input_Custom_GetPoint.htm">GetPoint Class</a></div><div class="seeAlsoStyle"><a href="Overload_Rhino_Input_Custom_GetPoint_Constrain.htm">Constrain Overload</a></div><div class="seeAlsoStyle"><a href="N_Rhino_Input_Custom.htm">Rhino.Input.Custom Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.17.22102.05000 (Last updated: 4/21/2022)<br />Copyright © 2009-2022 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>