<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>PostEffectPipeline Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="PostEffectPipeline class" /><meta name="System.Keywords" content="Rhino.Render.PostEffects.PostEffectPipeline class" /><meta name="Microsoft.Help.F1" content="Rhino.Render.PostEffects.PostEffectPipeline" /><meta name="Microsoft.Help.Id" content="T:Rhino.Render.PostEffects.PostEffectPipeline" /><meta name="Description" content="This object provides a way for post effects to access the frame buffer channels from a rendering and create new channels containing post-processed information which can be passed to the next post effect in the chain." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino.Render.PostEffects" /><meta name="file" content="T_Rhino_Render_PostEffects_PostEffectPipeline" /><meta name="guid" content="T_Rhino_Render_PostEffects_PostEffectPipeline" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino_Render_PostEffects.htm" title="Rhino.Render.PostEffects" tocid="N_Rhino_Render_PostEffects">Rhino.Render.PostEffects</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_Render_PostEffects_PostEffectPipeline.htm" title="PostEffectPipeline Class" tocid="T_Rhino_Render_PostEffects_PostEffectPipeline">PostEffectPipeline Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_Rhino_Render_PostEffects_PostEffectPipeline__ctor.htm" title="PostEffectPipeline Constructor " tocid="M_Rhino_Render_PostEffects_PostEffectPipeline__ctor">PostEffectPipeline Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Properties_T_Rhino_Render_PostEffects_PostEffectPipeline.htm" title="PostEffectPipeline Properties" tocid="Properties_T_Rhino_Render_PostEffects_PostEffectPipeline">PostEffectPipeline Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_Rhino_Render_PostEffects_PostEffectPipeline.htm" title="PostEffectPipeline Methods" tocid="Methods_T_Rhino_Render_PostEffects_PostEffectPipeline">PostEffectPipeline Methods</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Fields_T_Rhino_Render_PostEffects_PostEffectPipeline.htm" title="PostEffectPipeline Fields" tocid="Fields_T_Rhino_Render_PostEffects_PostEffectPipeline">PostEffectPipeline Fields</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>PostEffectPipeline Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            This object provides a way for post effects to access the frame buffer channels from a rendering and create
            new channels containing post-processed information which can be passed to the next post effect in the chain.
            Consider a simple post effect that just modifies the red component of a rendering.It will call GetChannel()
            to get the red channel as its input, and it will call NewChannel() to get a new red channel for its output.
            It will then read the input channel, do calculations and write to the output channel.When finished, it will
            call Commit() passing the new channel.Because both channels have the same identifier, this will replace the
            old channel with the new one so that subsequent PEPs in the chain will use the new channel instead of the
            original.Note that this will only replace the channel used by the pipeline.The original channel will still
            exist in the frame buffer.This system allows any PEP to access any number of channels for reading and
            create any number of new channels which may or may not replace existing channels depending on the channel
            id.The final stage (convert to 8-bit) operates on the channels left in the pipeline by the PEP chain to
            produce the final 32-bit RGBA image in a dib.
            
            It is also possible for a PEP to create and use any number of 'scratch' channels.If a PEP needs a
            temporary pixel buffer for some intermediate results, it can call NewChannel() with a custom (random) id.
            Once it is finished with this scratch channel, it can call Discard() on it.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">System<span id="LSTBE6C8DDF_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBE6C8DDF_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <span class="selflink">Rhino.Render.PostEffects<span id="LSTBE6C8DDF_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBE6C8DDF_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>PostEffectPipeline</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino_Render_PostEffects.htm">Rhino.Render.PostEffects</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','cs','1','2');return false;">C#</a></div><div id="ID1EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">PostEffectPipeline</span> : <span class="identifier">IDisposable</span></pre></div><div id="ID1EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">PostEffectPipeline</span>
	<span class="keyword">Implements</span> <span class="identifier">IDisposable</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBCA");</script></div><p>The <span class="selflink">PostEffectPipeline</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Render_PostEffects_PostEffectPipeline__ctor.htm">PostEffectPipeline</a></td><td><div class="summary">Initializes a new instance of the <span class="selflink">PostEffectPipeline</span> class</div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Rhino_Render_PostEffects_PostEffectPipeline_CppPointer.htm">CppPointer</a></td><td /></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Render_PostEffects_PostEffectPipeline_AllowGPU.htm">AllowGPU</a></td><td><div class="summary">
            PEP authors should check that GPU use is allowed before using the GPU in a PEP.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Render_PostEffects_PostEffectPipeline_Commit.htm">Commit</a></td><td><div class="summary">
            Commit changes to a new channel so that those changes can be used by subsequent PEPs in the chain.
            If the channel has the same id as an existing channel, the existing channel will be replaced by
            the new one.If the existing channel was created by a previous PEP in the chain, it will be deleted.
            Changes to channels that are not commited simply get ignored.
            
            This call merely sets a flag.The process is deferred until after the PEP has finished executing.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Render_PostEffects_PostEffectPipeline_DateTimeStringEnd.htm">DateTimeStringEnd</a></td><td><div class="summary">
            Formats the end time with the date and time using the user's control panel preferences.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Render_PostEffects_PostEffectPipeline_DateTimeStringStart.htm">DateTimeStringStart</a></td><td><div class="summary">
            Formats the start time with the date and time using the user's control panel preferences.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Render_PostEffects_PostEffectPipeline_Dimensions.htm">Dimensions</a></td><td><div class="summary">
            Get the dimensions of the frame buffer. All channels in the frame buffer have the same dimensions.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Render_PostEffects_PostEffectPipeline_Dispose.htm">Dispose</a></td><td><div class="summary">Releases all resources used by the <span class="selflink">PostEffectPipeline</span></div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Render_PostEffects_PostEffectPipeline_ElapsedTimeString.htm">ElapsedTimeString</a></td><td><div class="summary">
            Formats the elapsed time (start to end) as days, hours, minutes and seconds.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.equals#System_Object_Equals_System_Object_" target="_blank">Equals</a></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Render_PostEffects_PostEffectPipeline_Execute.htm">Execute</a></td><td><div class="summary">
            Execute the pipeline. This executes all the PEPs in order.
            Only this rectangle need be modified by the PEPs.
            </div></td></tr><tr data="protected;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Rhino_Render_PostEffects_PostEffectPipeline_Finalize.htm">Finalize</a></td><td> (Overrides <a href="https://docs.microsoft.com/dotnet/api/system.object.finalize#System_Object_Finalize" target="_blank">Object<span id="LSTBE6C8DDF_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBE6C8DDF_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Finalize<span id="LSTBE6C8DDF_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBE6C8DDF_3?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>.)</td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Render_PostEffects_PostEffectPipeline_FindPostEffect.htm">FindPostEffect</a></td><td><div class="summary">
            Return a pointer to the specified post effect or null if not found.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Render_PostEffects_PostEffectPipeline_GetChannel.htm">GetChannel</a></td><td><div class="summary">
            Get a channel for reading. A PEP will use this to get channel data as input to
            its process.Output will be written to new channel(s). \see NewChannel()
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Render_PostEffects_PostEffectPipeline_GetEndTimeInMilliseconds.htm">GetEndTimeInMilliseconds</a></td><td><div class="summary">
            Get the end time of the rendering expressed in milliseconds since some unspecified epoch.
            Do not make assumptions about what the epoch is; it might be different on different platforms.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.gethashcode#System_Object_GetHashCode" target="_blank">GetHashCode</a></td><td><div class="summary">Serves as the default hash function.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Render_PostEffects_PostEffectPipeline_GetMaxLuminance.htm">GetMaxLuminance</a></td><td><div class="summary">
            Get the max luminance in the rendering.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Render_PostEffects_PostEffectPipeline_GetStartTimeInMilliseconds.htm">GetStartTimeInMilliseconds</a></td><td><div class="summary">
            Get the start time of the rendering expressed in milliseconds since some unspecified epoch.
            Do not make assumptions about what the epoch is; it might be different on different platforms.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.gettype#System_Object_GetType" target="_blank">GetType</a></td><td><div class="summary">Gets the <a href="https://docs.microsoft.com/dotnet/api/system.type" target="_blank">Type</a> of the current instance.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Render_PostEffects_PostEffectPipeline_GetWatermarkText.htm">GetWatermarkText</a></td><td><div class="summary">
            Get the watermark text set by the renderer (if any).
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Render_PostEffects_PostEffectPipeline_IsRendering.htm">IsRendering</a></td><td><div class="summary">
            IsRendering
            </div></td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.memberwiseclone#System_Object_MemberwiseClone" target="_blank">MemberwiseClone</a></td><td><div class="summary">Creates a shallow copy of the current <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Render_PostEffects_PostEffectPipeline_NewChannel.htm">NewChannel</a></td><td><div class="summary">
            Create a new channel for writing. A PEP will use this to get channel(s) to write the output of its
            processing to.Input will usually come from existing channels, although a PEP is free to read
            its own output channels if needed. \see GetChannel()
            
            You are allowed to create one new channel with the same identifier as an existing channel,
            in which case Commit() will replace the existing channel with the new one in the pipeline.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Render_PostEffects_PostEffectPipeline_PostEffects.htm">PostEffects</a></td><td><div class="summary">
             Returns a list of the post effects to be executed by this pipeline in order.
             </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Render_PostEffects_PostEffectPipeline_RenderingId.htm">RenderingId</a></td><td><div class="summary">
            Return a UUID that uniquely identifies the rendering being processed.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Render_PostEffects_PostEffectPipeline_ReportProgress.htm">ReportProgress</a></td><td><div class="summary">
            PEPs should call this during execution to report progress.
            A good strategy is to call this once per pixel row (or several rows).
            If the function returns \e false, your PEP should exit its pixel loop
            as the user has requested that the operation be canceled.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Render_PostEffects_PostEffectPipeline_SetStartTimeInMilliseconds.htm">SetStartTimeInMilliseconds</a></td><td><div class="summary">
            Set the start time of the rendering in milliseconds since some unspecified epoch.
            </div></td></tr><tr data="public;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Rhino_Render_PostEffects_PostEffectPipeline_ThreadEngine.htm">ThreadEngine</a></td><td /></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="https://docs.microsoft.com/dotnet/api/system.object.tostring#System_Object_ToString" target="_blank">ToString</a></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">Object</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Fields</span></div><div id="ID6RBSection" class="collapsibleSection"><table class="members" id="fieldList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="F_Rhino_Render_PostEffects_PostEffectPipeline_ncf_File.htm">ncf_File</a></td><td /></tr><tr data="public;static;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="F_Rhino_Render_PostEffects_PostEffectPipeline_ncf_GPU.htm">ncf_GPU</a></td><td /></tr><tr data="public;static;declared;notNetfw;SHFB_VBPI_Lbl_10D3DCCA;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="F_Rhino_Render_PostEffects_PostEffectPipeline_ncf_None.htm">ncf_None</a></td><td /></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Version Information</span></div><div id="ID7RBSection" class="collapsibleSection"><h4 class="subHeading">Rhino for Windows</h4>Supported in: 7.0<br /></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID8RB')" onkeypress="SectionExpandCollapse_CheckKey('ID8RB', event)" tabindex="0"><img id="ID8RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID8RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Rhino_Render_PostEffects.htm">Rhino.Render.PostEffects Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.0.20112.12440 (Last updated: 4/28/2020)<br />Copyright © 2009-2020 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>