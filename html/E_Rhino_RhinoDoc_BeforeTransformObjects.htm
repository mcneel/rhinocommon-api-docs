<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>RhinoDoc.BeforeTransformObjects Event</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="BeforeTransformObjects event" /><meta name="System.Keywords" content="RhinoDoc.BeforeTransformObjects event" /><meta name="Microsoft.Help.F1" content="Rhino.RhinoDoc.BeforeTransformObjects" /><meta name="Microsoft.Help.Id" content="E:Rhino.RhinoDoc.BeforeTransformObjects" /><meta name="Description" content="Called before objects are being transformed" /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Rhino" /><meta name="file" content="E_Rhino_RhinoDoc_BeforeTransformObjects" /><meta name="guid" content="E_Rhino_RhinoDoc_BeforeTransformObjects" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">RhinoCommon API<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="RhinoCommon API" tocid="roottoc">RhinoCommon API</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/R_Project_RhinoCommon.htm" title="Namespaces" tocid="R_Project_RhinoCommon">Namespaces</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Rhino.htm" title="Rhino" tocid="N_Rhino">Rhino</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_Rhino_RhinoDoc.htm" title="RhinoDoc Class" tocid="T_Rhino_RhinoDoc">RhinoDoc Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Events_T_Rhino_RhinoDoc.htm" title="RhinoDoc Events" tocid="Events_T_Rhino_RhinoDoc">RhinoDoc Events</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_ActiveDocumentChanged.htm" title="ActiveDocumentChanged Event" tocid="E_Rhino_RhinoDoc_ActiveDocumentChanged">ActiveDocumentChanged Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_AddRhinoObject.htm" title="AddRhinoObject Event" tocid="E_Rhino_RhinoDoc_AddRhinoObject">AddRhinoObject Event</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_BeforeTransformObjects.htm" title="BeforeTransformObjects Event" tocid="E_Rhino_RhinoDoc_BeforeTransformObjects">BeforeTransformObjects Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_BeginOpenDocument.htm" title="BeginOpenDocument Event" tocid="E_Rhino_RhinoDoc_BeginOpenDocument">BeginOpenDocument Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_BeginSaveDocument.htm" title="BeginSaveDocument Event" tocid="E_Rhino_RhinoDoc_BeginSaveDocument">BeginSaveDocument Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_CloseDocument.htm" title="CloseDocument Event" tocid="E_Rhino_RhinoDoc_CloseDocument">CloseDocument Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_DeleteRhinoObject.htm" title="DeleteRhinoObject Event" tocid="E_Rhino_RhinoDoc_DeleteRhinoObject">DeleteRhinoObject Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_DeselectAllObjects.htm" title="DeselectAllObjects Event" tocid="E_Rhino_RhinoDoc_DeselectAllObjects">DeselectAllObjects Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_DeselectObjects.htm" title="DeselectObjects Event" tocid="E_Rhino_RhinoDoc_DeselectObjects">DeselectObjects Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_DimensionStyleTableEvent.htm" title="DimensionStyleTableEvent Event" tocid="E_Rhino_RhinoDoc_DimensionStyleTableEvent">DimensionStyleTableEvent Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_DocumentPropertiesChanged.htm" title="DocumentPropertiesChanged Event" tocid="E_Rhino_RhinoDoc_DocumentPropertiesChanged">DocumentPropertiesChanged Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_EndOpenDocument.htm" title="EndOpenDocument Event" tocid="E_Rhino_RhinoDoc_EndOpenDocument">EndOpenDocument Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_EndOpenDocumentInitialViewUpdate.htm" title="EndOpenDocumentInitialViewUpdate Event" tocid="E_Rhino_RhinoDoc_EndOpenDocumentInitialViewUpdate">EndOpenDocumentInitialViewUpdate Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_EndSaveDocument.htm" title="EndSaveDocument Event" tocid="E_Rhino_RhinoDoc_EndSaveDocument">EndSaveDocument Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_GroupTableEvent.htm" title="GroupTableEvent Event" tocid="E_Rhino_RhinoDoc_GroupTableEvent">GroupTableEvent Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_InstanceDefinitionTableEvent.htm" title="InstanceDefinitionTableEvent Event" tocid="E_Rhino_RhinoDoc_InstanceDefinitionTableEvent">InstanceDefinitionTableEvent Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_LayerTableEvent.htm" title="LayerTableEvent Event" tocid="E_Rhino_RhinoDoc_LayerTableEvent">LayerTableEvent Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_LightTableEvent.htm" title="LightTableEvent Event" tocid="E_Rhino_RhinoDoc_LightTableEvent">LightTableEvent Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_MaterialTableEvent.htm" title="MaterialTableEvent Event" tocid="E_Rhino_RhinoDoc_MaterialTableEvent">MaterialTableEvent Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_ModifyObjectAttributes.htm" title="ModifyObjectAttributes Event" tocid="E_Rhino_RhinoDoc_ModifyObjectAttributes">ModifyObjectAttributes Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_NewDocument.htm" title="NewDocument Event" tocid="E_Rhino_RhinoDoc_NewDocument">NewDocument Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_PurgeRhinoObject.htm" title="PurgeRhinoObject Event" tocid="E_Rhino_RhinoDoc_PurgeRhinoObject">PurgeRhinoObject Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_RenderEnvironmentTableEvent.htm" title="RenderEnvironmentTableEvent Event" tocid="E_Rhino_RhinoDoc_RenderEnvironmentTableEvent">RenderEnvironmentTableEvent Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_RenderMaterialsTableEvent.htm" title="RenderMaterialsTableEvent Event" tocid="E_Rhino_RhinoDoc_RenderMaterialsTableEvent">RenderMaterialsTableEvent Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_RenderTextureTableEvent.htm" title="RenderTextureTableEvent Event" tocid="E_Rhino_RhinoDoc_RenderTextureTableEvent">RenderTextureTableEvent Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_ReplaceRhinoObject.htm" title="ReplaceRhinoObject Event" tocid="E_Rhino_RhinoDoc_ReplaceRhinoObject">ReplaceRhinoObject Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_SelectObjects.htm" title="SelectObjects Event" tocid="E_Rhino_RhinoDoc_SelectObjects">SelectObjects Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_TextureMappingEvent.htm" title="TextureMappingEvent Event" tocid="E_Rhino_RhinoDoc_TextureMappingEvent">TextureMappingEvent Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_UndeleteRhinoObject.htm" title="UndeleteRhinoObject Event" tocid="E_Rhino_RhinoDoc_UndeleteRhinoObject">UndeleteRhinoObject Event</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/E_Rhino_RhinoDoc_UserStringChanged.htm" title="UserStringChanged Event" tocid="E_Rhino_RhinoDoc_UserStringChanged">UserStringChanged Event</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>RhinoDoc<span id="LST7047A6D_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7047A6D_0?cpp=::|nu=.");</script>BeforeTransformObjects Event</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Called before objects are being transformed
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Rhino.htm">Rhino</a><br />
    <strong>Assembly:</strong>
   RhinoCommon (in RhinoCommon.dll)<div class="since"><strong>Since:</strong> 5.10</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> event <span class="identifier">EventHandler</span>&lt;<span class="identifier">RhinoTransformObjectsEventArgs</span>&gt; <span class="identifier">BeforeTransformObjects</span></pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Shared</span> Event <span class="identifier">BeforeTransformObjects</span> <span class="keyword">As</span> <span class="identifier">EventHandler</span>(<span class="keyword">Of</span> <span class="identifier">RhinoTransformObjectsEventArgs</span>)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Value</h4>Type: <a href="https://docs.microsoft.com/dotnet/api/system.eventhandler-1" target="_blank">System<span id="LST7047A6D_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7047A6D_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>EventHandler</a><span id="LST7047A6D_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7047A6D_2?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="T_Rhino_DocObjects_RhinoTransformObjectsEventArgs.htm">RhinoTransformObjectsEventArgs</a><span id="LST7047A6D_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7047A6D_3?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBABBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBABBA','cs','1','2');return false;">C#</a></div><div id="ID0EBABBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBABBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBABBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Rhino;
<span class="highlight-keyword">using</span> Rhino.DocObjects;
<span class="highlight-keyword">using</span> Rhino.Geometry;
<span class="highlight-keyword">using</span> Rhino.Commands;
<span class="highlight-keyword">using</span> Rhino.Input.Custom;
<span class="highlight-keyword">using</span> Rhino.Display;

<span class="highlight-keyword">namespace</span> examples_cs
{
  <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> GetTranslation : GetTransform
  {
    <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> Transform CalculateTransform(RhinoViewport viewport, Point3d point)
    {
      <span class="highlight-keyword">var</span> xform = Transform.Identity;
      Point3d base_point;
      <span class="highlight-keyword">if</span> (TryGetBasePoint(<span class="highlight-keyword">out</span> base_point))
      {
        <span class="highlight-keyword">var</span> v = point - base_point;
        <span class="highlight-keyword">if</span> (!v.IsZero)
        {
          xform = Transform.Translation(v);
          <span class="highlight-keyword">if</span> (!xform.IsValid)
            xform = Transform.Identity;
        }
      }
      <span class="highlight-keyword">return</span> xform;
    }
  }

  <span class="highlight-keyword">public</span> <span class="highlight-keyword">class</span> RhinoGetTransformCommand : TransformCommand
  {
    <span class="highlight-keyword">public</span> RhinoGetTransformCommand()
    {
      <span class="highlight-comment">// simple example of handling the BeforeTransformObjects event</span>
      RhinoDoc.BeforeTransformObjects += RhinoDocOnBeforeTransformObjects;
    }

    <span class="highlight-keyword">private</span> <span class="highlight-keyword">void</span> RhinoDocOnBeforeTransformObjects(<span class="highlight-keyword">object</span> sender, RhinoTransformObjectsEventArgs ea)
    {
      RhinoApp.WriteLine(<span class="highlight-literal">"Transform Objects Count: {0}"</span>, ea.ObjectCount);
    }

    <span class="highlight-keyword">public</span> <span class="highlight-keyword">override</span> <span class="highlight-keyword">string</span> EnglishName { <span class="highlight-keyword">get</span> { <span class="highlight-keyword">return</span> <span class="highlight-literal">"csGetTranslation"</span>; } }

    <span class="highlight-keyword">protected</span> <span class="highlight-keyword">override</span> Result RunCommand(RhinoDoc doc, RunMode mode)
    {
      <span class="highlight-keyword">var</span> list = <span class="highlight-keyword">new</span> Rhino.Collections.TransformObjectList();
      <span class="highlight-keyword">var</span> rc = SelectObjects(<span class="highlight-literal">"Select objects to move"</span>, list);
      <span class="highlight-keyword">if</span> (rc != Rhino.Commands.Result.Success)
        <span class="highlight-keyword">return</span> rc;

      <span class="highlight-keyword">var</span> gp = <span class="highlight-keyword">new</span> GetPoint();
      gp.SetCommandPrompt(<span class="highlight-literal">"Point to move from"</span>);
      gp.Get();
      <span class="highlight-keyword">if</span> (gp.CommandResult() != Result.Success)
        <span class="highlight-keyword">return</span> gp.CommandResult();


      <span class="highlight-keyword">var</span> gt = <span class="highlight-keyword">new</span> GetTranslation();
      gt.SetCommandPrompt(<span class="highlight-literal">"Point to move to"</span>);
      gt.SetBasePoint(gp.Point(), <span class="highlight-keyword">true</span>);
      gt.DrawLineFromPoint(gp.Point(), <span class="highlight-keyword">true</span>);
      gt.AddTransformObjects(list);
      gt.GetXform();
      <span class="highlight-keyword">if</span> (gt.CommandResult() != Result.Success)
        <span class="highlight-keyword">return</span> gt.CommandResult();

      <span class="highlight-keyword">var</span> xform = gt.CalculateTransform(gt.View().ActiveViewport, gt.Point());
      TransformObjects(list, xform, <span class="highlight-keyword">false</span>, <span class="highlight-keyword">false</span>);
      doc.Views.Redraw();
      <span class="highlight-keyword">return</span> Result.Success;
    }
  }
}</pre></div><div id="ID0EBABBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-keyword">Imports</span> Rhino
<span class="highlight-keyword">Imports</span> Rhino.DocObjects
<span class="highlight-keyword">Imports</span> Rhino.Geometry
<span class="highlight-keyword">Imports</span> Rhino.Commands
<span class="highlight-keyword">Imports</span> Rhino.Input.Custom
<span class="highlight-keyword">Imports</span> Rhino.Display

<span class="highlight-keyword">Namespace</span> examples_vb
  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> GetTranslation
    <span class="highlight-keyword">Inherits</span> GetTransform
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">Function</span> CalculateTransform(viewport <span class="highlight-keyword">As</span> RhinoViewport, point <span class="highlight-keyword">As</span> Point3d) <span class="highlight-keyword">As</span> Transform
      <span class="highlight-keyword">Dim</span> xform = Transform.Identity
      <span class="highlight-keyword">Dim</span> base_point <span class="highlight-keyword">As</span> Point3d
      <span class="highlight-keyword">If</span> TryGetBasePoint(base_point) <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Dim</span> v = point - base_point
        <span class="highlight-keyword">If</span> <span class="highlight-keyword">Not</span> v.IsZero <span class="highlight-keyword">Then</span>
          xform = Transform.Translation(v)
          <span class="highlight-keyword">If</span> <span class="highlight-keyword">Not</span> xform.IsValid <span class="highlight-keyword">Then</span>
            xform = Transform.Identity
          <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
        <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>
      <span class="highlight-keyword">Return</span> xform
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span>

  <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Class</span> RhinoGetTransformCommand
    <span class="highlight-keyword">Inherits</span> TransformCommand
    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Sub</span> <span class="highlight-keyword">New</span>()
      <span class="highlight-comment">' simple example of handling the BeforeTransformObjects event</span>
      <span class="highlight-keyword">AddHandler</span> RhinoDoc.BeforeTransformObjects, <span class="highlight-keyword">AddressOf</span> RhinoDocOnBeforeTransformObjects
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>

    <span class="highlight-keyword">Private</span> <span class="highlight-keyword">Sub</span> RhinoDocOnBeforeTransformObjects(sender <span class="highlight-keyword">As</span> <span class="highlight-keyword">Object</span>, ea <span class="highlight-keyword">As</span> RhinoTransformObjectsEventArgs)
      RhinoApp.WriteLine(<span class="highlight-literal">"Transform Objects Count: {0}"</span>, ea.ObjectCount)
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>

    <span class="highlight-keyword">Public</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">ReadOnly</span> <span class="highlight-keyword">Property</span> EnglishName() <span class="highlight-keyword">As</span> <span class="highlight-keyword">String</span>
      <span class="highlight-keyword">Get</span>
        <span class="highlight-keyword">Return</span> <span class="highlight-literal">"vbGetTranslation"</span>
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">Get</span>
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Property</span>

    <span class="highlight-keyword">Protected</span> <span class="highlight-keyword">Overrides</span> <span class="highlight-keyword">Function</span> RunCommand(doc <span class="highlight-keyword">As</span> RhinoDoc, mode <span class="highlight-keyword">As</span> RunMode) <span class="highlight-keyword">As</span> Result
      <span class="highlight-keyword">Dim</span> list = <span class="highlight-keyword">New</span> Rhino.Collections.TransformObjectList()
      <span class="highlight-keyword">Dim</span> rc = SelectObjects(<span class="highlight-literal">"Select objects to move"</span>, list)
      <span class="highlight-keyword">If</span> rc &lt;&gt; Rhino.Commands.Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> rc
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-keyword">Dim</span> gp = <span class="highlight-keyword">New</span> GetPoint()
      gp.SetCommandPrompt(<span class="highlight-literal">"Point to move from"</span>)
      gp.[<span class="highlight-keyword">Get</span>]()
      <span class="highlight-keyword">If</span> gp.CommandResult() &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> gp.CommandResult()
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>


      <span class="highlight-keyword">Dim</span> gt = <span class="highlight-keyword">New</span> GetTranslation()
      gt.SetCommandPrompt(<span class="highlight-literal">"Point to move to"</span>)
      gt.SetBasePoint(gp.Point(), <span class="highlight-keyword">True</span>)
      gt.DrawLineFromPoint(gp.Point(), <span class="highlight-keyword">True</span>)
      gt.AddTransformObjects(list)
      gt.GetXform()
      <span class="highlight-keyword">If</span> gt.CommandResult() &lt;&gt; Result.Success <span class="highlight-keyword">Then</span>
        <span class="highlight-keyword">Return</span> gt.CommandResult()
      <span class="highlight-keyword">End</span> <span class="highlight-keyword">If</span>

      <span class="highlight-keyword">Dim</span> xform = gt.CalculateTransform(gt.View().ActiveViewport, gt.Point())
      TransformObjects(list, xform, <span class="highlight-keyword">False</span>, <span class="highlight-keyword">False</span>)
      doc.Views.Redraw()
      <span class="highlight-keyword">Return</span> Result.Success
    <span class="highlight-keyword">End</span> <span class="highlight-keyword">Function</span>
  <span class="highlight-keyword">End</span> <span class="highlight-keyword">Class</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">Namespace</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Rhino_RhinoDoc.htm">RhinoDoc Class</a></div><div class="seeAlsoStyle"><a href="N_Rhino.htm">Rhino Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Rhino 7.18.22124.03000 (Last updated: 5/10/2022)<br />Copyright © 2009-2022 Robert McNeel &amp; Associates<p><a href="https://discourse.mcneel.com/c/rhino-developer" target="_blank">Report wishes and bugs at discourse.mcneel.com</a></p> </div></body></html>